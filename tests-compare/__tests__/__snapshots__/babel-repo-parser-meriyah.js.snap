// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/for-missing-semicolons/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Expected ';' (3:3)
  1 | for (
  2 |   var a = 1
> 3 |   a < 3
    |   ^
  4 |   a++
  5 | ) {
  6 |],
  "input": "for (
  var a = 1
  a < 3
  a++
) {

}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-assignment-pattern-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid left-hand side in assignment (1:9)
> 1 | (a = 1) = t
    |         ^],
  "input": "(a = 1) = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-assignment-pattern-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | [(a = 1)] = t
    |             ^],
  "input": "[(a = 1)] = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-assignment-pattern-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid left-hand side in assignment (1:21)
> 1 | [({ a: [b = 2]})] = t
    |                     ^],
  "input": "[({ a: [b = 2]})] = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-assignment-pattern-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Invalid left-hand side in assignment (1:22)
> 1 | [{b: [([a = 1])]}] = t 
    |                      ^],
  "input": "[{b: [([a = 1])]}] = t ",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-assignment-pattern-5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid left-hand side in assignment (1:11)
> 1 | [([x])] = t;
    |           ^],
  "input": "[([x])] = t;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-fn-decl-inside-loop/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: In strict mode code, functions can only be declared at top level or inside a block (1:18)
> 1 | while (1) function foo(){}
    |                  ^],
  "input": "while (1) function foo(){}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/invalid-fn-decl-labeled-inside-loop/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: In strict mode code, functions can only be declared at top level or inside a block (1:28)
> 1 | while (1) foo: bar: function foo(){}
    |                            ^],
  "input": "while (1) foo: bar: function foo(){}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/malformed-switch/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:5]: Expected 'default' (2:5)
  1 | switch (x) {
> 2 |   var y = 5;
    |     ^
  3 | }],
  "input": "switch (x) {
  var y = 5;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/categorized/not-directive/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [17:2]: Octal escape sequences are not allowed in strict mode (17:2)
  15 |
  16 | // Should not be a syntax error because should not be parsed in strict mode.
> 17 | "\\5";
     |  ^
  18 |
  19 | function f(){
  20 |   "use strict".foo;],
  "input": "(\\"use strict\\");

\\"use strict\\".foo;
\\"use strict\\"[foo];
\\"use strict\\"\`foo\`;
\\"use strict\\"(foo);
\\"use strict\\"
  .foo;
\\"use strict\\"
  [foo];
\\"use strict\\"
  \`foo\`;
\\"use strict\\"
  (foo);

// Should not be a syntax error because should not be parsed in strict mode.
\\"\\\\5\\";

function f(){
  \\"use strict\\".foo;
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"[foo];
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"\`foo\`;
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"(foo);
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"
  .foo;
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"
  [foo];
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"
  \`foo\`;
  \\"\\\\5\\";
}

function f(){
  \\"use strict\\"
  (foo);
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\".bar;
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"[bar];
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"\`bar\`;
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"(bar);
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"
  .bar;
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"
  [bar];
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"
  \`bar\`;
  \\"\\\\5\\";
}

function f(){
  foo();
  \\"use strict\\"
  (bar);
  \\"\\\\5\\";
}

function f(){
  05;
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | ({x}) = {x: 1};
    |       ^
  2 |],
  "input": "({x}) = {x: 1};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Invalid left-hand side in assignment (1:22)
> 1 | [{b: [([a = 1])]}] = t
    |                      ^],
  "input": "[{b: [([a = 1])]}] = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid left-hand side in assignment (1:21)
> 1 | [({ a: [b = 2]})] = t
    |                     ^],
  "input": "[({ a: [b = 2]})] = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | [(a = 1)] = t
    |             ^],
  "input": "[(a = 1)] = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern-5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid left-hand side in assignment (1:9)
> 1 | (a = 1) = t
    |         ^],
  "input": "(a = 1) = t",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-assignment-pattern-6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | ([a]) = []
    |       ^
  2 |],
  "input": "([a]) = []
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-parenthesized-left-hand-side/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | (!a) += 1
    |       ^
  2 |],
  "input": "(!a) += 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/invalid-pattern-in-rest-binding/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: The left-hand side of the arrow can only be destructed through assignment (1:13)
> 1 | ([...(a)]) => {}
    |             ^
  2 |],
  "input": "([...(a)]) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/create-parenthesized-expressions/valid-parenthesized-assignment-array-pattern-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid left-hand side in assignment (1:11)
> 1 | [([x])] = t;
    |           ^],
  "input": "[([x])] = t;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/escape-string/invalid-decimal-escape-strict-directive/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in strict mode (1:2)
> 1 | "\\01 foo \\02 bar \\03";
    |  ^
  2 |
  3 | "\\4";
  4 | "\\5";],
  "input": "\\"\\\\01 foo \\\\02 bar \\\\03\\";

\\"\\\\4\\";
\\"\\\\5\\";

\\"use strict\\";

\\"\\\\4\\";
\\"\\\\5\\";

\\"\\\\04 foo \\\\05 bar \\\\06\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/escape-string/invalid-decimal-escape-strict-directive-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:4]: Octal escape sequences are not allowed in strict mode (2:4)
  1 | function a() {
> 2 |   "\\5";
    |    ^
  3 |   "use strict";
  4 | }
  5 |],
  "input": "function a() {
  \\"\\\\5\\";
  \\"use strict\\";
}

function b() {
  \\"\\\\4\\";
  \\"\\\\5\\";
  \\"use strict\\";
}

function c() {
  \\"use strict\\";
  \\"\\\\5\\";
}

function d() {
  \\"use strict\\";
  \\"\\\\4\\";
  \\"\\\\5\\";
}

",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/escape-string/numeric-escape-in-directive/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:69]: Octal escape sequences are not allowed in strict mode (1:69)
> 1 | function hello() { "use strict"; function inner() { "octal directive\\1"; } }
    |                                                                     ^],
  "input": "function hello() { \\"use strict\\"; function inner() { \\"octal directive\\\\1\\"; } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/escape-string/numeric-escape-in-property-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Octal escape sequences are not allowed in strict mode (1:38)
> 1 | function hello() { 'use strict'; ({ "\\1": 42 }); }
    |                                      ^],
  "input": "function hello() { 'use strict'; ({ \\"\\\\1\\": 42 }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/legacy-octal/legacy-octal-after-use-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Octal escape sequences are not allowed in strict mode (1:15)
> 1 | "use strict"; 04; 05;
    |               ^
  2 |],
  "input": "\\"use strict\\"; 04; 05;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/legacy-octal/legacy-octal-after-use-strict-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Octal escape sequences are not allowed in strict mode (3:3)
  1 | function c() {
  2 |   "use strict";
> 3 |   05;
    |   ^
  4 | }
  5 |
  6 | function d() {],
  "input": "function c() {
  \\"use strict\\";
  05;
}

function d() {
  \\"use strict\\";
  04;
  05;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/object/invalid-escape-get/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: 'Unexpected token: 'escaped keyword' (1:7)
> 1 | ({ ge\\u0074 x() {} })
    |       ^
  2 |],
  "input": "({ ge\\\\u0074 x() {} })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/object/invalid-property-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:2]: Invalid shorthand property initializer (4:2)
  2 |   foo = 123,
  3 |   bar: x = 123
> 4 | };
    |  ^
  5 |],
  "input": "const obj = {
  foo = 123,
  bar: x = 123
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/object/invalid-property-initializer-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:2]: Invalid shorthand property initializer (4:2)
  2 |   bar: x = 123,
  3 |   foo = 123
> 4 | };
    |  ^
  5 |],
  "input": "const obj = {
  bar: x = 123,
  foo = 123
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/object/invalid-setter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Setter functions must have exactly one argument (1:10)
> 1 | ({ set x(){} })
    |          ^
  2 |],
  "input": "({ set x(){} })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/opts/allowAwaitOutsideFunction-false/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Expected '(' (1:9)
> 1 | for await (const i of imports) {}
    |         ^
  2 |],
  "input": "for await (const i of imports) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/opts/allowAwaitOutsideFunction-true/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Expected '(' (1:9)
> 1 | for await (const i of imports) {}
    |         ^
  2 |],
  "input": "for await (const i of imports) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/regression/2591/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Unexpected token: '/' (3:3)
  1 | function x() {
  2 |   let x
> 3 |   /wow/;
    |   ^
  4 | }
  5 |],
  "input": "function x() {
  let x
  /wow/;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/regression/T2921/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '=' (1:5)
> 1 | a <== b;
    |     ^
  2 |],
  "input": "a <== b;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/regression/octal-float-fail/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 07.5
    | ^
  2 |],
  "input": "07.5
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/scope/undecl-export-if/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: In strict mode code, functions can only be declared at top level or inside a block (2:18)
  1 | export { encrypt };
> 2 | if (true) function encrypt() {}
    |                  ^
  3 |],
  "input": "export { encrypt };
if (true) function encrypt() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/sourcetype-unambiguous/flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Import source must be string (1:13)
> 1 | import type { Foo } from "bar";
    |             ^
  2 | export type { Foo };
  3 | export type * from "bar";
  4 |],
  "input": "import type { Foo } from \\"bar\\";
export type { Foo };
export type * from \\"bar\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/108/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: 'identifier' (1:16)
> 1 | var x = /[P QR]/\\u0067
    |                ^],
  "input": "var x = /[P QR]/\\\\u0067",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/345/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: 'end of source' (1:1)
> 1 | {
    | ^],
  "input": "{",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/346/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '}' (1:1)
> 1 | }
    | ^],
  "input": "}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/347/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Non-number found after exponent indicator (1:2)
> 1 | 3ea
    |  ^],
  "input": "3ea",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/348/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3in []
    | ^],
  "input": "3in []",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/349/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Non-number found after exponent indicator (1:2)
> 1 | 3e
    |  ^],
  "input": "3e",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/350/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Non-number found after exponent indicator (1:3)
> 1 | 3e+
    |   ^],
  "input": "3e+",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/351/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Non-number found after exponent indicator (1:3)
> 1 | 3e-
    |   ^],
  "input": "3e-",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/352/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3x
    | ^],
  "input": "3x",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/353/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3x0
    | ^],
  "input": "3x0",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/354/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Missing hexadecimal digits (1:2)
> 1 | 0x
    |  ^],
  "input": "0x",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/357/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 01a
    | ^],
  "input": "01a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/358/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3in[]
    | ^],
  "input": "3in[]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/359/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0x3in[]
    |   ^],
  "input": "0x3in[]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/360/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unterminated string literal (1:6)
> 1 | "Hello
    |      ^
  2 | World"],
  "input": "\\"Hello
World\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/361/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\
    | ^],
  "input": "x\\\\",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/362/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\u005c
    | ^],
  "input": "x\\\\u005c",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/363/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\u002a
    | ^],
  "input": "x\\\\u002a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/364/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '/' (1:1)
> 1 | /
    | ^],
  "input": "/",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/365/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unterminated regular expression (1:5)
> 1 | /test
    |     ^],
  "input": "/test",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/366/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid hexadecimal escape sequence (1:15)
> 1 | var x = /[a-z]/\\ux
    |               ^],
  "input": "var x = /[a-z]/\\\\ux",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/367/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid left-hand side in assignment (1:3)
> 1 | 3 = 4
    |   ^],
  "input": "3 = 4",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/368/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Invalid left-hand side in assignment (1:8)
> 1 | func() = 4
    |        ^],
  "input": "func() = 4",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/369/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid left-hand side in assignment (1:9)
> 1 | (1 + 1) = 10
    |         ^],
  "input": "(1 + 1) = 10",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/370/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | 1++
    |   ^],
  "input": "1++",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/371/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | 1--
    |   ^],
  "input": "1--",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/372/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | ++1
    |   ^],
  "input": "++1",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/373/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | --1
    |   ^],
  "input": "--1",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/374/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid left-hand side in for-in (1:14)
> 1 | for((1 + 1) in list) process(x);
    |              ^],
  "input": "for((1 + 1) in list) process(x);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/375/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: 'end of source' (1:1)
> 1 | [
    | ^],
  "input": "[",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/376/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token: 'end of source' (1:2)
> 1 | [,
    |  ^],
  "input": "[,",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/377/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'end of source' (1:5)
> 1 | 1 + {
    |     ^],
  "input": "1 + {",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/378/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected '}' (2:0)
  1 | 1 + { t:t
> 2 |],
  "input": "1 + { t:t
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/379/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'end of source' (1:10)
> 1 | 1 + { t:t,
    |          ^],
  "input": "1 + { t:t,",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/380/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unterminated regular expression (1:10)
> 1 | var x = /
    |          ^
  2 | /],
  "input": "var x = /
/",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/381/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unterminated string literal (1:9)
> 1 | var x = "
    |         ^
  2 |],
  "input": "var x = \\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/382/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid keyword (1:6)
> 1 | var if = 42
    |      ^],
  "input": "var if = 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/383/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | i + 2 = 42
    |       ^],
  "input": "i + 2 = 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/384/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid left-hand side in assignment (1:4)
> 1 | +i = 42
    |    ^],
  "input": "+i = 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/385/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'end of source' (1:5)
> 1 | 1 + (
    |     ^],
  "input": "1 + (",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/386/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:1]: Unexpected token: 'end of source' (4:1)
  2 |
  3 |
> 4 | {
    | ^],
  "input": "


{",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/387/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:1]: Unexpected token: ')' (4:1)
  2 | /* Some multiline
  3 | comment */
> 4 | )
    | ^],
  "input": "
/* Some multiline
comment */
)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/388/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'number' (1:7)
> 1 | { set 1 }
    |       ^],
  "input": "{ set 1 }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/389/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'number' (1:7)
> 1 | { get 2 }
    |       ^],
  "input": "{ get 2 }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/390/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'if' (1:12)
> 1 | ({ set: s(if) { } })
    |            ^],
  "input": "({ set: s(if) { } })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/391/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected ')' (1:10)
> 1 | ({ set s(.) { } })
    |          ^],
  "input": "({ set s(.) { } })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/392/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected '}' (1:13)
> 1 | ({ set: s() { } })
    |             ^],
  "input": "({ set: s() { } })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/393/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Expected '}' (1:17)
> 1 | ({ set: s(a, b) { } })
    |                 ^],
  "input": "({ set: s(a, b) { } })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/394/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '}' (1:14)
> 1 | ({ get: g(d) { } })
    |              ^],
  "input": "({ get: g(d) { } })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/395/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: The rest operator is missing an argument (1:15)
> 1 | function t(...) { }
    |               ^],
  "input": "function t(...) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/396/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: The binding declaration is not destructible (1:19)
> 1 | function t(...rest, b) { }
    |                   ^],
  "input": "function t(...rest, b) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/397/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | function t(if) { }
    |             ^],
  "input": "function t(if) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/398/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid keyword (1:15)
> 1 | function t(true) { }
    |               ^],
  "input": "function t(true) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/399/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Invalid keyword (1:16)
> 1 | function t(false) { }
    |                ^],
  "input": "function t(false) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/400/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid keyword (1:15)
> 1 | function t(null) { }
    |               ^],
  "input": "function t(null) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/401/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | function null() { }
    |             ^],
  "input": "function null() { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/402/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | function true() { }
    |             ^],
  "input": "function true() { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/403/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid keyword (1:14)
> 1 | function false() { }
    |              ^],
  "input": "function false() { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/404/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid keyword (1:11)
> 1 | function if() { }
    |           ^],
  "input": "function if() { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/405/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: 'identifier' (1:3)
> 1 | a b;
    |   ^],
  "input": "a b;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/406/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Expected '(' (1:3)
> 1 | if.a;
    |   ^],
  "input": "if.a;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/407/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'if' (1:4)
> 1 | a if;
    |    ^],
  "input": "a if;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/408/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'class' (1:7)
> 1 | a class;
    |       ^],
  "input": "a class;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/409/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Illegal break statement (2:0)
  1 | break
> 2 |],
  "input": "break
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/410/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Illegal break statement (1:7)
> 1 | break 1;
    |       ^],
  "input": "break 1;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/411/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue
    |        ^
  2 |],
  "input": "continue
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/412/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue 2;
    |        ^],
  "input": "continue 2;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/413/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'end of source' (1:5)
> 1 | throw
    |     ^],
  "input": "throw",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/414/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: ';' (1:6)
> 1 | throw;
    |      ^],
  "input": "throw;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/415/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid left-hand side in for-in loop: Must have a single binding (1:17)
> 1 | for (var i, i2 in {});
    |                 ^],
  "input": "for (var i, i2 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/416/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Expected ';' (1:15)
> 1 | for ((i in {}));
    |               ^],
  "input": "for ((i in {}));",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/417/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected ';' (1:13)
> 1 | for (i + 1 in {});
    |             ^],
  "input": "for (i + 1 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/418/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid left-hand side in for-in (1:10)
> 1 | for (+i in {});
    |          ^],
  "input": "for (+i in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/419/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: 'end of source' (1:9)
> 1 | if(false)
    |         ^],
  "input": "if(false)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/420/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected token: 'end of source' (1:24)
> 1 | if(false) doThis(); else
    |                        ^],
  "input": "if(false) doThis(); else",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/421/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token: 'end of source' (1:2)
> 1 | do
    |  ^],
  "input": "do",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/422/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'end of source' (1:12)
> 1 | while(false)
    |            ^],
  "input": "while(false)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/423/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'end of source' (1:7)
> 1 | for(;;)
    |       ^],
  "input": "for(;;)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/424/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Strict mode code may not include a with statement (1:5)
> 1 | with(x)
    |     ^],
  "input": "with(x)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/425/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Missing catch or finally after try (1:7)
> 1 | try { }
    |       ^],
  "input": "try { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/426/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal character '‿' (1:0)
> 1 | ‿ = 10],
  "input": "‿ = 10",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/427/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: More than one default clause in switch statement (1:30)
> 1 | switch (c) { default: default: }
    |                              ^],
  "input": "switch (c) { default: default: }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/428/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Dot property must be an identifier (1:11)
> 1 | new X()."s"
    |           ^],
  "input": "new X().\\"s\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/429/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Multiline comment was not closed properly (1:2)
> 1 | /*
    |  ^],
  "input": "/*",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/430/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:0]: Multiline comment was not closed properly (4:0)
  2 |
  3 |
> 4 |],
  "input": "/*


",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/431/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Multiline comment was not closed properly (1:3)
> 1 | /**
    |   ^],
  "input": "/**",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/432/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Multiline comment was not closed properly (3:1)
  1 | /*
  2 |
> 3 | *
    | ^],
  "input": "/*

*",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/433/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Multiline comment was not closed properly (1:7)
> 1 | /*hello
    |       ^],
  "input": "/*hello",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/434/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Multiline comment was not closed properly (1:10)
> 1 | /*hello  *
    |          ^],
  "input": "/*hello  *",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/435/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Unexpected token: ']' (2:1)
  1 |
> 2 | ]
    | ^],
  "input": "
]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/436/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Unexpected token: ']' (2:1)
  1 |
> 2 | ]
    | ^],
  "input": "
]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/437/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Unexpected token: ']' (2:1)
  1 |
> 2 | ]
    | ^],
  "input": "
]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/438/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ']' (3:1)
  1 |
  2 |
> 3 | ]
    | ^],
  "input": "

]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/439/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Unexpected token: ']' (2:1)
  1 | //
> 2 | ]
    | ^],
  "input": "//
]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/440/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ']' (3:1)
  1 | //
  2 |
> 3 | ]
    | ^],
  "input": "//

]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/442/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ']' (3:1)
  1 | //
  2 |  
> 3 | ]
    | ^],
  "input": "//
 
]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/443/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: Unexpected token: ']' (2:3)
  1 | /*
> 2 | */]
    |   ^],
  "input": "/*
*/]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/444/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Unexpected token: ']' (3:3)
  1 | /*
  2 |
> 3 | */]
    |   ^],
  "input": "/*

*/]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/445/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Unexpected token: ']' (3:3)
  1 | /*
  2 |  
> 3 | */]
    |   ^],
  "input": "/*
 
*/]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/446/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\\\],
  "input": "\\\\\\\\",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/447/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\u005c],
  "input": "\\\\u005c",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/448/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\x],
  "input": "\\\\x",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/449/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\u0000],
  "input": "\\\\u0000",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/450/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal character '‌' (1:0)
> 1 | ‌ = []],
  "input": "‌ = []",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/451/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal character '‍' (1:0)
> 1 | ‍ = []],
  "input": "‍ = []",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/452/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unterminated string literal (1:2)
> 1 | "\\
    |  ^],
  "input": "\\"\\\\",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/453/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u
    |   ^],
  "input": "\\"\\\\u",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/455/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Illegal break statement (1:5)
> 1 | break
    |     ^],
  "input": "break",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/456/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue
    |        ^],
  "input": "continue",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/457/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Illegal continue statement (1:30)
> 1 | switch (x) { default: continue; }
    |                              ^],
  "input": "switch (x) { default: continue; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/458/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected 'while' (1:10)
> 1 | do { x } *
    |          ^],
  "input": "do { x } *",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/459/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Undefined label 'x' (1:23)
> 1 | while (true) { break x; }
    |                       ^],
  "input": "while (true) { break x; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/460/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Undefined label 'x' (1:26)
> 1 | while (true) { continue x; }
    |                          ^],
  "input": "while (true) { continue x; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/461/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Undefined label 'x' (1:41)
> 1 | x: while (true) { (function () { break x; }); }
    |                                         ^],
  "input": "x: while (true) { (function () { break x; }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/462/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Illegal continue statement (1:41)
> 1 | x: while (true) { (function () { continue x; }); }
    |                                         ^],
  "input": "x: while (true) { (function () { continue x; }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/463/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Illegal break statement (1:39)
> 1 | x: while (true) { (function () { break; }); }
    |                                       ^],
  "input": "x: while (true) { (function () { break; }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/464/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Illegal continue statement (1:41)
> 1 | x: while (true) { (function () { continue; }); }
    |                                         ^],
  "input": "x: while (true) { (function () { continue; }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/465/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Label 'x' has already been declared (1:20)
> 1 | x: while (true) { x: while (true) { } }
    |                    ^],
  "input": "x: while (true) { x: while (true) { } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/466/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Calling delete on expression not allowed in strict mode (1:38)
> 1 | (function () { 'use strict'; delete i; }())
    |                                      ^],
  "input": "(function () { 'use strict'; delete i; }())",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/467/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:35]: Strict mode code may not include a with statement (1:35)
> 1 | (function () { 'use strict'; with (i); }())
    |                                   ^],
  "input": "(function () { 'use strict'; with (i); }())",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/468/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:40]: Unexpected eval or arguments in strict mode (1:40)
> 1 | function hello() {'use strict'; var eval = 10; }
    |                                        ^],
  "input": "function hello() {'use strict'; var eval = 10; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/469/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; var arguments = 10; }
    |                                             ^],
  "input": "function hello() {'use strict'; var arguments = 10; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/470/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; try { } catch (eval) { } }
    |                                                   ^],
  "input": "function hello() {'use strict'; try { } catch (eval) { } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/471/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:56]: Unexpected eval or arguments in strict mode (1:56)
> 1 | function hello() {'use strict'; try { } catch (arguments) { } }
    |                                                        ^],
  "input": "function hello() {'use strict'; try { } catch (arguments) { } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/472/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid left-hand side in assignment (1:38)
> 1 | function hello() {'use strict'; eval = 10; }
    |                                      ^],
  "input": "function hello() {'use strict'; eval = 10; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/473/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid left-hand side in assignment (1:43)
> 1 | function hello() {'use strict'; arguments = 10; }
    |                                           ^],
  "input": "function hello() {'use strict'; arguments = 10; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/474/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Invalid increment/decrement operand (1:39)
> 1 | function hello() {'use strict'; ++eval; }
    |                                       ^],
  "input": "function hello() {'use strict'; ++eval; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/475/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Invalid increment/decrement operand (1:39)
> 1 | function hello() {'use strict'; --eval; }
    |                                       ^],
  "input": "function hello() {'use strict'; --eval; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/476/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Invalid increment/decrement operand (1:44)
> 1 | function hello() {'use strict'; ++arguments; }
    |                                            ^],
  "input": "function hello() {'use strict'; ++arguments; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/477/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Invalid increment/decrement operand (1:44)
> 1 | function hello() {'use strict'; --arguments; }
    |                                            ^],
  "input": "function hello() {'use strict'; --arguments; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/478/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid increment/decrement operand (1:38)
> 1 | function hello() {'use strict'; eval++; }
    |                                      ^],
  "input": "function hello() {'use strict'; eval++; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/479/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid increment/decrement operand (1:38)
> 1 | function hello() {'use strict'; eval--; }
    |                                      ^],
  "input": "function hello() {'use strict'; eval--; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/480/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid increment/decrement operand (1:43)
> 1 | function hello() {'use strict'; arguments++; }
    |                                           ^],
  "input": "function hello() {'use strict'; arguments++; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/481/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid increment/decrement operand (1:43)
> 1 | function hello() {'use strict'; arguments--; }
    |                                           ^],
  "input": "function hello() {'use strict'; arguments--; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/482/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; function eval() { } }
    |                                             ^],
  "input": "function hello() {'use strict'; function eval() { } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/483/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:50]: Unexpected eval or arguments in strict mode (1:50)
> 1 | function hello() {'use strict'; function arguments() { } }
    |                                                  ^],
  "input": "function hello() {'use strict'; function arguments() { } }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/484/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected eval or arguments in strict mode (1:13)
> 1 | function eval() {'use strict'; }
    |             ^],
  "input": "function eval() {'use strict'; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/485/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected eval or arguments in strict mode (1:18)
> 1 | function arguments() {'use strict'; }
    |                  ^],
  "input": "function arguments() {'use strict'; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/486/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected eval or arguments in strict mode (1:46)
> 1 | function hello() {'use strict'; (function eval() { }()) }
    |                                              ^],
  "input": "function hello() {'use strict'; (function eval() { }()) }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/487/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; (function arguments() { }()) }
    |                                                   ^],
  "input": "function hello() {'use strict'; (function arguments() { }()) }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/488/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected eval or arguments in strict mode (1:14)
> 1 | (function eval() {'use strict'; })()
    |              ^],
  "input": "(function eval() {'use strict'; })()",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/489/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected eval or arguments in strict mode (1:19)
> 1 | (function arguments() {'use strict'; })()
    |                   ^],
  "input": "(function arguments() {'use strict'; })()",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/490/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; ({ s: function eval() { } }); }
    |                                                   ^],
  "input": "function hello() {'use strict'; ({ s: function eval() { } }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/491/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected strict mode reserved word (1:17)
> 1 | (function package() {'use strict'; })()
    |                 ^],
  "input": "(function package() {'use strict'; })()",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/492/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: Unexpected eval or arguments in strict mode (1:52)
> 1 | function hello() {'use strict'; ({ i: 10, set s(eval) { } }); }
    |                                                    ^],
  "input": "function hello() {'use strict'; ({ i: 10, set s(eval) { } }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/493/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; ({ set s(eval) { } }); }
    |                                             ^],
  "input": "function hello() {'use strict'; ({ set s(eval) { } }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/494/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:53]: Unexpected eval or arguments in strict mode (1:53)
> 1 | function hello() {'use strict'; ({ s: function s(eval) { } }); }
    |                                                     ^],
  "input": "function hello() {'use strict'; ({ s: function s(eval) { } }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/495/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected eval or arguments in strict mode (1:19)
> 1 | function hello(eval) {'use strict';}
    |                   ^],
  "input": "function hello(eval) {'use strict';}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/496/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected eval or arguments in strict mode (1:24)
> 1 | function hello(arguments) {'use strict';}
    |                        ^],
  "input": "function hello(arguments) {'use strict';}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/497/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: Unexpected eval or arguments in strict mode (1:52)
> 1 | function hello() { 'use strict'; function inner(eval) {} }
    |                                                    ^],
  "input": "function hello() { 'use strict'; function inner(eval) {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/498/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:57]: Unexpected eval or arguments in strict mode (1:57)
> 1 | function hello() { 'use strict'; function inner(arguments) {} }
    |                                                         ^],
  "input": "function hello() { 'use strict'; function inner(arguments) {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/500/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:34]: Octal escape sequences are not allowed in strict mode (1:34)
> 1 | function hello() { 'use strict'; 021; }
    |                                  ^],
  "input": "function hello() { 'use strict'; 021; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/502/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Octal escape sequences are not allowed in strict mode (1:37)
> 1 | function hello() { 'use strict'; ({ 021: 42 }); }
    |                                     ^],
  "input": "function hello() { 'use strict'; ({ 021: 42 }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/504/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:47]: Unexpected strict mode reserved word (1:47)
> 1 | function hello() { "use strict"; var implements; }
    |                                               ^],
  "input": "function hello() { \\"use strict\\"; var implements; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/505/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected strict mode reserved word (1:46)
> 1 | function hello() { "use strict"; var interface; }
    |                                              ^],
  "input": "function hello() { \\"use strict\\"; var interface; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/506/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Unexpected strict mode reserved word (1:44)
> 1 | function hello() { "use strict"; var package; }
    |                                            ^],
  "input": "function hello() { \\"use strict\\"; var package; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/507/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Unexpected strict mode reserved word (1:44)
> 1 | function hello() { "use strict"; var private; }
    |                                            ^],
  "input": "function hello() { \\"use strict\\"; var private; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/508/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected strict mode reserved word (1:46)
> 1 | function hello() { "use strict"; var protected; }
    |                                              ^],
  "input": "function hello() { \\"use strict\\"; var protected; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/509/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Unexpected strict mode reserved word (1:43)
> 1 | function hello() { "use strict"; var public; }
    |                                           ^],
  "input": "function hello() { \\"use strict\\"; var public; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/510/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Unexpected strict mode reserved word (1:43)
> 1 | function hello() { "use strict"; var static; }
    |                                           ^],
  "input": "function hello() { \\"use strict\\"; var static; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/511/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Unexpected strict mode reserved word (1:21)
> 1 | function hello(static) { "use strict"; }
    |                     ^],
  "input": "function hello(static) { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/512/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected strict mode reserved word (1:15)
> 1 | function static() { "use strict"; }
    |               ^],
  "input": "function static() { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/513/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Unexpected strict mode reserved word (1:29)
> 1 | "use strict"; function static() { }
    |                             ^],
  "input": "\\"use strict\\"; function static() { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/515/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected eval or arguments in strict mode (1:15)
> 1 | function a(eval) { "use strict"; }
    |               ^],
  "input": "function a(eval) { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/516/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected strict mode reserved word (1:18)
> 1 | function a(package) { "use strict"; }
    |                  ^],
  "input": "function a(package) { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/520/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected eval or arguments in strict mode (1:16)
> 1 | (function a(eval) { "use strict"; })
    |                ^],
  "input": "(function a(eval) { \\"use strict\\"; })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/521/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected strict mode reserved word (1:19)
> 1 | (function a(package) { "use strict"; })
    |                   ^],
  "input": "(function a(package) { \\"use strict\\"; })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/522/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:66]: Octal escape sequences are not allowed in strict mode (1:66)
> 1 | "use strict";function foo(){"use strict";}function bar(){var v = 015}
    |                                                                  ^],
  "input": "\\"use strict\\";function foo(){\\"use strict\\";}function bar(){var v = 015}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/523/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Invalid keyword (1:8)
> 1 | var this = 10;
    |        ^],
  "input": "var this = 10;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/524/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:2]: Illegal newline after throw (2:2)
  1 | throw
> 2 | 10;
    |  ^],
  "input": "throw
10;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/536/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Missing initializer in const declaration (1:8)
> 1 | const a;
    |        ^],
  "input": "const a;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/544/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:16]: Unexpected strict mode reserved word (2:16)
  1 | "use strict";
> 2 | const { public } = foo();
    |                ^
  3 |],
  "input": "\\"use strict\\";
const { public } = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/550/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:11]: Octal escape sequences are not allowed in strict mode (2:11)
  1 | 'use strict';
> 2 | const a = 07;
    |           ^
  3 |],
  "input": "'use strict';
const a = 07;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/552/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:11]: Octal escape sequences are not allowed in strict mode (2:11)
  1 | 'use strict';
> 2 | const a = 08;
    |           ^
  3 |],
  "input": "'use strict';
const a = 08;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/554/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Octal escape sequences are not allowed in strict mode (1:9)
> 1 | var a = 0123.;
    |         ^],
  "input": "var a = 0123.;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/core/uncategorised/555/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:14]: The binding declaration is not destructible (3:14)
  1 | function foo ( 
  2 |     first,
> 3 |     ...second,
    |              ^
  4 |     third,
  5 | ) {
  6 | };],
  "input": "function foo ( 
    first,
    ...second,
    third,
) {
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/array-rest-spread/comma-after-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid left-hand side in assignment (1:11)
> 1 | [...a,] = [];
    |           ^],
  "input": "[...a,] = [];",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/array-rest-spread/comma-after-spread-for-in/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid left-hand side in for-in (1:15)
> 1 | for ([...a,] in []);
    |               ^
  2 |],
  "input": "for ([...a,] in []);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/array-rest-spread/comma-after-spread-nested/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | [[...a,]] = [];
    |             ^],
  "input": "[[...a,]] = [];",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/array-rest-spread/invalid-location/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | [...a, b] = c
    |             ^],
  "input": "[...a, b] = c",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/comma-after-rest-param/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid rest argument (1:9)
> 1 | (...rest,) => {}
    |         ^
  2 |],
  "input": "(...rest,) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Unexpected token: '=>' (1:20)
> 1 | var foo = ((foo)) => {};
    |                    ^
  2 |],
  "input": "var foo = ((foo)) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: '=>' (1:11)
> 1 | (a, (b)) => 42
    |           ^],
  "input": "(a, (b)) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens-array-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: The left-hand side of the arrow can only be destructed through assignment (1:10)
> 1 | ([(a)]) => {}
    |          ^
  2 |],
  "input": "([(a)]) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens-array-pattern-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: The left-hand side of the arrow can only be destructed through assignment (1:24)
> 1 | ([ [(a)] = [] ] = []) => {}
    |                        ^
  2 |],
  "input": "([ [(a)] = [] ] = []) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens-object-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: The left-hand side of the arrow can only be destructed through assignment (1:22)
> 1 | ({ a: (foo) } = {}) => {}
    |                      ^
  2 |],
  "input": "({ a: (foo) } = {}) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/inner-parens-object-pattern-member/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: The left-hand side of the arrow can only be destructed through assignment (1:26)
> 1 | ({ a: (foo.qux) } = {}) => {}
    |                          ^
  2 |],
  "input": "({ a: (foo.qux) } = {}) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/invalid-rest-in-params/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:14]: Invalid rest argument (3:14)
  1 | (
  2 |     first,
> 3 |     ...second,
    |              ^
  4 |     third
  5 | ) => {};
  6 |],
  "input": "(
    first,
    ...second,
    third
) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/no-binary-left/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: '||' (1:11)
> 1 | () => {} || true
    |           ^],
  "input": "() => {} || true",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/no-callee/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Block body arrows can not be immediately invoked without a group (1:9)
> 1 | () => {}()
    |         ^
  2 |],
  "input": "() => {}()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/arrow-functions/no-ternary-test/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Block body arrows can not be immediately accessed without a group (1:10)
> 1 | () => {} ? 1 : 2;
    |          ^],
  "input": "() => {} ? 1 : 2;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class/extends-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Strict mode code may not include a with statement (2:8)
  1 | class C extends (function B() {
> 2 |   with ({});
    |        ^
  3 |   return B;
  4 | }()) {}
  5 |],
  "input": "class C extends (function B() {
  with ({});
  return B;
}()) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class/invalid-escape-get/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'escaped keyword' (1:12)
> 1 | class X { ge\\u0074 x() {} }
    |            ^
  2 |],
  "input": "class X { ge\\\\u0074 x() {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class/invalid-escape-set/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'escaped keyword' (1:12)
> 1 | class X { se\\u0074 x(value) {} }
    |            ^
  2 |],
  "input": "class X { se\\\\u0074 x(value) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class/invalid-escape-static/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected token: 'identifier' (1:17)
> 1 | class X { st\\u0061tic y() {} }
    |                 ^
  2 |],
  "input": "class X { st\\\\u0061tic y() {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/direct-super-in-object-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:19]: Member access on super must be in a method (4:19)
  2 |   foo: {
  3 |     get: function(){
> 4 |       return super.foo;
    |                   ^
  5 |     }
  6 |   }
  7 | });],
  "input": "Object.create({}, {
  foo: {
    get: function(){
      return super.foo;
    }
  }
});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/direct-super-outside-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass (2:14)
  1 | class A {
> 2 |   x () {super()}
    |              ^
  3 | }],
  "input": "class A {
  x () {super()}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/disallow-static-generator-prototype/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: Classes may not have a static property named 'prototype' (2:20)
  1 | class A {
> 2 |   static *prototype() {}
    |                    ^
  3 | }],
  "input": "class A {
  static *prototype() {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/disallow-static-prototype/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:19]: Classes may not have a static property named 'prototype' (2:19)
  1 | class A {
> 2 |   static prototype() {}
    |                   ^
  3 | }],
  "input": "class A {
  static prototype() {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/getter-signature/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Getter functions must have exactly no arguments (2:15)
  1 | class A {
> 2 |   get prop (arg) {}
    |               ^
  3 | }],
  "input": "class A {
  get prop (arg) {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/class-methods/malformed-super-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:11]: Unexpected token: 'super' (3:11)
  1 | class A {
  2 |   x () {
> 3 |     super - 1;
    |           ^
  4 |   }
  5 | }],
  "input": "class A {
  x () {
    super - 1;
  }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/binding-arguments-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:21]: The binding declaration is not destructible (2:21)
  1 | "use strict";
> 2 | const { arguments } = foo();
    |                     ^
  3 |],
  "input": "\\"use strict\\";
const { arguments } = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/binding-eval/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid left-hand side in assignment (1:38)
> 1 | 'use strict'; ({eval = defValue} = obj)
    |                                      ^],
  "input": "'use strict'; ({eval = defValue} = obj)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/binding-this/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid keyword (1:12)
> 1 | var { this } = {};
    |            ^
  2 |],
  "input": "var { this } = {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/error-operator-for-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | ([a += a] = a)
    |             ^
  2 |],
  "input": "([a += a] = a)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/invalid-object-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: The binding declaration is not destructible (1:20)
> 1 | const { foo() {} } = foo();
    |                    ^
  2 |],
  "input": "const { foo() {} } = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/parenthesized-lhs-array/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | ([a]) = 2;
    |       ^],
  "input": "([a]) = 2;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/destructuring/parenthesized-lhs-object/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | ({a}) = 2;
    |       ^],
  "input": "({a}) = 2;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/duplicate-proto/in-new-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Property name __proto__ appears more than once in object literal (1:43)
> 1 | new {__proto__: Number, __proto__: Number}.__proto__;
    |                                           ^
  2 |],
  "input": "new {__proto__: Number, __proto__: Number}.__proto__;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/bare-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Expected ';' (2:13)
  1 | var a;
> 2 | for (a = 0 in {});
    |             ^
  3 |],
  "input": "var a;
for (a = 0 in {});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/const-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'for-in' loop head declarations can not have an initializer (1:16)
> 1 | for (const a = 0 in {});
    |                ^],
  "input": "for (const a = 0 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/let-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: 'for-in' loop head declarations can not have an initializer (1:14)
> 1 | for (let a = 0 in {});
    |              ^],
  "input": "for (let a = 0 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/strict-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:28]: 'for-in' loop head declarations can not have an initializer (2:28)
  1 | 'use strict';
> 2 | for (var a = 0 in {});
    |                            ^],
  "input": "'use strict';
for (var a = 0 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/var-arraybindingpattern-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'for-in' loop head declarations can not have an initializer (1:16)
> 1 | for (var [a] = 0 in {});
    |                ^],
  "input": "for (var [a] = 0 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-in/var-objectbindingpattern-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'for-in' loop head declarations can not have an initializer (1:16)
> 1 | for (var {a} = 0 in {});
    |                ^],
  "input": "for (var {a} = 0 in {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-of/bare-initializer/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Expected ';' (2:13)
  1 | var a;
> 2 | for (a = 0 of {});
    |             ^
  3 |],
  "input": "var a;
for (a = 0 of {});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-of/invalid-escape-of/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected ';' (1:8)
> 1 | for (x \\u006ff y) {}
    |        ^
  2 |],
  "input": "for (x \\\\u006ff y) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/for-of/invalid-expr/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Expected ')' (1:16)
> 1 | for (let x of y, z) {}
    |                ^
  2 |],
  "input": "for (let x of y, z) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/generators/invalid-escape-yield/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Unexpected token: 'escaped future reserved keyword' (1:20)
> 1 | (function* () { y\\u0069eld; })
    |                    ^
  2 |],
  "input": "(function* () { y\\\\u0069eld; })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/generators/invalid-hanging/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: In strict mode code, functions can only be declared at top level or inside a block (1:15)
> 1 | if (1) function *foo() {}
    |               ^
  2 |],
  "input": "if (1) function *foo() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-const/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'escaped keyword' (1:12)
> 1 | var co\\u{6e}st = 123;
    |            ^
  2 |
  3 | co\\u{6e}st x = 2;
  4 |],
  "input": "var co\\\\u{6e}st = 123;

co\\\\u{6e}st x = 2;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-export/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: 'escaped keyword' (1:13)
> 1 | var expor\\u{74} = 123;
    |             ^
  2 |
  3 | var x;
  4 | expor\\u{74} { x };],
  "input": "var expor\\\\u{74} = 123;

var x;
expor\\\\u{74} { x };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-if/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'escaped keyword' (1:4)
> 1 | \\u0069\\u{66} (true) {}
    |    ^
  2 |],
  "input": "\\\\u0069\\\\u{66} (true) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: Unexpected token: 'escaped keyword' (1:28)
> 1 | var \\u{69}\\u{6d}\\u{70}\\u{6f}\\u{72}\\u{74} = 123;
    |                            ^
  2 |
  3 | \\u{69}\\u{6d}\\u{70}\\u{6f}\\u{72}\\u{74} "x";
  4 |],
  "input": "var \\\\u{69}\\\\u{6d}\\\\u{70}\\\\u{6f}\\\\u{72}\\\\u{74} = 123;

\\\\u{69}\\\\u{6d}\\\\u{70}\\\\u{6f}\\\\u{72}\\\\u{74} \\"x\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-null/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'escaped keyword' (1:7)
> 1 | nul\\u{6c}
    |       ^
  2 |],
  "input": "nul\\\\u{6c}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/identifiers/invalid-escape-seq-true/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: 'escaped keyword' (1:3)
> 1 | \\u0074rue
    |   ^
  2 |],
  "input": "\\\\u0074rue
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-as-identifier-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid keyword (1:14)
> 1 | let instanceof Foo
    |              ^
  2 |],
  "input": "let instanceof Foo
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-as-identifier-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid keyword (1:6)
> 1 | let in {}
    |      ^
  2 |],
  "input": "let in {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-as-identifier-strict-fail/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:5]: \`let\` declaration not allowed here and \`let\` cannot be a regular var name in strict mode (2:5)
  1 | "use strict";
> 2 | let + 1
    |     ^
  3 |],
  "input": "\\"use strict\\";
let + 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected strict mode reserved word (1:11)
> 1 | let { let } = {};
    |           ^
  2 |],
  "input": "let { let } = {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected strict mode reserved word (1:13)
> 1 | const { let } = {};
    |             ^
  2 |],
  "input": "const { let } = {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: The identifier 'let' must not be in expression position in strict mode (1:9)
> 1 | let [let] = [];
    |         ^
  2 |],
  "input": "let [let] = [];
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: The identifier 'let' must not be in expression position in strict mode (1:11)
> 1 | const [let] = [];
    |           ^
  2 |],
  "input": "const [let] = [];
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected strict mode reserved word (1:7)
> 1 | let let
    |       ^
  2 |],
  "input": "let let
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-binding-list-fail-6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected strict mode reserved word (1:9)
> 1 | const let = ''
    |         ^
  2 |],
  "input": "const let = ''
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/let/let-at-catch-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:9]: Unexpected strict mode reserved word (2:9)
  1 | try {} catch (err) {
> 2 |   let let;
    |         ^
  3 | }],
  "input": "try {} catch (err) {
  let let;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/meta-properties/invalid-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: new.target only allowed within functions (2:12)
  1 | const A = () => {
> 2 |   new.target;
    |            ^
  3 | }
  4 |],
  "input": "const A = () => {
  new.target;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/meta-properties/new-invalid-prop/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: new.target only allowed within functions (2:10)
  1 | function f() {
> 2 |   new.prop
    |          ^
  3 | }],
  "input": "function f() {
  new.prop
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/meta-properties/new-target-invalid/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: new.target only allowed within functions (1:10)
> 1 | new.target
    |          ^],
  "input": "new.target",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/meta-properties/new-target-invalid-escaped-target/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: new.target only allowed within functions (1:24)
> 1 | function f() { new.ta\\u0072get; }
    |                        ^
  2 |],
  "input": "function f() { new.ta\\\\u0072get; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/export-default-variable-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Unexpected token: 'const' (1:20)
> 1 | export default const Foo = () => {
    |                    ^
  2 |     return \`<div class="bar">Hola</div>\`;
  3 | }],
  "input": "export default const Foo = () => {
    return \`<div class=\\"bar\\">Hola</div>\`;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/export-default-variable-declaration2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: The identifier 'let' must not be in expression position in strict mode (1:22)
> 1 | export default let Foo = () => {
    |                      ^
  2 |     return \`<div class="bar">Hola</div>\`;
  3 | }],
  "input": "export default let Foo = () => {
    return \`<div class=\\"bar\\">Hola</div>\`;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/export-default-variable-declaration3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: 'var' (1:18)
> 1 | export default var Foo = () => {
    |                  ^
  2 |     return \`<div class="bar">Hola</div>\`;
  3 | }],
  "input": "export default var Foo = () => {
    return \`<div class=\\"bar\\">Hola</div>\`;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/import-invalid-keyword/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Invalid keyword (1:19)
> 1 | import { debugger } from "foo";
    |                   ^
  2 |],
  "input": "import { debugger } from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/import-invalid-keyword-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Invalid keyword (1:18)
> 1 | import { default } from "foo";
    |                  ^
  2 |],
  "input": "import { default } from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/import-invalid-keyword-typeof/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid keyword (1:17)
> 1 | import { typeof } from "foo";
    |                 ^
  2 |],
  "input": "import { typeof } from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/import-invalid-keyword-typeof-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid keyword (1:17)
> 1 | import { typeof } from "foo";
    |                 ^
  2 |],
  "input": "import { typeof } from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/invalid-escape-export-as/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Expected ',' (1:12)
> 1 | export { X \\u0061s Y }
    |            ^
  2 |],
  "input": "export { X \\\\u0061s Y }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/modules/invalid-escape-import-from/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Import source must be string (1:12)
> 1 | import X fro\\u006d 'x'
    |            ^
  2 |],
  "input": "import X fro\\\\u006d 'x'
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/object/async-method-linebreak/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:7]: Async methods are a restricted production and cannot have a newline following it (3:7)
  1 | ({
  2 |     async
> 3 |     foo() {}
    |       ^
  4 | })
  5 |],
  "input": "({
    async
    foo() {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/object/invalid-accessor-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:9]: A getter cannot be a generator (2:9)
  1 | ({
> 2 |     get *iterator() { },
    |         ^
  3 |     set *iterator(iter) { }
  4 | })
  5 |],
  "input": "({
    get *iterator() { },
    set *iterator(iter) { }
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/regex/duplicate-flags/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Duplicate regular expression flag 'i' (1:5)
> 1 | /./gii;
    |     ^
  2 |],
  "input": "/./gii;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/regression/11183/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Octal escape sequences are not allowed in strict mode (2:1)
  1 | class X {}
> 2 | 05
    | ^
  3 |
  4 | function x() { 'use strict' }
  5 | 05],
  "input": "class X {}
05

function x() { 'use strict' }
05
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/shorthand/reserved-word/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid keyword (1:17)
> 1 | var x = ({ const, if, this });
    |                 ^
  2 |],
  "input": "var x = ({ const, if, this });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/shorthand/reserved-word-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:22]: Unexpected strict mode reserved word (2:22)
  1 | "use strict";
> 2 | var x = ({ implements, interface, package });
    |                      ^
  3 |],
  "input": "\\"use strict\\";
var x = ({ implements, interface, package });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-class/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Class declaration can't appear in single-statement context (1:10)
> 1 | foo: class X {}
    |          ^
  2 |],
  "input": "foo: class X {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-const/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'const' (1:10)
> 1 | foo: const bar = null;
    |          ^
  2 |],
  "input": "foo: const bar = null;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-func-async/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Async functions can only be declared at the top level or inside a block (1:19)
> 1 | foo: async function bar() {}
    |                   ^
  2 |],
  "input": "foo: async function bar() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-func-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: In strict mode code, functions can only be declared at top level or inside a block (1:13)
> 1 | foo: function* bar() {}
    |             ^
  2 |],
  "input": "foo: function* bar() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-func-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: In strict mode code, functions can only be declared at top level or inside a block (1:43)
> 1 | function foo() {"use strict"; bar: function baz() {}}
    |                                           ^
  2 |],
  "input": "function foo() {\\"use strict\\"; bar: function baz() {}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/statements/label-invalid-let/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: \`let\` declaration not allowed here and \`let\` cannot be a regular var name in strict mode (1:12)
> 1 | foo: let bar;
    |            ^
  2 |],
  "input": "foo: let bar;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/37/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: The left-hand side of the arrow can only be destructed through assignment (1:10)
> 1 | ([a.a]) => 42
    |          ^],
  "input": "([a.a]) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/38/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: \`=>\` is an invalid assignment target (1:24)
> 1 | console.log(typeof () => {});
    |                        ^],
  "input": "console.log(typeof () => {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/84/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected 'from' (1:8)
> 1 | export *
    |        ^],
  "input": "export *",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/96/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected strict mode reserved word (1:14)
> 1 | import default from "foo"
    |              ^],
  "input": "import default from \\"foo\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/109/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: 'for-of' loop head declarations can not have an initializer (1:15)
> 1 | for (var x = 42 of list) process(x);
    |               ^],
  "input": "for (var x = 42 of list) process(x);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/123/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass (1:46)
> 1 | "use strict"; (class A {constructor() { super() }})
    |                                              ^],
  "input": "\\"use strict\\"; (class A {constructor() { super() }})",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/125/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Duplicate constructor method in class (1:41)
> 1 | class A { constructor() {} 'constructor'() {} }
    |                                         ^],
  "input": "class A { constructor() {} 'constructor'() {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/126/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Class constructor may not be a accessor (1:26)
> 1 | class A { get constructor() {} }
    |                          ^],
  "input": "class A { get constructor() {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/127/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Class constructor may not be a accessor (1:23)
> 1 | class A { *constructor() {} }
    |                       ^],
  "input": "class A { *constructor() {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/151/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: A computed property name must be followed by a colon or paren (1:6)
> 1 | ({[x]})
    |      ^],
  "input": "({[x]})",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/198/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0o
    |  ^],
  "input": "0o",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/199/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0o1a
    |   ^],
  "input": "0o1a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/200/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0o9
    |  ^],
  "input": "0o9",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/201/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0o18
    |   ^],
  "input": "0o18",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/202/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0O
    |  ^],
  "input": "0O",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/203/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0O1a
    |   ^],
  "input": "0O1a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/204/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0O9
    |  ^],
  "input": "0O9",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/205/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0O18
    |   ^],
  "input": "0O18",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/206/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0b
    |  ^],
  "input": "0b",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/207/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b1a
    |   ^],
  "input": "0b1a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/208/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0b9
    |  ^],
  "input": "0b9",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/209/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b18
    |   ^],
  "input": "0b18",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/210/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b12
    |   ^],
  "input": "0b12",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/211/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0B
    |  ^],
  "input": "0B",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/212/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B1a
    |   ^],
  "input": "0B1a",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/213/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0B9
    |  ^],
  "input": "0B9",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/214/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B18
    |   ^],
  "input": "0B18",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/215/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B12
    |   ^],
  "input": "0B12",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/216/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unicode codepoint must not be greater than 0x10FFFF (1:9)
> 1 | "\\u{110000}"
    |         ^],
  "input": "\\"\\\\u{110000}\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/218/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Invalid hexadecimal escape sequence (1:8)
> 1 | "\\u{FFFF"
    |        ^],
  "input": "\\"\\\\u{FFFF\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/219/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid hexadecimal escape sequence (1:6)
> 1 | "\\u{FFZ}"
    |      ^],
  "input": "\\"\\\\u{FFZ}\\"",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/220/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid left-hand side in assignment (1:6)
> 1 | [v] += ary
    |      ^],
  "input": "[v] += ary",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/221/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Invalid left-hand side in assignment (1:8)
> 1 | [2] = 42
    |        ^],
  "input": "[2] = 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/222/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Invalid left-hand side in assignment (1:16)
> 1 | ({ obj:20 } = 42)
    |                ^],
  "input": "({ obj:20 } = 42)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/223/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Invalid left-hand side in assignment (1:19)
> 1 | ({ get x() {} } = 0)
    |                   ^
  2 |],
  "input": "({ get x() {} } = 0)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/224/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:5]: Unexpected token: 'identifier' (2:5)
  1 | x 
> 2 |  is y
    |     ^],
  "input": "x 
 is y",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/225/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:7]: Unexpected token: 'identifier' (2:7)
  1 | x 
> 2 |  isnt y
    |       ^],
  "input": "x 
 isnt y",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/226/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Invalid keyword (1:16)
> 1 | function default() {}
    |                ^],
  "input": "function default() {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/227/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:48]: Unexpected eval or arguments in strict mode (1:48)
> 1 | function hello() {'use strict'; ({ i: 10, s(eval) { } }); }
    |                                                ^],
  "input": "function hello() {'use strict'; ({ i: 10, s(eval) { } }); }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/229/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid keyword (1:9)
> 1 | var super
    |         ^],
  "input": "var super",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/230/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid keyword (1:11)
> 1 | var default
    |           ^],
  "input": "var default",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/231/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid keyword (1:11)
> 1 | let default
    |           ^],
  "input": "let default",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/232/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | const default = 2
    |             ^],
  "input": "const default = 2",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/233/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:32]: Invalid left-hand side in assignment (1:32)
> 1 | "use strict"; ({ v: eval } = obj)
    |                                ^],
  "input": "\\"use strict\\"; ({ v: eval } = obj)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/234/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Invalid left-hand side in assignment (1:37)
> 1 | "use strict"; ({ v: arguments } = obj)
    |                                     ^],
  "input": "\\"use strict\\"; ({ v: arguments } = obj)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/235/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: 'for-in' loop head declarations can not have an initializer (1:15)
> 1 | for (let x = 42 in list) process(x);
    |               ^],
  "input": "for (let x = 42 in list) process(x);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/236/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: 'for-of' loop head declarations can not have an initializer (1:15)
> 1 | for (let x = 42 of list) process(x);
    |               ^],
  "input": "for (let x = 42 of list) process(x);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/237/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Import source must be string (1:10)
> 1 | import foo
    |          ^],
  "input": "import foo",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/238/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Import source must be string (1:19)
> 1 | import { foo, bar }
    |                   ^],
  "input": "import { foo, bar }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/239/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Import source must be string (1:19)
> 1 | import foo from bar
    |                   ^],
  "input": "import foo from bar",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/242/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid left-hand side in assignment (1:21)
> 1 | "use strict"; (eval = 10) => 42
    |                     ^],
  "input": "\\"use strict\\"; (eval = 10) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/243/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Unexpected eval or arguments in strict mode (1:21)
> 1 | "use strict"; eval => 42
    |                     ^],
  "input": "\\"use strict\\"; eval => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/244/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Unexpected eval or arguments in strict mode (1:26)
> 1 | "use strict"; arguments => 42
    |                          ^],
  "input": "\\"use strict\\"; arguments => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/245/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: The left-hand side of the arrow can only be destructed through assignment (1:26)
> 1 | "use strict"; (eval, a) => 42
    |                          ^],
  "input": "\\"use strict\\"; (eval, a) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/246/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: The left-hand side of the arrow can only be destructed through assignment (1:31)
> 1 | "use strict"; (arguments, a) => 42
    |                               ^],
  "input": "\\"use strict\\"; (arguments, a) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/247/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: The left-hand side of the arrow can only be destructed through assignment (1:31)
> 1 | "use strict"; (eval, a = 10) => 42
    |                               ^],
  "input": "\\"use strict\\"; (eval, a = 10) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/249/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Octal escape sequences are not allowed in strict mode (1:22)
> 1 | "use strict"; (a) => 00
    |                      ^],
  "input": "\\"use strict\\"; (a) => 00",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/250/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Expected '=>' (1:5)
> 1 | () <= 42
    |     ^],
  "input": "() <= 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/251/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: '=>' (1:7)
> 1 | (10) => 00
    |       ^],
  "input": "(10) => 00",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/252/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: '=>' (1:11)
> 1 | (10, 20) => 00
    |           ^],
  "input": "(10, 20) => 00",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/255/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected ']' (1:10)
> 1 | void { [1, 2]: 3 };
    |          ^],
  "input": "void { [1, 2]: 3 };",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/261/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: 'identifier' can not be generator method (1:17)
> 1 | var obj = { *test** }
    |                 ^],
  "input": "var obj = { *test** }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/263/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected strict mode reserved word (1:13)
> 1 | class default
    |             ^],
  "input": "class default",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/264/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unterminated template literal (1:5)
> 1 | \`test
    |     ^],
  "input": "\`test",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/265/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected '(' (1:13)
> 1 | switch \`test\`
    |             ^],
  "input": "switch \`test\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/266/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: The first token after the template expression should be a continuation of the template (1:18)
> 1 | \`hello \${10 \`test\`
    |                  ^],
  "input": "\`hello \${10 \`test\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/267/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: The first token after the template expression should be a continuation of the template (1:12)
> 1 | \`hello \${10;test\`
    |            ^],
  "input": "\`hello \${10;test\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/268/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '{' (1:14)
> 1 | function a() 1 // expression closure is not supported
    |              ^],
  "input": "function a() 1 // expression closure is not supported",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/273/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: 'if' (1:11)
> 1 | var a = [if (x) x]
    |           ^],
  "input": "var a = [if (x) x]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/275/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Object literal keys that are strings or numbers must be a method or have a colon (1:13)
> 1 | ({ "chance" }) = obj
    |             ^],
  "input": "({ \\"chance\\" }) = obj",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/276/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Object literal keys that are strings or numbers must be a method or have a colon (1:7)
> 1 | ({ 42 }) = obj
    |       ^],
  "input": "({ 42 }) = obj",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/277/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: The binding declaration is not destructible (1:19)
> 1 | function f(a, ...b, c)
    |                   ^],
  "input": "function f(a, ...b, c)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/278/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The binding declaration is not destructible (1:23)
> 1 | function f(a, ...b = 0)
    |                       ^],
  "input": "function f(a, ...b = 0)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/283/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid rest argument (1:6)
> 1 | (...a, b) => {}
    |      ^],
  "input": "(...a, b) => {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/284/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: The left-hand side of the arrow can only be destructed through assignment (1:10)
> 1 | ([ 5 ]) => {}
    |          ^],
  "input": "([ 5 ]) => {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/285/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Object literal keys that are strings or numbers must be a method or have a colon (1:6)
> 1 | ({ 5 }) => {}
    |      ^],
  "input": "({ 5 }) => {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/286/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid rest argument (1:10)
> 1 | (...[ 5 ]) => {}
    |          ^],
  "input": "(...[ 5 ]) => {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/289/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected eval or arguments in strict mode (1:9)
> 1 | ({ t(eval) { "use strict"; } });
    |         ^],
  "input": "({ t(eval) { \\"use strict\\"; } });",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/290/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Octal escape sequences are not allowed in template strings (1:23)
> 1 | "use strict"; \`\${test}\\02\`;
    |                       ^],
  "input": "\\"use strict\\"; \`\${test}\\\\02\`;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/291/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Expected '(' (1:21)
> 1 | if (1) import "acorn";
    |                     ^],
  "input": "if (1) import \\"acorn\\";",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/293/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '...' (1:9)
> 1 | if (b,...a, );
    |         ^],
  "input": "if (b,...a, );",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/294/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Expected '=>' (1:9)
> 1 | (b, ...a)
    |         ^],
  "input": "(b, ...a)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/295/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | switch (cond) { case 10: let a = 20;
> 2 |],
  "input": "switch (cond) { case 10: let a = 20;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/296/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The left-hand side of the arrow can only be destructed through assignment (1:23)
> 1 | "use strict"; (eval) => 42
    |                       ^],
  "input": "\\"use strict\\"; (eval) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/297/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: The left-hand side of the arrow can only be destructed through assignment (1:9)
> 1 | (eval) => { "use strict"; 42 }
    |         ^],
  "input": "(eval) => { \\"use strict\\"; 42 }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/298/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The left-hand side of the arrow can only be destructed through assignment (1:23)
> 1 | ({ get test() { } }) => 42
    |                       ^],
  "input": "({ get test() { } }) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/311/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid shorthand property initializer (1:13)
> 1 | obj = {x = 0}
    |             ^],
  "input": "obj = {x = 0}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/312/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid shorthand property initializer (1:10)
> 1 | f({x = 0})
    |          ^],
  "input": "f({x = 0})",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/324/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Missing initializer in destructuring declaration (1:7)
> 1 | let [x]
    |       ^],
  "input": "let [x]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/325/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Missing initializer in destructuring declaration (1:7)
> 1 | var [x]
    |       ^],
  "input": "var [x]",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/326/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Illegal character 'Z˵' (1:5)
> 1 | var _𖫵 = 11;
    |     ^],
  "input": "var _𖫵 = 11;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/327/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Illegal character '®' (1:5)
> 1 | var 𫠞_ = 12;
    |     ^],
  "input": "var 𫠞_ = 12;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/328/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: \`let\` declaration not allowed here and \`let\` cannot be a regular var name in strict mode (1:12)
> 1 | if (1) let x = 10;
    |            ^],
  "input": "if (1) let x = 10;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/329/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: 'const' (1:14)
> 1 | for (;;) const x = 10;
    |              ^],
  "input": "for (;;) const x = 10;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/331/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Class declaration can't appear in single-statement context (1:19)
> 1 | if (1) ; else class Cls {}
    |                   ^],
  "input": "if (1) ; else class Cls {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/332/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Invalid left-hand side in assignment (1:29)
> 1 | 'use strict'; [...eval] = arr
    |                             ^],
  "input": "'use strict'; [...eval] = arr",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/339/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\07\`
    |  ^],
  "input": "\`\\\\07\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/340/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Expected '{' (1:17)
> 1 | x = { method() 42 }
    |                 ^],
  "input": "x = { method() 42 }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/341/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Expected '{' (1:21)
> 1 | x = { get method() 42 }
    |                     ^],
  "input": "x = { get method() 42 }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/342/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Expected '{' (1:23)
> 1 | x = { set method(val) v = val }
    |                       ^],
  "input": "x = { set method(val) v = val }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/344/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'super' (1:5)
> 1 | super
    |     ^],
  "input": "super",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/347/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Setter functions must have exactly one argument (1:24)
> 1 | class A { set prop(x, y) {} }
    |                        ^],
  "input": "class A { set prop(x, y) {} }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/368/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'enum' (1:4)
> 1 | enum = foo();
    |    ^
  2 |],
  "input": "enum = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/369/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'enum' (1:4)
> 1 | enum = foo();
    |    ^
  2 |],
  "input": "enum = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/370/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid keyword (1:10)
> 1 | const enum = foo();
    |          ^
  2 |],
  "input": "const enum = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/371/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid keyword (1:10)
> 1 | const enum = foo();
    |          ^
  2 |],
  "input": "const enum = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/372/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid keyword (1:14)
> 1 | const { enum } = foo();
    |              ^
  2 |],
  "input": "const { enum } = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/373/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid keyword (1:14)
> 1 | const { enum } = foo();
    |              ^
  2 |],
  "input": "const { enum } = foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/374/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid keyword (1:21)
> 1 | function foo({ enum }) {}
    |                     ^
  2 |],
  "input": "function foo({ enum }) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/375/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid keyword (1:21)
> 1 | function foo({ enum }) {}
    |                     ^
  2 |],
  "input": "function foo({ enum }) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/376/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | function enum() {}
    |             ^
  2 |],
  "input": "function enum() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/377/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid keyword (1:13)
> 1 | function enum() {}
    |             ^
  2 |],
  "input": "function enum() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/378/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected strict mode reserved word (1:10)
> 1 | class enum {}
    |          ^
  2 |],
  "input": "class enum {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/379/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected strict mode reserved word (1:10)
> 1 | class enum {}
    |          ^
  2 |],
  "input": "class enum {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/386/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: 'typeof' (1:13)
> 1 | export typeof foo;
    |             ^
  2 |],
  "input": "export typeof foo;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/387/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'new' (1:10)
> 1 | export new Foo();
    |          ^
  2 |],
  "input": "export new Foo();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/388/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Function declaration must have a name in this context (1:16)
> 1 | export function() {};
    |                ^
  2 |],
  "input": "export function() {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/389/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'for' (1:10)
> 1 | export for (;;);
    |          ^
  2 |],
  "input": "export for (;;);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/390/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'while' (1:12)
> 1 | export while(foo);
    |            ^
  2 |],
  "input": "export while(foo);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/392/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Expected ',' (1:18)
> 1 | import foo, { bar: { a } } from 'my-module';
    |                  ^
  2 |],
  "input": "import foo, { bar: { a } } from 'my-module';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/uncategorised/395/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: The left-hand side of the arrow can only be destructed through assignment (1:10)
> 1 | ([a.a]) => 42
    |          ^],
  "input": "([a.a]) => 42",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/function-name-function-declaration-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:16]: Unexpected strict mode reserved word (2:16)
  1 | function* fn() {
> 2 |   function yield() {}
    |                ^
  3 | }],
  "input": "function* fn() {
  function yield() {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/function-name-generator-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected strict mode reserved word (1:16)
> 1 | +function* yield() {}
    |                ^],
  "input": "+function* yield() {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/function-name-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Unexpected strict mode reserved word (2:14)
  1 | "use strict";
> 2 | function yield() {}
    |              ^],
  "input": "\\"use strict\\";
function yield() {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/function-name-strict-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected strict mode reserved word (1:14)
> 1 | function yield() { "use strict"; }
    |              ^],
  "input": "function yield() { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/in-class-heritage/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: 'yield' may not be used as an identifier in this context (1:21)
> 1 | class A extends yield B { }
    |                     ^],
  "input": "class A extends yield B { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/in-global-scope/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'yield' may not be used as an identifier in this context (1:5)
> 1 | yield 10
    |     ^],
  "input": "yield 10",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/in-iterator-stmt/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Invalid left-hand side in for-in (2:18)
  1 | function* g() {
> 2 |   for (yield '' in {}; ; ) ;
    |                  ^
  3 | }
  4 |],
  "input": "function* g() {
  for (yield '' in {}; ; ) ;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/in-plain-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: 'yield' may not be used as an identifier in this context (1:20)
> 1 | (function () { yield 10 })
    |                    ^],
  "input": "(function () { yield 10 })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-arrow-inside-generator-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:16]: Yield expression not allowed in formal parameter (2:16)
  1 | function* fn() {
> 2 |   (x = yield) => {};
    |                ^
  3 | }],
  "input": "function* fn() {
  (x = yield) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-arrow-inside-generator-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:19]: Yield expression not allowed in formal parameter (2:19)
  1 | function* fn() {
> 2 |   (x = yield fn) => {};
    |                   ^
  3 | }],
  "input": "function* fn() {
  (x = yield fn) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-arrow-inside-generator-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:26]: Yield expression not allowed in formal parameter (2:26)
  1 | function* fn() {
> 2 |   (a, b = 3, x = yield) => {};
    |                          ^
  3 | }],
  "input": "function* fn() {
  (a, b = 3, x = yield) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-arrow-inside-generator-5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:17]: The left-hand side of the arrow can only be destructed through assignment (2:17)
  1 | function* fn() {
> 2 |   (x = (yield) => {}) => {};
    |                 ^
  3 | }],
  "input": "function* fn() {
  (x = (yield) => {}) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-arrow-inside-generator-6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Yield expression not allowed in formal parameter (2:18)
  1 | function* fn() {
> 2 |   (x = (yield)) => {};
    |                  ^
  3 | }],
  "input": "function* fn() {
  (x = (yield)) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Yield expression not allowed in formal parameter (1:23)
> 1 | function* fn(x = yield) {}
    |                       ^],
  "input": "function* fn(x = yield) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-inside-generator-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Yield expression not allowed in formal parameter (1:21)
> 1 | ({ *method(x = yield) {} })
    |                     ^],
  "input": "({ *method(x = yield) {} })",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-default-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:21]: 'yield' may not be used as an identifier in this context (2:21)
  1 | "use strict";
> 2 | function fn(x = yield) {}
    |                     ^],
  "input": "\\"use strict\\";
function fn(x = yield) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-arrow-inside-generator-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: The left-hand side of the arrow can only be destructed through assignment (2:12)
  1 | function* fn() {
> 2 |   (yield) => {};
    |            ^
  3 | }],
  "input": "function* fn() {
  (yield) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-arrow-inside-generator-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: The left-hand side of the arrow can only be destructed through assignment (2:15)
  1 | function* fn() {
> 2 |   (yield fn) => {};
    |               ^
  3 | }],
  "input": "function* fn() {
  (yield fn) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-arrow-inside-generator-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: The left-hand side of the arrow can only be destructed through assignment (2:18)
  1 | function* fn() {
> 2 |   (a, b, yield) => {};
    |                  ^
  3 | }],
  "input": "function* fn() {
  (a, b, yield) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-arrow-no-parens-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Unexpected token: '=>' (2:10)
  1 | function* fn() {
> 2 |   yield => {};
    |          ^
  3 | }],
  "input": "function* fn() {
  yield => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected strict mode reserved word (1:18)
> 1 | function* fn(yield) {}
    |                  ^],
  "input": "function* fn(yield) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-generator-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected strict mode reserved word (1:16)
> 1 | ({ *method(yield) {} });
    |                ^],
  "input": "({ *method(yield) {} });",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-strict/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:17]: Unexpected strict mode reserved word (2:17)
  1 | "use strict";
> 2 | function fn(yield) {}
    |                 ^],
  "input": "\\"use strict\\";
function fn(yield) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/parameter-name-strict-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected strict mode reserved word (1:17)
> 1 | function fn(yield) { "use strict"; }
    |                 ^],
  "input": "function fn(yield) { \\"use strict\\"; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2015/yield/yield-star-parameter-default-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Yield expression not allowed in formal parameter (1:23)
> 1 | function* fn(x = yield* yield) {}
    |                       ^],
  "input": "function* fn(x = yield* yield) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/10/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:5)
> 1 | -5 ** 6;
    |     ^
  2 |],
  "input": "-5 ** 6;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/11/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:7)
> 1 | -(5) ** 6;
    |       ^
  2 |],
  "input": "-(5) ** 6;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/12/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:6)
> 1 | (-5 ** 6);
    |      ^
  2 |],
  "input": "(-5 ** 6);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/13/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '*' (1:4)
> 1 | 1 %* 1;
    |    ^
  2 |],
  "input": "1 %* 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/14/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '*=' (1:5)
> 1 | a %*= 1;
    |     ^
  2 |],
  "input": "a %*= 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/15/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:7)
> 1 | -(5) ** 6;
    |       ^
  2 |],
  "input": "-(5) ** 6;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/exponentiation-operator/16/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:6)
> 1 | (-5 ** 6);
    |      ^
  2 |],
  "input": "(-5 ** 6);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/array-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:49]: Illegal 'use strict' directive in function with non-simple parameter list (2:49)
  1 | function a([ option1, option2 ]) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a([ option1, option2 ]) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/array-pattern-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:54]: Illegal 'use strict' directive in function with non-simple parameter list (2:54)
  1 | function a([ option1, option2 ] = []) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a([ option1, option2 ] = []) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:42]: Illegal 'use strict' directive in function with non-simple parameter list (2:42)
  1 | var a = (options = {}) => {
> 2 |   "use strict";
    |                                    ^
  3 | };
  4 |],
  "input": "var a = (options = {}) => {
  \\"use strict\\";
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/async-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:48]: Illegal 'use strict' directive in function with non-simple parameter list (2:48)
  1 | var a = async (options = {}) => {
> 2 |   "use strict";
    |                                    ^
  3 | };
  4 |],
  "input": "var a = async (options = {}) => {
  \\"use strict\\";
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/async-arrow-function-after-binary-operator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: \`=>\` is an invalid assignment target (1:14)
> 1 | 3 + async() => 2
    |              ^],
  "input": "3 + async() => 2",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/async-arrow-function-after-unary-operator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: \`=>\` is an invalid assignment target (1:18)
> 1 | delete async () => 3;
    |                  ^],
  "input": "delete async () => 3;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:47]: Illegal 'use strict' directive in function with non-simple parameter list (2:47)
  1 | async function a(options = {}) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "async function a(options = {}) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:41]: Illegal 'use strict' directive in function with non-simple parameter list (2:41)
  1 | function a(options = {}) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a(options = {}) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/generator-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:42]: Illegal 'use strict' directive in function with non-simple parameter list (2:42)
  1 | function* a(options = {}) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function* a(options = {}) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/generator-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:50]: Illegal 'use strict' directive in function with non-simple parameter list (3:50)
  1 | var obj = {
  2 |   * a(options = {}) {
> 3 |     "use strict";
    |                                      ^
  4 |   }
  5 | };
  6 |],
  "input": "var obj = {
  * a(options = {}) {
    \\"use strict\\";
  }
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:48]: Illegal 'use strict' directive in function with non-simple parameter list (3:48)
  1 | var obj = {
  2 |   a(options = {}) {
> 3 |     "use strict";
    |                                      ^
  4 |   }
  5 | };
  6 |],
  "input": "var obj = {
  a(options = {}) {
    \\"use strict\\";
  }
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/object-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:49]: Illegal 'use strict' directive in function with non-simple parameter list (2:49)
  1 | function a({ option1, option2 }) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a({ option1, option2 }) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/object-pattern-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:54]: Illegal 'use strict' directive in function with non-simple parameter list (2:54)
  1 | function a({ option1, option2 } = {}) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a({ option1, option2 } = {}) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2016/simple-parameter-list/rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:39]: Illegal 'use strict' directive in function with non-simple parameter list (2:39)
  1 | function a(...options) {
> 2 |   "use strict";
    |                                    ^
  3 | }
  4 |],
  "input": "function a(...options) {
  \\"use strict\\";
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-arrow/parenthesized-array-pattern-nested/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Invalid left-hand side in async arrow (1:30)
> 1 | async ([ [(a)] = [] ] = []) => {};
    |                              ^
  2 |],
  "input": "async ([ [(a)] = [] ] = []) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-arrow/parenthesized-binding-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Unexpected token: '=>' (1:26)
> 1 | var foo = async ((foo)) => {};
    |                          ^
  2 |],
  "input": "var foo = async ((foo)) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-arrow/parenthesized-binding-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: Invalid left-hand side in async arrow (1:28)
> 1 | var foo = async ([(foo)]) => {};
    |                            ^
  2 |],
  "input": "var foo = async ([(foo)]) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-arrow/parenthesized-rest-array/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Invalid left-hand side in async arrow (1:31)
> 1 | var foo = async ([...(foo)]) => {};
    |                               ^
  2 |],
  "input": "var foo = async ([...(foo)]) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-arrow/parenthesized-rest-object/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Invalid left-hand side in async arrow (1:31)
> 1 | var foo = async ({...(foo)}) => {};
    |                               ^
  2 |],
  "input": "var foo = async ({...(foo)}) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Unexpected token: '*' (2:8)
  1 | async function bar() {
> 2 |   await* foo();
    |        ^
  3 | }
  4 |],
  "input": "async function bar() {
  await* foo();
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Expected '(' (1:12)
> 1 | ({ async a });
    |            ^
  2 |],
  "input": "({ async a });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Expected '(' (1:11)
> 1 | ({ async a: function () {} });
    |           ^
  2 |],
  "input": "({ async a: function () {} });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Block body arrows can not be immediately invoked without a group (1:15)
> 1 | async () => {}()
    |               ^
  2 |],
  "input": "async () => {}()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/9/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: 'Await' may not be used as an identifier in this context (1:29)
> 1 | function foo(promise) { await promise; }
    |                             ^],
  "input": "function foo(promise) { await promise; }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/10/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:6]: No line break is allowed after '=>' (2:6)
  1 | var x = async
> 2 | (x) => x + 1;
    |      ^],
  "input": "var x = async
(x) => x + 1;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/35/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Invalid shorthand property initializer (1:29)
> 1 | const foo = { async = true };
    |                             ^
  2 |],
  "input": "const foo = { async = true };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/36/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Expected '=>' (1:31)
> 1 | const foo = ({ async = true });
    |                               ^
  2 |],
  "input": "const foo = ({ async = true });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/allow-await-outside-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'Await' may not be used as an identifier in this context (1:5)
> 1 | await 1
    |     ^
  2 |],
  "input": "await 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/allow-await-outside-function-throw/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: 'Await' may not be used as an identifier in this context (2:14)
  1 | function a() {
> 2 |   return await 1
    |              ^
  3 | }
  4 |],
  "input": "function a() {
  return await 1
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/async-await-as-arrow-binding-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Await expression not allowed in formal parameter (1:11)
> 1 | async await => {}
    |           ^
  2 |],
  "input": "async await => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-async-function-expression-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Await is only valid in async functions (1:21)
> 1 | (async function await() {});
    |                     ^],
  "input": "(async function await() {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-binding-inside-arrow-params-inside-async-arrow-params/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Await is only valid in async functions (1:21)
> 1 | async (a = ({ await }) => {}) => {};
    |                     ^
  2 |],
  "input": "async (a = ({ await }) => {}) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-function-declaration-name-inside-async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:16]: Await is only valid in async functions (2:16)
  1 | async function foo() {
> 2 |   function await() {}
    |                ^
  3 | }],
  "input": "async function foo() {
  function await() {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-identifier-class-binding-inside-params-of-function-inside-params-of-async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Await is only valid in async functions (1:37)
> 1 | async (x = function f(x = class await {}){}) => {}
    |                                     ^
  2 |],
  "input": "async (x = function f(x = class await {}){}) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-identifier-inside-async-call-inside-parameters-of-async-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:35]: 'Await' may not be used as an identifier in this context (1:35)
> 1 | async (x = function() { async(await) }) => {}
    |                                   ^
  2 |],
  "input": "async (x = function() { async(await) }) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-arguments-of-async-call-inside-parameters-of-async-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:35]: Await expression not allowed in formal parameter (2:35)
  1 | async function fn() {
> 2 |   async (x = async(y = await 2)) => {};
    |                                   ^
  3 | }],
  "input": "async function fn() {
  async (x = async(y = await 2)) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-arrow-expression-disallowed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: 'Await' may not be used as an identifier in this context (1:13)
> 1 | () => { await x }
    |             ^],
  "input": "() => { await x }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-parameters/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:27]: Await expression not allowed in formal parameter (1:27)
> 1 | async function fn(x = await 2) {}
    |                           ^],
  "input": "async function fn(x = await 2) {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-parameters-of-async-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'Await' may not be used as an identifier in this context (1:16)
> 1 | async (x = await 2) => {};
    |                ^],
  "input": "async (x = await 2) => {};",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-parameters-of-nested-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Await expression not allowed in formal parameter (2:18)
  1 | async function fn() {
> 2 |   (x = await 2) => {};
    |                  ^
  3 | }],
  "input": "async function fn() {
  (x = await 2) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-parameters-of-nested-async-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:24]: Await expression not allowed in formal parameter (2:24)
  1 | async function fn() {
> 2 |   async (x = await 2) => {};
    |                        ^
  3 | }],
  "input": "async function fn() {
  async (x = await 2) => {};
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/await-inside-parameters-of-nested-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:24]: 'Await' may not be used as an identifier in this context (2:24)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                        ^
  3 | }],
  "input": "async function foo() {
  function bar(x = await 2) {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/export-async/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: ';' (1:13)
> 1 | export async;
    |             ^
  2 |],
  "input": "export async;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/export-invalid/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:32]: Expected '=>' (1:32)
> 1 | export default async functionX () {}
    |                                ^
  2 |],
  "input": "export default async functionX () {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-await-with-object-exp-in-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:7]: 'Await' may not be used as an identifier in this context (2:7)
  1 | function foo() {
> 2 |   await { foo };
    |       ^
  3 | }
  4 |],
  "input": "function foo() {
  await { foo };
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-async-class-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: 'escaped keyword' (1:14)
> 1 | class X { \\u0061sync x() { await x } }
    |              ^
  2 |],
  "input": "class X { \\\\u0061sync x() { await x } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-async-obj-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: 'Unexpected token: 'escaped keyword' (1:9)
> 1 | ({ \\u0061sync x() { await x } })
    |         ^
  2 |],
  "input": "({ \\\\u0061sync x() { await x } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-async-static-class-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Unexpected token: 'escaped keyword' (1:21)
> 1 | class X { static \\u0061sync x() { await x } }
    |                     ^
  2 |],
  "input": "class X { static \\\\u0061sync x() { await x } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected token: 'escaped keyword' (1:24)
> 1 | (async function() { aw\\u0061it x })
    |                        ^
  2 |],
  "input": "(async function() { aw\\\\u0061it x })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-export-async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: 'escaped keyword' (1:11)
> 1 | export \\u0061sync function y() { await x }
    |           ^
  2 |],
  "input": "export \\\\u0061sync function y() { await x }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-export-dflt-async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected token: 'escaped keyword' (1:19)
> 1 | export default \\u0061sync function y() { await x }
    |                   ^
  2 |],
  "input": "export default \\\\u0061sync function y() { await x }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-sequence-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'escaped keyword' (1:4)
> 1 | \\u0061sync x => { await x }
    |    ^
  2 |],
  "input": "\\\\u0061sync x => { await x }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-sequence-arrow-list/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'escaped keyword' (1:5)
> 1 | (\\u0061sync x => { await x })
    |     ^
  2 |],
  "input": "(\\\\u0061sync x => { await x })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-sequence-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'escaped keyword' (1:4)
> 1 | \\u0061sync function() { await x }
    |    ^
  2 |],
  "input": "\\\\u0061sync function() { await x }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-escape-sequence-function-list/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: 'escaped keyword' (1:5)
> 1 | (\\u0061sync function() { await x })
    |     ^
  2 |],
  "input": "(\\\\u0061sync function() { await x })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-inside-loop/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Async functions can only be declared at the top level or inside a block (1:24)
> 1 | while (1) async function foo(){}
    |                        ^],
  "input": "while (1) async function foo(){}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-newline-after-params/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:2]: No line break is allowed after '=>' (2:2)
  1 | async (x)
> 2 | => {}
    |  ^
  3 |],
  "input": "async (x)
=> {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-parens-async-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: '=>' (1:13)
> 1 | (async)(a) => {}
    |             ^
  2 |],
  "input": "(async)(a) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/invalid-parens-async-func/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: 'function' (1:16)
> 1 | (async) function x (a) {}
    |                ^
  2 |],
  "input": "(async) function x (a) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/multiple-await-in-async-arrow-params/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: 'Await' may not be used as an identifier in this context (1:20)
> 1 | async ({ x = [ await ], y = { await } }) => {}
    |                    ^
  2 |],
  "input": "async ({ x = [ await ], y = { await } }) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/newline-before-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:2]: No line break is allowed after '=>' (2:2)
  1 | async x
> 2 | => x
    |  ^
  3 |],
  "input": "async x
=> x
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/no-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: Class constructor may not be a accessor (2:20)
  1 | class A {
> 2 |   async constructor() {}
    |                    ^
  3 | }],
  "input": "class A {
  async constructor() {}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/async-functions/params-invalid-rest-trailing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Invalid left-hand side in async arrow (1:16)
> 1 | async (...a,) => {};
    |                ^
  2 |],
  "input": "async (...a,) => {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/trailing-function-commas/5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: ',' (1:5)
> 1 | log(,);
    |     ^],
  "input": "log(,);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/trailing-function-commas/6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected ')' (1:14)
> 1 | function log(,) { }
    |              ^],
  "input": "function log(,) { }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2017/trailing-function-commas/7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: ')' (1:8)
> 1 | ('foo',)
    |        ^],
  "input": "('foo',)",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/async-generators/for-await-async-context/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:11]: Expected '(' (2:11)
  1 | function f() {
> 2 |   for await (let x of y);
    |           ^
  3 | }
  4 |],
  "input": "function f() {
  for await (let x of y);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/async-generators/for-await-no-in/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:23]: for await (... of ...) is only valid in async functions and async generators (2:23)
  1 | async function f() {
> 2 |   for await (let x in y);
    |                       ^
  3 | }
  4 |],
  "input": "async function f() {
  for await (let x in y);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/async-generators/for-await-no-semi-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: for await (... of ...) is only valid in async functions and async generators (2:14)
  1 | async function f() {
> 2 |   for await (;false;);
    |              ^
  3 | }
  4 |],
  "input": "async function f() {
  for await (;false;);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/async-generators/for-await-no-semi-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:23]: for await (... of ...) is only valid in async functions and async generators (2:23)
  1 | async function f() {
> 2 |   for await (let i = 0;false;);
    |                       ^
  3 | }
  4 |],
  "input": "async function f() {
  for await (let i = 0;false;);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/async-generators/for-await-no-semi-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:16]: for await (... of ...) is only valid in async functions and async generators (2:16)
  1 | async function f() {
> 2 |   for await (x = 0;false;);
    |                ^
  3 | }
  4 |],
  "input": "async function f() {
  for await (x = 0;false;);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: The binding declaration is not destructible (1:20)
> 1 | let { ...x, y, z } = obj;
    |                    ^
  2 |],
  "input": "let { ...x, y, z } = obj;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/8/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: The binding declaration is not destructible (1:21)
> 1 | let { x, y, ...z, } = obj;
    |                     ^
  2 |],
  "input": "let { x, y, ...z, } = obj;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/9/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The binding declaration is not destructible (1:23)
> 1 | let { x, ...y, ...z } = obj;
    |                       ^
  2 |],
  "input": "let { x, ...y, ...z } = obj;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/16/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: The binding declaration is not destructible (1:14)
> 1 | var {...{z}} = { z: 1};
    |              ^
  2 |],
  "input": "var {...{z}} = { z: 1};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/17/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: The binding declaration is not destructible (1:22)
> 1 | var { ...{ x = 5 } } = {x : 1};
    |                      ^
  2 |],
  "input": "var { ...{ x = 5 } } = {x : 1};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/18/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid left-hand side in assignment (1:12)
> 1 | ({...{}} = {})
    |            ^
  2 |],
  "input": "({...{}} = {})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/19/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: The binding declaration is not destructible (1:22)
> 1 | function test({...{}}) {}
    |                      ^
  2 |],
  "input": "function test({...{}}) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/20/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The binding declaration is not destructible (1:23)
> 1 | function test({...{a}}) {}
    |                       ^
  2 |],
  "input": "function test({...{a}}) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/21/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid left-hand side in assignment (1:15)
> 1 | ({...x = 1} = {})
    |               ^
  2 |],
  "input": "({...x = 1} = {})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/22/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: The binding declaration is not destructible (1:16)
> 1 | var {...x = 1} = {}
    |                ^
  2 |],
  "input": "var {...x = 1} = {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/23/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: The binding declaration is not destructible (1:25)
> 1 | function test({...x = 1}) {}
    |                         ^
  2 |],
  "input": "function test({...x = 1}) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/24/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid left-hand side in assignment (1:12)
> 1 | ({...[]} = {})
    |            ^
  2 |],
  "input": "({...[]} = {})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/25/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: The binding declaration is not destructible (1:13)
> 1 | var {...[]} = {}
    |             ^
  2 |],
  "input": "var {...[]} = {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/26/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: The binding declaration is not destructible (1:22)
> 1 | function test({...[]}) {}
    |                      ^
  2 |],
  "input": "function test({...[]}) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/comma-after-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid left-hand side in assignment (1:12)
> 1 | ({...a,} = {});
    |            ^],
  "input": "({...a,} = {});",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/comma-after-spread-for-in/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid left-hand side in for-in (1:15)
> 1 | for ({...a,} in []);
    |               ^
  2 |],
  "input": "for ({...a,} in []);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/comma-after-spread-nested/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | [{...a,}] = [];
    |             ^],
  "input": "[{...a,}] = [];",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2018/object-rest-spread/expression-rest-not-last-invalid/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid left-hand side in assignment (1:17)
> 1 | ({...rest, b} = {})
    |                 ^
  2 |],
  "input": "({...rest, b} = {})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/bigint/invalid-decimal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 1.0n
    |   ^
  2 |],
  "input": "1.0n
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/bigint/invalid-e/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 2e9n
    |   ^
  2 |],
  "input": "2e9n
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/bigint/invalid-non-octal-decimal-int/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 089n
    | ^],
  "input": "089n",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/bigint/invalid-octal-legacy/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 016432n
    | ^
  2 |],
  "input": "016432n
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/direct-calls-only/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: Unexpected token: 'identifier' (2:20)
  1 | function failsParse() {
> 2 |   return import.then();
    |                    ^
  3 | }
  4 |],
  "input": "function failsParse() {
  return import.then();
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/invalid-arguments-spread/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: ... is not allowed in import() (1:10)
> 1 | import(...[1])
    |          ^
  2 |],
  "input": "import(...[1])
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/invalid-new/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Cannot use new with import(...) (1:11)
> 1 | new import("foo");
    |           ^
  2 |],
  "input": "new import(\\"foo\\");
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/invalid-trailing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected ')' (1:13)
> 1 | import("foo",);
    |             ^],
  "input": "import(\\"foo\\",);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/multiple-args/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Expected ')' (1:15)
> 1 | import('hello', 'world', '!');
    |               ^
  2 |],
  "input": "import('hello', 'world', '!');
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/dynamic-import/no-args/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: ')' (1:8)
> 1 | import();
    |        ^
  2 |],
  "input": "import();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/export-ns-from/ns-and-named/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Expected 'from' (1:16)
> 1 | export * as foo, { bar } from "bar";
    |                ^],
  "input": "export * as foo, { bar } from \\"bar\\";",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/export-ns-from/ns-dangling-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Expected 'from' (1:16)
> 1 | export * as foo,
    |                ^
  2 |],
  "input": "export * as foo,
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/import-meta/no-other-prop-names/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: 'identifier' (1:14)
> 1 | import.notMeta;
    |              ^
  2 |],
  "input": "import.notMeta;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/import-meta/not-assignable/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid left-hand side in assignment (1:13)
> 1 | import.meta = true;
    |             ^
  2 |],
  "input": "import.meta = true;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/nullish-coalescing-operator/no-paren-and-nullish/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Coalescing and logical operators used together in the same expression must be disambiguated with parentheses (1:9)
> 1 | c && d ?? e;
    |         ^
  2 |],
  "input": "c && d ?? e;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/nullish-coalescing-operator/no-paren-nullish-and/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Coalescing and logical operators used together in the same expression must be disambiguated with parentheses (1:9)
> 1 | a ?? b && c;
    |         ^
  2 |],
  "input": "a ?? b && c;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/nullish-coalescing-operator/no-paren-nullish-or/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Coalescing and logical operators used together in the same expression must be disambiguated with parentheses (1:14)
> 1 | e ?? f ?? g || h;
    |              ^
  2 |],
  "input": "e ?? f ?? g || h;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/nullish-coalescing-operator/no-paren-or-nullish/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Coalescing and logical operators used together in the same expression must be disambiguated with parentheses (1:9)
> 1 | h || i ?? j;
    |         ^
  2 |],
  "input": "h || i ?? j;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/nullish-coalescing-operator/with-pipeline/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | a |> b ?? c;
    |    ^
  2 |],
  "input": "a |> b ?? c;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/optional-chaining/class-contructor-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid optional chain from new expression (1:7)
> 1 | new C?.b.d()
    |       ^],
  "input": "new C?.b.d()",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/optional-chaining/optional-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid optional chain from new expression (1:7)
> 1 | new a?.();
    |       ^],
  "input": "new a?.();",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/optional-chaining/optional-super-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:22]: Invalid optional chain from super property (3:22)
  1 | const a = {
  2 |     b(){
> 3 |         return super?.c;
    |                      ^
  4 |     }
  5 | }],
  "input": "const a = {
    b(){
        return super?.c;
    }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/optional-chaining/optional-super-property-class/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:22]: Invalid optional chain from super property (3:22)
  1 | class A{
  2 |     b(){
> 3 |         return super?.b;
    |                      ^
  4 |     }
  5 | }],
  "input": "class A{
    b(){
        return super?.b;
    }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2020/optional-chaining/optional-tagged-template-literals/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid tagged template on optional chain (1:9)
> 1 | a?.b\`foo\`
    |         ^],
  "input": "a?.b\`foo\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-0/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Numeric separators are not allowed at the end of numeric literals (1:3)
> 1 | 1_
    |   ^
  2 |],
  "input": "1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_
    |     ^
  2 |],
  "input": "1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Only one underscore is allowed as numeric separator (1:5)
> 1 | 1_1__
    |     ^
  2 |],
  "input": "1_1__
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | 1__1
    |   ^
  2 |],
  "input": "1__1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_.1_1
    |     ^
  2 |],
  "input": "1_1_.1_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token (1:4)
> 1 | 1_1._1_1
    |    ^
  2 |],
  "input": "1_1._1_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_e1
    |       ^
  2 |],
  "input": "1_1.1_e1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_E1
    |       ^
  2 |],
  "input": "1_1.1_E1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-8/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1e_1
    |      ^
  2 |],
  "input": "1_1.1e_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-9/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1E_1
    |      ^
  2 |],
  "input": "1_1.1E_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-10/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0x1_1_
    |      ^
  2 |],
  "input": "0x1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-11/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0xa_1_
    |      ^
  2 |],
  "input": "0xa_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-12/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_a_1
    |  ^
  2 |],
  "input": "0x_a_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-13/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x__1_1_
    |  ^
  2 |],
  "input": "0x__1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-14/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1__1
    |  ^
  2 |],
  "input": "0x_1__1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-15/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1_1_
    |  ^
  2 |],
  "input": "0x_1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-16/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1
    |  ^
  2 |],
  "input": "0o_1_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-17/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_11
    |  ^
  2 |],
  "input": "0o_11
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-18/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_01_1_
    |  ^
  2 |],
  "input": "0o_01_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-19/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_0_1_1
    |  ^
  2 |],
  "input": "0b_0_1_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-20/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_01_1_
    |  ^
  2 |],
  "input": "0b_01_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-21/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 0b01_1_
    |       ^
  2 |],
  "input": "0b01_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-22/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0o1_1_
    |      ^
  2 |],
  "input": "0o1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-23/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1_
    |  ^
  2 |],
  "input": "0o_1_1_
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-24/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '.' (1:1)
> 1 | ._1_1
    | ^
  2 |],
  "input": "._1_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-25/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 0o01_8
    |     ^
  2 |],
  "input": "0o01_8
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-26/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0b2_1
    |  ^
  2 |],
  "input": "0b2_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-27/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Missing hexadecimal digits (1:2)
> 1 | 0xZ_1
    |  ^
  2 |],
  "input": "0xZ_1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-28/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Numeric separators are not allowed at the end of numeric literals (1:3)
> 1 | 1_;
    |   ^
  2 |],
  "input": "1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-29/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_;
    |     ^
  2 |],
  "input": "1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-30/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Only one underscore is allowed as numeric separator (1:5)
> 1 | 1_1__;
    |     ^
  2 |],
  "input": "1_1__;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-31/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | 1__1;
    |   ^
  2 |],
  "input": "1__1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-32/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_.1_1;
    |     ^
  2 |],
  "input": "1_1_.1_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-33/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token (1:4)
> 1 | 1_1._1_1;
    |    ^
  2 |],
  "input": "1_1._1_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-34/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_e1;
    |       ^
  2 |],
  "input": "1_1.1_e1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-35/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_E1;
    |       ^
  2 |],
  "input": "1_1.1_E1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-36/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1e_1;
    |      ^
  2 |],
  "input": "1_1.1e_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-37/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1E_1;
    |      ^
  2 |],
  "input": "1_1.1E_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-38/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0x1_1_;
    |      ^
  2 |],
  "input": "0x1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-39/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0xa_1_;
    |      ^
  2 |],
  "input": "0xa_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-40/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_a_1;
    |  ^
  2 |],
  "input": "0x_a_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-41/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x__1_1_;
    |  ^
  2 |],
  "input": "0x__1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-42/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1__1;
    |  ^
  2 |],
  "input": "0x_1__1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-43/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1_1_;
    |  ^
  2 |],
  "input": "0x_1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-44/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1;
    |  ^
  2 |],
  "input": "0o_1_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-45/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_11;
    |  ^
  2 |],
  "input": "0o_11;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-46/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_01_1_;
    |  ^
  2 |],
  "input": "0o_01_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-47/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_0_1_1;
    |  ^
  2 |],
  "input": "0b_0_1_1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-48/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_01_1_;
    |  ^
  2 |],
  "input": "0b_01_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-49/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 0b01_1_;
    |       ^
  2 |],
  "input": "0b01_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-50/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0o1_1_;
    |      ^
  2 |],
  "input": "0o1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-51/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1_;
    |  ^
  2 |],
  "input": "0o_1_1_;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-52/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Numeric separators are not allowed at the end of numeric literals (1:3)
> 1 | 1_, 0
    |   ^
  2 |],
  "input": "1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-53/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_, 0
    |     ^
  2 |],
  "input": "1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-54/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Only one underscore is allowed as numeric separator (1:5)
> 1 | 1_1__, 0
    |     ^
  2 |],
  "input": "1_1__, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-55/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | 1__1, 0
    |   ^
  2 |],
  "input": "1__1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-56/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Numeric separators are not allowed at the end of numeric literals (1:5)
> 1 | 1_1_.1_1, 0
    |     ^
  2 |],
  "input": "1_1_.1_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-57/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token (1:4)
> 1 | 1_1._1_1, 0
    |    ^
  2 |],
  "input": "1_1._1_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-58/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_e1, 0
    |       ^
  2 |],
  "input": "1_1.1_e1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-59/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 1_1.1_E1, 0
    |       ^
  2 |],
  "input": "1_1.1_E1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-60/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1e_1, 0
    |      ^
  2 |],
  "input": "1_1.1e_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-61/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Non-number found after exponent indicator (1:6)
> 1 | 1_1.1E_1, 0
    |      ^
  2 |],
  "input": "1_1.1E_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-62/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0x1_1_, 0
    |      ^
  2 |],
  "input": "0x1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-63/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0xa_1_, 0
    |      ^
  2 |],
  "input": "0xa_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-64/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_a_1, 0
    |  ^
  2 |],
  "input": "0x_a_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-65/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x__1_1_, 0
    |  ^
  2 |],
  "input": "0x__1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-66/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1__1, 0
    |  ^
  2 |],
  "input": "0x_1__1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-67/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0x_1_1_, 0
    |  ^
  2 |],
  "input": "0x_1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-68/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1, 0
    |  ^
  2 |],
  "input": "0o_1_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-69/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_11, 0
    |  ^
  2 |],
  "input": "0o_11, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-70/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_01_1_, 0
    |  ^
  2 |],
  "input": "0o_01_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-71/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_0_1_1, 0
    |  ^
  2 |],
  "input": "0b_0_1_1, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-72/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0b_01_1_, 0
    |  ^
  2 |],
  "input": "0b_01_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-73/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | 0b01_1_, 0
    |       ^
  2 |],
  "input": "0b01_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-74/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | 0o1_1_, 0
    |      ^
  2 |],
  "input": "0o1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-75/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Only one underscore is allowed as numeric separator (1:2)
> 1 | 0o_1_1_, 0
    |  ^
  2 |],
  "input": "0o_1_1_, 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-76/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Numeric separators are not allowed at the end of numeric literals (1:4)
> 1 | [1_]
    |    ^
  2 |],
  "input": "[1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-77/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | [1_1_]
    |      ^
  2 |],
  "input": "[1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-78/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Only one underscore is allowed as numeric separator (1:6)
> 1 | [1_1__]
    |      ^
  2 |],
  "input": "[1_1__]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-79/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Only one underscore is allowed as numeric separator (1:4)
> 1 | [1__1]
    |    ^
  2 |],
  "input": "[1__1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-80/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | [1_1_.1_1]
    |      ^
  2 |],
  "input": "[1_1_.1_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-81/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token (1:5)
> 1 | [1_1._1_1]
    |     ^
  2 |],
  "input": "[1_1._1_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-82/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | [1_1.1_e1]
    |        ^
  2 |],
  "input": "[1_1.1_e1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-83/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | [1_1.1_E1]
    |        ^
  2 |],
  "input": "[1_1.1_E1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-84/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | [1_1.1e_1]
    |       ^
  2 |],
  "input": "[1_1.1e_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-85/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | [1_1.1E_1]
    |       ^
  2 |],
  "input": "[1_1.1E_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-86/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | [0x1_1_]
    |       ^
  2 |],
  "input": "[0x1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-87/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | [0xa_1_]
    |       ^
  2 |],
  "input": "[0xa_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-88/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0x_a_1]
    |   ^
  2 |],
  "input": "[0x_a_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-89/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0x__1_1_]
    |   ^
  2 |],
  "input": "[0x__1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-90/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0x_1__1]
    |   ^
  2 |],
  "input": "[0x_1__1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-91/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0x_1_1_]
    |   ^
  2 |],
  "input": "[0x_1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-92/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0o_1_1]
    |   ^
  2 |],
  "input": "[0o_1_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-93/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0o_11]
    |   ^
  2 |],
  "input": "[0o_11]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-94/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0o_01_1_]
    |   ^
  2 |],
  "input": "[0o_01_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-95/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0b_0_1_1]
    |   ^
  2 |],
  "input": "[0b_0_1_1]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-96/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0b_01_1_]
    |   ^
  2 |],
  "input": "[0b_01_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-97/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | [0b01_1_]
    |        ^
  2 |],
  "input": "[0b01_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-98/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | [0o1_1_]
    |       ^
  2 |],
  "input": "[0o1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-99/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | [0o_1_1_]
    |   ^
  2 |],
  "input": "[0o_1_1_]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-100/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Numeric separators are not allowed at the end of numeric literals (1:4)
> 1 | (1_)
    |    ^
  2 |],
  "input": "(1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-101/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | (1_1_)
    |      ^
  2 |],
  "input": "(1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-102/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Only one underscore is allowed as numeric separator (1:6)
> 1 | (1_1__)
    |      ^
  2 |],
  "input": "(1_1__)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-103/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Only one underscore is allowed as numeric separator (1:4)
> 1 | (1__1)
    |    ^
  2 |],
  "input": "(1__1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-104/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | (1_1_.1_1)
    |      ^
  2 |],
  "input": "(1_1_.1_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-105/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token (1:5)
> 1 | (1_1._1_1)
    |     ^
  2 |],
  "input": "(1_1._1_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-106/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | (1_1.1_e1)
    |        ^
  2 |],
  "input": "(1_1.1_e1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-107/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | (1_1.1_E1)
    |        ^
  2 |],
  "input": "(1_1.1_E1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-108/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | (1_1.1e_1)
    |       ^
  2 |],
  "input": "(1_1.1e_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-109/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | (1_1.1E_1)
    |       ^
  2 |],
  "input": "(1_1.1E_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-110/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | (0x1_1_)
    |       ^
  2 |],
  "input": "(0x1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-111/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | (0xa_1_)
    |       ^
  2 |],
  "input": "(0xa_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-112/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0x_a_1)
    |   ^
  2 |],
  "input": "(0x_a_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-113/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0x__1_1_)
    |   ^
  2 |],
  "input": "(0x__1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-114/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0x_1__1)
    |   ^
  2 |],
  "input": "(0x_1__1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-115/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0x_1_1_)
    |   ^
  2 |],
  "input": "(0x_1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-116/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0o_1_1)
    |   ^
  2 |],
  "input": "(0o_1_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-117/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0o_11)
    |   ^
  2 |],
  "input": "(0o_11)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-118/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0o_01_1_)
    |   ^
  2 |],
  "input": "(0o_01_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-119/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0b_0_1_1)
    |   ^
  2 |],
  "input": "(0b_0_1_1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-120/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0b_01_1_)
    |   ^
  2 |],
  "input": "(0b_01_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-121/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | (0b01_1_)
    |        ^
  2 |],
  "input": "(0b01_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-122/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | (0o1_1_)
    |       ^
  2 |],
  "input": "(0o1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-123/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | (0o_1_1_)
    |   ^
  2 |],
  "input": "(0o_1_1_)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-124/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Numeric separators are not allowed at the end of numeric literals (1:4)
> 1 | {1_}
    |    ^
  2 |],
  "input": "{1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-125/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | {1_1_}
    |      ^
  2 |],
  "input": "{1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-126/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Only one underscore is allowed as numeric separator (1:6)
> 1 | {1_1__}
    |      ^
  2 |],
  "input": "{1_1__}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-127/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Only one underscore is allowed as numeric separator (1:4)
> 1 | {1__1}
    |    ^
  2 |],
  "input": "{1__1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-128/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Numeric separators are not allowed at the end of numeric literals (1:6)
> 1 | {1_1_.1_1}
    |      ^
  2 |],
  "input": "{1_1_.1_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-129/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token (1:5)
> 1 | {1_1._1_1}
    |     ^
  2 |],
  "input": "{1_1._1_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-130/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | {1_1.1_e1}
    |        ^
  2 |],
  "input": "{1_1.1_e1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-131/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | {1_1.1_E1}
    |        ^
  2 |],
  "input": "{1_1.1_E1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-132/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | {1_1.1e_1}
    |       ^
  2 |],
  "input": "{1_1.1e_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-133/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Non-number found after exponent indicator (1:7)
> 1 | {1_1.1E_1}
    |       ^
  2 |],
  "input": "{1_1.1E_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-134/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | {0x1_1_}
    |       ^
  2 |],
  "input": "{0x1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-135/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | {0xa_1_}
    |       ^
  2 |],
  "input": "{0xa_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-136/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0x_a_1}
    |   ^
  2 |],
  "input": "{0x_a_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-137/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0x__1_1_}
    |   ^
  2 |],
  "input": "{0x__1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-138/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0x_1__1}
    |   ^
  2 |],
  "input": "{0x_1__1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-139/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0x_1_1_}
    |   ^
  2 |],
  "input": "{0x_1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-140/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0o_1_1}
    |   ^
  2 |],
  "input": "{0o_1_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-141/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0o_11}
    |   ^
  2 |],
  "input": "{0o_11}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-142/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0o_01_1_}
    |   ^
  2 |],
  "input": "{0o_01_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-143/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0b_0_1_1}
    |   ^
  2 |],
  "input": "{0b_0_1_1}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-144/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0b_01_1_}
    |   ^
  2 |],
  "input": "{0b_01_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-145/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Numeric separators are not allowed at the end of numeric literals (1:8)
> 1 | {0b01_1_}
    |        ^
  2 |],
  "input": "{0b01_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-146/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Numeric separators are not allowed at the end of numeric literals (1:7)
> 1 | {0o1_1_}
    |       ^
  2 |],
  "input": "{0o1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-147/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Only one underscore is allowed as numeric separator (1:3)
> 1 | {0o_1_1_}
    |   ^
  2 |],
  "input": "{0o_1_1_}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-hex/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | "\\x1_0";
    |    ^
  2 |],
  "input": "\\"\\\\x1_0\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-leading-zero/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token (1:1)
> 1 | 0_8
    | ^],
  "input": "0_8",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-legacy-octal-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 00_0
    | ^],
  "input": "00_0",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-non-octal-decimal-int/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 08_0n
    | ^],
  "input": "08_0n",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-unicode/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid hexadecimal escape sequence (1:6)
> 1 | "\\u{1F_639}"
    |      ^
  2 |],
  "input": "\\"\\\\u{1F_639}\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/es2021/numeric-separator/invalid-unicode-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u12_34"
    |   ^
  2 |],
  "input": "\\"\\\\u12_34\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-array-pattern/with-default-catch-param-fail/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Catch clause parameter does not support default values (1:20)
> 1 | try { } catch ([a] = []) { }
    |                    ^
  2 |],
  "input": "try { } catch ([a] = []) { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/arrow-rest-forgetting-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Expected ')' (1:6)
> 1 | (a ...b) => 0
    |      ^
  2 |],
  "input": "(a ...b) => 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/arrow-with-multiple-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid rest argument (1:6)
> 1 | (...a, ...b) => 0
    |      ^
  2 |],
  "input": "(...a, ...b) => 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/invalid-line-terminator-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:2]: No line break is allowed after '=>' (2:2)
  1 | ()
> 2 | => 42
    |  ^
  3 |],
  "input": "()
=> 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/invalid-param-strict-mode/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected eval or arguments in strict mode (1:7)
> 1 | eval => {"use strict"};
    |       ^
  2 |],
  "input": "eval => {\\"use strict\\"};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/non-arrow-param-followed-by-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '=>' (1:8)
> 1 | ((a)) => 0
    |        ^
  2 |],
  "input": "((a)) => 0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/non-arrow-param-followed-by-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '...' (1:8)
> 1 | ((a),...b) => 0;
    |        ^
  2 |],
  "input": "((a),...b) => 0;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/object-binding-pattern-invalid-member-expr/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: The left-hand side of the arrow can only be destructed through assignment (1:12)
> 1 | ({a:b[0]})=>0
    |            ^
  2 |],
  "input": "({a:b[0]})=>0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/object-binding-pattern-invalid-method-in-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: The left-hand side of the arrow can only be destructed through assignment (1:16)
> 1 | ({get a(){}}) => 0;
    |                ^
  2 |],
  "input": "({get a(){}}) => 0;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/object-binding-pattern-invalid-nested-param/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: The left-hand side of the arrow can only be destructed through assignment (1:52)
> 1 | ([[[[[[[[[[[[[[[[[[[[{a:b[0]}]]]]]]]]]]]]]]]]]]]])=>0;
    |                                                    ^
  2 |],
  "input": "([[[[[[[[[[[[[[[[[[[[{a:b[0]}]]]]]]]]]]]]]]]]]]]])=>0;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/object-binding-pattern-invalid-pattern-without-parenthesis/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Expected ')' (1:5)
> 1 | ({}=>0)
    |     ^
  2 |],
  "input": "({}=>0)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/param-with-rest-without-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Expected '=>' (1:11)
> 1 | (b, ...a) + 1
    |           ^
  2 |],
  "input": "(b, ...a) + 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-arrow-function/rest-without-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected '=>' (1:8)
> 1 | (...a) + 1
    |        ^
  2 |],
  "input": "(...a) + 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-destructuring-assignment/invalid-cover-grammar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Invalid shorthand property initializer (2:0)
  1 | [[[[[[[[[[[[[[[[[[[[{a=b}]]]]]]]]]]]]]]]]]]]]
> 2 |],
  "input": "[[[[[[[[[[[[[[[[[[[[{a=b}]]]]]]]]]]]]]]]]]]]]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-destructuring-assignment/invalid-group-assignment/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid left-hand side in assignment (1:6)
> 1 | (a,b)=(c,d);
    |      ^
  2 |],
  "input": "(a,b)=(c,d);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-destructuring-assignment-object-pattern/invalid-lhs-01/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid left-hand side in assignment (1:11)
> 1 | ({a:this}=0)
    |           ^
  2 |],
  "input": "({a:this}=0)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-destructuring-assignment-object-pattern/invalid-lhs-02/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid left-hand side in assignment (1:14)
> 1 | ({a: this} = 0);
    |              ^
  2 |],
  "input": "({a: this} = 0);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-destructuring-assignment-object-pattern/invalid-pattern-with-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid left-hand side in assignment (1:10)
> 1 | ({a(){}}=0)
    |          ^
  2 |],
  "input": "({a(){}}=0)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-export-declaration/invalid-export-batch-missing-from-clause/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected 'from' (2:0)
  1 | export *
> 2 |],
  "input": "export *
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-export-declaration/invalid-export-batch-token/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected 'from' (1:10)
> 1 | export * +
    |          ^
  2 |],
  "input": "export * +
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-export-declaration/invalid-export-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Unexpected token: 'string' (1:25)
> 1 | export default from "foo"
    |                         ^
  2 |],
  "input": "export default from \\"foo\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-export-declaration/invalid-export-default-equal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: '=' (1:16)
> 1 | export default = 42
    |                ^
  2 |],
  "input": "export default = 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-export-declaration/invalid-export-default-token/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: '+' (1:18)
> 1 | export {default} +
    |                  ^
  2 |],
  "input": "export {default} +
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-for-of/invalid-const-init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'for-of' loop head declarations can not have an initializer (1:16)
> 1 | for (const x = 1 of y);
    |                ^
  2 |],
  "input": "for (const x = 1 of y);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-for-of/invalid-let-init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: 'for-of' loop head declarations can not have an initializer (1:14)
> 1 | for (let x = 1 of y);
    |              ^
  2 |],
  "input": "for (let x = 1 of y);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-for-of/invalid-lhs-init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid left-hand side in for-of (1:12)
> 1 | for (this of that);
    |            ^
  2 |],
  "input": "for (this of that);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-for-of/invalid-var-init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: 'for-of' loop head declarations can not have an initializer (1:14)
> 1 | for (var x = 1 of y);
    |              ^
  2 |],
  "input": "for (var x = 1 of y);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-for-of/unexpected-number/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Missing initializer in const declaration (1:16)
> 1 | for (const of 42);
    |                ^
  2 |],
  "input": "for (const of 42);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-method-with-invalid-computed-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: 'yield' may not be used as an identifier in this context (1:10)
> 1 | ({ *[yield iter]() {} })
    |          ^
  2 |],
  "input": "({ *[yield iter]() {} })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-binding-element/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Function declaration must have a name in this context (2:13)
  1 | (function*() {
> 2 |     function(x = yield 3) {}
    |             ^
  3 | })
  4 |],
  "input": "(function*() {
    function(x = yield 3) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-binding-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Function declaration must have a name in this context (2:13)
  1 | (function*() {
> 2 |     function({x: y = yield 3}) {}
    |             ^
  3 | })
  4 |],
  "input": "(function*() {
    function({x: y = yield 3}) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-computed-property-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Function declaration must have a name in this context (2:13)
  1 | (function*() {
> 2 |     function({[yield 3]: y}) {}
    |             ^
  3 | })
  4 |],
  "input": "(function*() {
    function({[yield 3]: y}) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-invalid-binding-element/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Function declaration must have a name in this context (2:14)
  1 | (function*() {
> 2 |     function*(x = yield 3) {}
    |              ^
  3 | })
  4 |],
  "input": "(function*() {
    function*(x = yield 3) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-invalid-binding-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Function declaration must have a name in this context (2:14)
  1 | (function*() {
> 2 |     function*({x: y = yield 3}) {}
    |              ^
  3 | })
  4 |],
  "input": "(function*() {
    function*({x: y = yield 3}) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/generator-parameter-invalid-computed-property-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Function declaration must have a name in this context (2:14)
  1 | (function*() {
> 2 |     function*({[yield 3]: y}) {}
    |              ^
  3 | })
  4 |],
  "input": "(function*() {
    function*({[yield 3]: y}) {}
})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/incomplete-yield-delegate/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unexpected token: '}' (1:23)
> 1 | (function*() { yield* })
    |                       ^
  2 |],
  "input": "(function*() { yield* })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/malformed-generator-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid object literal key character after generator star (1:6)
> 1 | ({ * })
    |      ^
  2 |],
  "input": "({ * })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-generator/malformed-generator-method-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid key token (1:15)
> 1 | class Foo { * }
    |               ^
  2 |],
  "input": "class Foo { * }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-identifier/invalid_escaped_surrogate_pairs/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Illegal Unicode escape sequence (1:4)
> 1 | var \\uD83B\\uDE00
    |    ^
  2 |],
  "input": "var \\\\uD83B\\\\uDE00
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-identifier/invalid_expression_await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: 'Await' may not be used as an identifier in this context (1:25)
> 1 | export var answer = await + 1;
    |                         ^
  2 |],
  "input": "export var answer = await + 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-identifier/invalid_id_smp/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Illegal character '|' (1:5)
> 1 | var 🀒
    |     ^
  2 |],
  "input": "var 🀒
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-identifier/invalid_var_await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Await is only valid in async functions (1:16)
> 1 | export var await;
    |                ^
  2 |],
  "input": "export var await;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected strict mode reserved word (1:14)
> 1 | import default from "foo"
    |              ^
  2 |],
  "input": "import default from \\"foo\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-default-after-named/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Import source must be string (1:13)
> 1 | import {bar}, foo from "foo"
    |             ^
  2 |],
  "input": "import {bar}, foo from \\"foo\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-default-after-named-after-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Import source must be string (1:18)
> 1 | import foo, {bar}, foo from "foo";
    |                  ^
  2 |],
  "input": "import foo, {bar}, foo from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-default-missing-module-specifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Import source must be string (2:0)
  1 | import foo
> 2 |],
  "input": "import foo
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-default-module-specifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Import source must be string (1:19)
> 1 | import foo from bar;
    |                   ^
  2 |],
  "input": "import foo from bar;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-missing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Import source must be string (1:12)
> 1 | import foo { bar } from "bar";
    |            ^
  2 |],
  "input": "import foo { bar } from \\"bar\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-missing-module-specifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Import source must be string (2:0)
  1 | import { foo, bar }
> 2 |],
  "input": "import { foo, bar }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-module-specifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Export source must be string (1:21)
> 1 | export {foo} from bar
    |                     ^
  2 |],
  "input": "export {foo} from bar
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-named-after-named/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Import source must be string (1:13)
> 1 | import {bar}, {foo} from "foo";
    |             ^
  2 |],
  "input": "import {bar}, {foo} from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-named-after-namespace/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Import source must be string (1:16)
> 1 | import * as foo, {bar} from "foo";
    |                ^
  2 |],
  "input": "import * as foo, {bar} from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-named-as-missing-from/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Import source must be string (2:0)
  1 | import {default as foo}
> 2 |],
  "input": "import {default as foo}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-namespace-after-named/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Import source must be string (1:13)
> 1 | import {bar}, * as foo from "foo";
    |             ^
  2 |],
  "input": "import {bar}, * as foo from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-namespace-missing-as/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected 'as' (1:13)
> 1 | import * from "foo"
    |             ^
  2 |],
  "input": "import * from \\"foo\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-import-declaration/invalid-import-specifiers/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Only '*' or '{...}' can be imported after default (1:16)
> 1 | import foo, from "bar";
    |                ^
  2 |],
  "input": "import foo, from \\"bar\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-lexical-declaration/invalid_complex_binding_without_init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Missing initializer in destructuring declaration (2:0)
  1 | let []
> 2 |],
  "input": "let []
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-lexical-declaration/invalid_const_forin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: 'for-in' loop head declarations can not have an initializer (1:16)
> 1 | for (const x = 0 in y){}
    |                ^
  2 |],
  "input": "for (const x = 0 in y){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-lexical-declaration/invalid_let_forin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: 'for-in' loop head declarations can not have an initializer (1:14)
> 1 | for (let x = 0 in y){}
    |              ^
  2 |],
  "input": "for (let x = 0 in y){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-meta-property/invalid-dots/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: new.target only allowed within functions (1:30)
> 1 | var x = function() { y = new..target; }
    |                              ^
  2 |],
  "input": "var x = function() { y = new..target; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-meta-property/invalid-new-target/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: new.target only allowed within functions (1:18)
> 1 | var x = new.target;
    |                  ^
  2 |],
  "input": "var x = new.target;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-meta-property/unknown-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: new.target only allowed within functions (1:41)
> 1 | var f = function() { new.unknown_property; }
    |                                         ^
  2 |],
  "input": "var f = function() { new.unknown_property; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-call-dot-dot/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '.' (1:3)
> 1 | f(..g);
    |   ^
  2 |],
  "input": "f(..g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-call-dots/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: '.' (1:6)
> 1 | f(....g);
    |      ^
  2 |],
  "input": "f(....g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-call-spreads/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '...' (1:9)
> 1 | f(... ... g);
    |         ^
  2 |],
  "input": "f(... ... g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-new-dot-dot/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: '.' (1:7)
> 1 | new f(..g);
    |       ^
  2 |],
  "input": "new f(..g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-new-dots/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: '.' (1:10)
> 1 | new f(....g);
    |          ^
  2 |],
  "input": "new f(....g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-spread-element/invalid-new-spreads/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: '...' (1:13)
> 1 | new f(... ... g);
    |             ^
  2 |],
  "input": "new f(... ... g);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-super-property/invalid_super_not_inside_function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass (1:14)
> 1 | var x = super();
    |              ^
  2 |],
  "input": "var x = super();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-template-literals/after-switch/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected '(' (1:13)
> 1 | switch \`test\`
    |             ^
  2 |],
  "input": "switch \`test\`
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-template-literals/invalid-escape/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\1\`;
    |  ^
  2 |],
  "input": "\`\\\\1\`;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-template-literals/unclosed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unterminated template literal (2:0)
  1 | \`test
> 2 |],
  "input": "\`test
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-template-literals/unclosed-interpolation/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: The first token after the template expression should be a continuation of the template (1:12)
> 1 | \`hello \${10;test\`
    |            ^
  2 |],
  "input": "\`hello \${10;test\`
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-template-literals/unclosed-nested/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: The first token after the template expression should be a continuation of the template (2:0)
  1 | \`hello \${10 \`test\`
> 2 |],
  "input": "\`hello \${10 \`test\`
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-binding-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: 'yield' may not be used as an identifier in this context (1:17)
> 1 | var {x: y = yield 3} = z;
    |                 ^
  2 |],
  "input": "var {x: y = yield 3} = z;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: 'yield' may not be used as an identifier in this context (1:19)
> 1 | (function() { yield 3; })
    |                   ^
  2 |],
  "input": "(function() { yield 3; })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-arrow-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Yield expression not allowed in formal parameter (1:33)
> 1 | function* g() { (x = yield 42) => {} }
    |                                 ^
  2 |],
  "input": "function* g() { (x = yield 42) => {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-arrow-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: The left-hand side of the arrow can only be destructed through assignment (1:25)
> 1 | function *g(){ (yield) => 42 }
    |                         ^
  2 |],
  "input": "function *g(){ (yield) => 42 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-arrow-parameters/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:34]: The left-hand side of the arrow can only be destructed through assignment (1:34)
> 1 | function *g(){ (a, b, c, yield) => 42 }
    |                                  ^
  2 |],
  "input": "function *g(){ (a, b, c, yield) => 42 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-catch/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:35]: Unexpected strict mode reserved word (1:35)
> 1 | function *g() { try {} catch (yield) {} }
    |                                   ^
  2 |],
  "input": "function *g() { try {} catch (yield) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected strict mode reserved word (1:31)
> 1 | function *g() { function *yield(){} }
    |                               ^
  2 |],
  "input": "function *g() { function *yield(){} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-export-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected strict mode reserved word (1:30)
> 1 | export default function *yield() {}
    |                              ^
  2 |],
  "input": "export default function *yield() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-expression-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected strict mode reserved word (1:15)
> 1 | (function*yield(){})
    |               ^
  2 |],
  "input": "(function*yield(){})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-expression-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected strict mode reserved word (1:17)
> 1 | (function *(yield){})
    |                 ^
  2 |],
  "input": "(function *(yield){})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-expression-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Yield expression not allowed in formal parameter (1:24)
> 1 | (function *(x, ...yield){})
    |                        ^
  2 |],
  "input": "(function *(x, ...yield){})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-function-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected strict mode reserved word (1:30)
> 1 | function *g() { function yield() {} }
    |                              ^
  2 |],
  "input": "function *g() { function yield() {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-lexical-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Unexpected strict mode reserved word (1:25)
> 1 | function *g() { let yield; }
    |                         ^
  2 |],
  "input": "function *g() { let yield; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected strict mode reserved word (1:17)
> 1 | function *g(yield){}
    |                 ^
  2 |],
  "input": "function *g(yield){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Yield expression not allowed in formal parameter (1:30)
> 1 | function *g(a, b, c, ...yield){}
    |                              ^
  2 |],
  "input": "function *g(a, b, c, ...yield){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-strict-function-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected strict mode reserved word (1:51)
> 1 | "use strict"; function *g(){ var y = function yield(){}; }
    |                                                   ^
  2 |],
  "input": "\\"use strict\\"; function *g(){ var y = function yield(){}; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-strict-function-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: Unexpected strict mode reserved word (1:52)
> 1 | "use strict"; function *g() { var z = function(yield) {} }
    |                                                    ^
  2 |],
  "input": "\\"use strict\\"; function *g() { var z = function(yield) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-generator-variable-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Unexpected strict mode reserved word (1:25)
> 1 | function *g() { var yield; }
    |                         ^
  2 |],
  "input": "function *g() { var yield; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-array-pattern/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: 'yield' may not be used as an identifier in this context (1:21)
> 1 | "use strict"; ([yield] = x)
    |                     ^
  2 |],
  "input": "\\"use strict\\"; ([yield] = x)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-arrow-parameter-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: 'yield' may not be used as an identifier in this context (1:24)
> 1 | "use strict"; (x = yield) => {}
    |                        ^
  2 |],
  "input": "\\"use strict\\"; (x = yield) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-arrow-parameter-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: 'yield' may not be used as an identifier in this context (1:20)
> 1 | "use strict"; (yield) => 42
    |                    ^
  2 |],
  "input": "\\"use strict\\"; (yield) => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-binding-element/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: 'yield' may not be used as an identifier in this context (1:28)
> 1 | "use strict"; var { x: yield } = foo;
    |                            ^
  2 |],
  "input": "\\"use strict\\"; var { x: yield } = foo;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-catch-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected strict mode reserved word (1:33)
> 1 | "use strict"; try {} catch (yield) {}
    |                                 ^
  2 |],
  "input": "\\"use strict\\"; try {} catch (yield) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-formal-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected strict mode reserved word (1:30)
> 1 | "use strict"; function f(yield) {}
    |                              ^
  2 |],
  "input": "\\"use strict\\"; function f(yield) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-function-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected strict mode reserved word (1:14)
> 1 | function yield(){ "use strict"; }
    |              ^
  2 |],
  "input": "function yield(){ \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-function-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected strict mode reserved word (1:15)
> 1 | (function yield(){ "use strict"; })
    |               ^
  2 |],
  "input": "(function yield(){ \\"use strict\\"; })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:34]: 'yield' may not be used as an identifier in this context (1:34)
> 1 | "use strict"; function f() { yield }
    |                                  ^
  2 |],
  "input": "\\"use strict\\"; function f() { yield }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-lexical-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unexpected strict mode reserved word (1:23)
> 1 | "use strict"; let yield = 42;
    |                       ^
  2 |],
  "input": "\\"use strict\\"; let yield = 42;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-rest-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: 'yield' may not be used as an identifier in this context (1:33)
> 1 | "use strict"; function f(...yield) {}
    |                                 ^
  2 |],
  "input": "\\"use strict\\"; function f(...yield) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/invalid-yield-strict-variable-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unexpected strict mode reserved word (1:23)
> 1 | "use strict"; var yield;
    |                       ^
  2 |],
  "input": "\\"use strict\\"; var yield;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/es2015-yield/yield-generator-arrow-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Yield expression not allowed in formal parameter (1:30)
> 1 | function *g() { (x = yield) => {} }
    |                              ^
  2 |],
  "input": "function *g() { (x = yield) => {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/expression-primary-array/migrated_0012/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\u2163\\u2161\\u200A
  2 |],
  "input": "\\\\u2163\\\\u2161\\\\u200A
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-00/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\x";
    |   ^
  2 |],
  "input": "\\"\\\\x\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-01/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | "\\x0";
    |    ^
  2 |],
  "input": "\\"\\\\x0\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-02/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\xx";
    |   ^
  2 |],
  "input": "\\"\\\\xx\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-03/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u";
    |   ^
  2 |],
  "input": "\\"\\\\u\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-04/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u0";
    |   ^
  2 |],
  "input": "\\"\\\\u0\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-05/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\ux";
    |   ^
  2 |],
  "input": "\\"\\\\ux\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-06/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u00";
    |   ^
  2 |],
  "input": "\\"\\\\u00\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/GH-1106-07/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u000";
    |   ^
  2 |],
  "input": "\\"\\\\u000\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0000/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | {
> 2 |],
  "input": "{
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0001/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '}' (1:1)
> 1 | }
    | ^
  2 |],
  "input": "}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0002/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Non-number found after exponent indicator (1:2)
> 1 | 3ea
    |  ^
  2 |],
  "input": "3ea
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0003/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3in []
    | ^
  2 |],
  "input": "3in []
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0004/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Non-number found after exponent indicator (1:2)
> 1 | 3e
    |  ^
  2 |],
  "input": "3e
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0005/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Non-number found after exponent indicator (1:3)
> 1 | 3e+
    |   ^
  2 |],
  "input": "3e+
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0006/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Non-number found after exponent indicator (1:3)
> 1 | 3e-
    |   ^
  2 |],
  "input": "3e-
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0007/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3x
    | ^
  2 |],
  "input": "3x
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0008/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3x0
    | ^
  2 |],
  "input": "3x0
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0009/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Missing hexadecimal digits (1:2)
> 1 | 0x
    |  ^
  2 |],
  "input": "0x
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0010/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 01a
    | ^
  2 |],
  "input": "01a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0011/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0o1a
    |   ^
  2 |],
  "input": "0o1a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0012/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0o
    |  ^
  2 |],
  "input": "0o
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0013/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0O
    |  ^
  2 |],
  "input": "0O
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0014/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0o9
    |  ^
  2 |],
  "input": "0o9
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0015/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0o18
    |   ^
  2 |],
  "input": "0o18
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0016/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0O1a
    |   ^
  2 |],
  "input": "0O1a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0017/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0b
    |  ^
  2 |],
  "input": "0b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0018/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b1a
    |   ^
  2 |],
  "input": "0b1a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0019/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0b9
    |  ^
  2 |],
  "input": "0b9
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0020/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b18
    |   ^
  2 |],
  "input": "0b18
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0021/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0b12
    |   ^
  2 |],
  "input": "0b12
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0022/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0B
    |  ^
  2 |],
  "input": "0B
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0023/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B1a
    |   ^
  2 |],
  "input": "0B1a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0024/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0B9
    |  ^
  2 |],
  "input": "0B9
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0025/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B18
    |   ^
  2 |],
  "input": "0B18
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0026/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0B12
    |   ^
  2 |],
  "input": "0B12
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0027/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token (1:2)
> 1 | 0O9
    |  ^
  2 |],
  "input": "0O9
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0028/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0O18
    |   ^
  2 |],
  "input": "0O18
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0029/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: No identifiers allowed directly after numeric literal (1:1)
> 1 | 3in[]
    | ^
  2 |],
  "input": "3in[]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0030/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 0x3in[]
    |   ^
  2 |],
  "input": "0x3in[]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0031/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unterminated string literal (1:6)
> 1 | "Hello
    |      ^
  2 | World"
  3 |],
  "input": "\\"Hello
World\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0032/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\
    | ^
  2 |],
  "input": "x\\\\
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0033/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\u005c
    | ^
  2 |],
  "input": "x\\\\u005c
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0034/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | x\\u002a
    | ^
  2 |],
  "input": "x\\\\u002a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0036/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Invalid hexadecimal escape sequence (1:1)
> 1 | a\\u
    | ^
  2 |],
  "input": "a\\\\u
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0037/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Invalid hexadecimal escape sequence (1:0)
> 1 | \\ua
  2 |],
  "input": "\\\\ua
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0038/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unterminated regular expression (1:2)
> 1 | /
    |  ^
  2 |],
  "input": "/
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0039/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unterminated regular expression (1:6)
> 1 | /test
    |      ^
  2 |],
  "input": "/test
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0040/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unterminated regular expression (1:6)
> 1 | /test
    |      ^
  2 | /
  3 |],
  "input": "/test
/
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0041/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid hexadecimal escape sequence (1:15)
> 1 | var x = /[a-z]/\\ux
    |               ^
  2 |],
  "input": "var x = /[a-z]/\\\\ux
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0042/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid hexadecimal escape sequence (1:17)
> 1 | var x = /[a-z\\n]/\\ux
    |                 ^
  2 |],
  "input": "var x = /[a-z\\\\n]/\\\\ux
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0043/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Illegal Unicode escape sequence (1:15)
> 1 | var x = /[a-z]/\\\\ux
    |               ^
  2 |],
  "input": "var x = /[a-z]/\\\\\\\\ux
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0044/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Illegal Unicode escape sequence (1:16)
> 1 | var x = /[P QR]/\\\\u0067
    |                ^
  2 |],
  "input": "var x = /[P QR]/\\\\\\\\u0067
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0045/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid left-hand side in assignment (1:3)
> 1 | 3 = 4
    |   ^
  2 |],
  "input": "3 = 4
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0046/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Invalid left-hand side in assignment (1:8)
> 1 | func() = 4
    |        ^
  2 |],
  "input": "func() = 4
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0047/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Invalid left-hand side in assignment (1:9)
> 1 | (1 + 1) = 10
    |         ^
  2 |],
  "input": "(1 + 1) = 10
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0048/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unicode codepoint must not be greater than 0x10FFFF (1:9)
> 1 | \\u{110000}
    |         ^
  2 |],
  "input": "\\\\u{110000}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0049/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Illegal Unicode escape sequence (1:2)
> 1 | \\u{}
    |  ^
  2 |],
  "input": "\\\\u{}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0050/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid hexadecimal escape sequence (1:6)
> 1 | \\u{FFFF
    |      ^
  2 |],
  "input": "\\\\u{FFFF
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0051/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \\u{FFZ}
    |    ^
  2 |],
  "input": "\\\\u{FFZ}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0052/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | 1++
    |   ^
  2 |],
  "input": "1++
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0053/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid increment/decrement operand (1:3)
> 1 | 1--
    |   ^
  2 |],
  "input": "1--
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0054/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Invalid increment/decrement operand (2:0)
  1 | ++1
> 2 |],
  "input": "++1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0055/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Invalid increment/decrement operand (2:0)
  1 | --1
> 2 |],
  "input": "--1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0056/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Invalid left-hand side in for-in (1:14)
> 1 | for((1 + 1) in list) process(x);
    |              ^
  2 |],
  "input": "for((1 + 1) in list) process(x);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0057/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | [
> 2 |],
  "input": "[
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0058/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | [,
> 2 |],
  "input": "[,
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0059/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | 1 + {
> 2 |],
  "input": "1 + {
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0060/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected '}' (2:0)
  1 | 1 + { t:t
> 2 |],
  "input": "1 + { t:t
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0061/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | 1 + { t:t,
> 2 |],
  "input": "1 + { t:t,
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0062/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unterminated regular expression (1:10)
> 1 | var x = /
    |          ^
  2 | /
  3 |],
  "input": "var x = /
/
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0063/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unterminated string literal (1:9)
> 1 | var x = "
    |         ^
  2 |],
  "input": "var x = \\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0064/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Invalid keyword (1:6)
> 1 | var if = 42
    |      ^
  2 |],
  "input": "var if = 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0065/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: '#' not followed by identifier (1:3)
> 1 | i #= 42
    |   ^
  2 |],
  "input": "i #= 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0066/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Invalid left-hand side in assignment (1:7)
> 1 | i + 2 = 42
    |       ^
  2 |],
  "input": "i + 2 = 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0067/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid left-hand side in assignment (1:4)
> 1 | +i = 42
    |    ^
  2 |],
  "input": "+i = 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0068/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | 1 + (
> 2 |],
  "input": "1 + (
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0069/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | {
> 2 |],
  "input": "{
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0070/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ')' (3:1)
  1 | /* Some multiline
  2 | comment */
> 3 | )
    | ^
  4 |],
  "input": "/* Some multiline
comment */
)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0071/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'number' (1:7)
> 1 | { set 1 }
    |       ^
  2 |],
  "input": "{ set 1 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0072/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: 'number' (1:7)
> 1 | { get 2 }
    |       ^
  2 |],
  "input": "{ get 2 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0073/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: 'if' (1:12)
> 1 | ({ set: s(if) { } })
    |            ^
  2 |],
  "input": "({ set: s(if) { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0074/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected ')' (1:10)
> 1 | ({ set s(.) { } })
    |          ^
  2 |],
  "input": "({ set s(.) { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0075/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Setter functions must have exactly one argument (1:10)
> 1 | ({ set s() { } })
    |          ^
  2 |],
  "input": "({ set s() { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0076/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected '}' (1:13)
> 1 | ({ set: s() { } })
    |             ^
  2 |],
  "input": "({ set: s() { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0077/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Expected '}' (1:17)
> 1 | ({ set: s(a, b) { } })
    |                 ^
  2 |],
  "input": "({ set: s(a, b) { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0078/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '}' (1:14)
> 1 | ({ get: g(d) { } })
    |              ^
  2 |],
  "input": "({ get: g(d) { } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0080/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Expected ']' (1:5)
> 1 | ({[a,b]:0})
    |     ^
  2 |],
  "input": "({[a,b]:0})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0081/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected ']' (1:8)
> 1 | ({get[a,b]:0})
    |        ^
  2 |],
  "input": "({get[a,b]:0})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0082/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '(' (1:3)
> 1 | ({(a):0})
    |   ^
  2 |],
  "input": "({(a):0})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0083/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected character after object literal property name (1:6)
> 1 | ({get{a}:0})
    |      ^
  2 |],
  "input": "({get{a}:0})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0084/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected character after object literal property name (2:0)
  1 | ({get
> 2 |],
  "input": "({get
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0087/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Invalid left-hand side in assignment (1:21)
> 1 | "use strict"; (eval = 10) => 42
    |                     ^
  2 |],
  "input": "\\"use strict\\"; (eval = 10) => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0088/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Unexpected eval or arguments in strict mode (1:21)
> 1 | "use strict"; eval => 42
    |                     ^
  2 |],
  "input": "\\"use strict\\"; eval => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0089/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Unexpected eval or arguments in strict mode (1:26)
> 1 | "use strict"; arguments => 42
    |                          ^
  2 |],
  "input": "\\"use strict\\"; arguments => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0090/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: The left-hand side of the arrow can only be destructed through assignment (1:26)
> 1 | "use strict"; (eval, a) => 42
    |                          ^
  2 |],
  "input": "\\"use strict\\"; (eval, a) => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0091/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: The left-hand side of the arrow can only be destructed through assignment (1:31)
> 1 | "use strict"; (arguments, a) => 42
    |                               ^
  2 |],
  "input": "\\"use strict\\"; (arguments, a) => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0094/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Octal escape sequences are not allowed in strict mode (1:22)
> 1 | "use strict"; (a) => 00
    |                      ^
  2 |],
  "input": "\\"use strict\\"; (a) => 00
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0095/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Expected '=>' (1:5)
> 1 | () <= 42
    |     ^
  2 |],
  "input": "() <= 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0096/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Expected '=>' (1:4)
> 1 | () ? 42
    |    ^
  2 |],
  "input": "() ? 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0097/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Expected '=>' (1:4)
> 1 | () + 42
    |    ^
  2 |],
  "input": "() + 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0098/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: '=>' (1:7)
> 1 | (10) => 00
    |       ^
  2 |],
  "input": "(10) => 00
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0099/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: '=>' (1:11)
> 1 | (10, 20) => 00
    |           ^
  2 |],
  "input": "(10, 20) => 00
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0100/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: The left-hand side of the arrow can only be destructed through assignment (1:23)
> 1 | "use strict"; (eval) => 42
    |                       ^
  2 |],
  "input": "\\"use strict\\"; (eval) => 42
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0101/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: The left-hand side of the arrow can only be destructed through assignment (1:9)
> 1 | (eval) => { "use strict"; 42 }
    |         ^
  2 |],
  "input": "(eval) => { \\"use strict\\"; 42 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0102/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected character after object literal property name (1:8)
> 1 | p = { q/ }
    |        ^
  2 |],
  "input": "p = { q/ }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0103/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Object literal keys that are strings or numbers must be a method or have a colon (1:10)
> 1 | p = { "q"/ }
    |          ^
  2 |],
  "input": "p = { \\"q\\"/ }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0112/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: 'identifier' (1:3)
> 1 | a b;
    |   ^
  2 |],
  "input": "a b;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0113/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Expected '(' (1:3)
> 1 | if.a;
    |   ^
  2 |],
  "input": "if.a;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0114/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'if' (1:4)
> 1 | a if;
    |    ^
  2 |],
  "input": "a if;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0115/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: 'enum' (1:6)
> 1 | a enum;
    |      ^
  2 |],
  "input": "a enum;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0116/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Illegal break statement (2:0)
  1 | break
> 2 |],
  "input": "break
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0117/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Illegal break statement (1:7)
> 1 | break 1;
    |       ^
  2 |],
  "input": "break 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0118/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue
    |        ^
  2 |],
  "input": "continue
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0119/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue 2;
    |        ^
  2 |],
  "input": "continue 2;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0120/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Illegal newline after throw (2:0)
  1 | throw
> 2 |],
  "input": "throw
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0121/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: ';' (1:6)
> 1 | throw;
    |      ^
  2 |],
  "input": "throw;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0122/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Illegal newline after throw (2:0)
  1 | throw
> 2 |],
  "input": "throw
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0123/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Invalid left-hand side in for-in loop: Must have a single binding (1:17)
> 1 | for (var i, i2 in {});
    |                 ^
  2 |],
  "input": "for (var i, i2 in {});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0124/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Expected ';' (1:15)
> 1 | for ((i in {}));
    |               ^
  2 |],
  "input": "for ((i in {}));
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0125/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected ';' (1:13)
> 1 | for (i + 1 in {});
    |             ^
  2 |],
  "input": "for (i + 1 in {});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0126/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Invalid left-hand side in for-in (1:10)
> 1 | for (+i in {});
    |          ^
  2 |],
  "input": "for (+i in {});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0127/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | if(false)
> 2 |],
  "input": "if(false)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0128/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | if(false) doThis(); else
> 2 |],
  "input": "if(false) doThis(); else
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0129/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | do
> 2 |],
  "input": "do
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0130/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | while(false)
> 2 |],
  "input": "while(false)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0131/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | for(;;)
> 2 |],
  "input": "for(;;)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0132/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Strict mode code may not include a with statement (1:5)
> 1 | with(x)
    |     ^
  2 |],
  "input": "with(x)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0133/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Missing catch or finally after try (2:0)
  1 | try { }
> 2 |],
  "input": "try { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0134/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: 'number' (1:16)
> 1 | try {} catch (42) {}
    |                ^
  2 |],
  "input": "try {} catch (42) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0135/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Expected ')' (1:21)
> 1 | try {} catch (answer()) {}
    |                     ^
  2 |],
  "input": "try {} catch (answer()) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0136/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: '-' (1:15)
> 1 | try {} catch (-x) {}
    |               ^
  2 |],
  "input": "try {} catch (-x) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0138/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Missing initializer in const declaration (1:16)
> 1 | const x = 12, y;
    |                ^
  2 |],
  "input": "const x = 12, y;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0139/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Missing initializer in const declaration (1:8)
> 1 | const x, y = 12;
    |        ^
  2 |],
  "input": "const x, y = 12;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0140/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Missing initializer in const declaration (1:8)
> 1 | const x;
    |        ^
  2 |],
  "input": "const x;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0141/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: \`let\` declaration not allowed here and \`let\` cannot be a regular var name in strict mode (1:14)
> 1 | if(true) let a = 1;
    |              ^
  2 |],
  "input": "if(true) let a = 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0142/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: 'const' (1:14)
> 1 | if(true) const a = 1;
    |              ^
  2 |],
  "input": "if(true) const a = 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0143/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: More than one default clause in switch statement (1:30)
> 1 | switch (c) { default: default: }
    |                              ^
  2 |],
  "input": "switch (c) { default: default: }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0144/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Dot property must be an identifier (1:11)
> 1 | new X()."s"
    |           ^
  2 |],
  "input": "new X().\\"s\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0145/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Multiline comment was not closed properly (2:0)
  1 | /*
> 2 |],
  "input": "/*
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0146/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Multiline comment was not closed properly (2:0)
  1 | /*
> 2 |],
  "input": "/*
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0147/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Multiline comment was not closed properly (2:0)
  1 | /**
> 2 |],
  "input": "/**
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0148/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:0]: Multiline comment was not closed properly (4:0)
  2 |
  3 | *
> 4 |],
  "input": "/*

*
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0149/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Multiline comment was not closed properly (2:0)
  1 | /*hello
> 2 |],
  "input": "/*hello
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0150/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Multiline comment was not closed properly (2:0)
  1 | /*hello  *
> 2 |],
  "input": "/*hello  *
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0151/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: ']' (1:1)
> 1 | ]
    | ^
  2 |],
  "input": "]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0152/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: ']' (1:1)
> 1 | ]
    | ^
  2 |],
  "input": "]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0153/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: ']' (1:1)
> 1 | ]
    | ^
  2 |],
  "input": "]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0154/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: ']' (1:1)
> 1 | ]
    | ^
  2 |],
  "input": "]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0155/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:1]: Unexpected token: ']' (2:1)
  1 | //
> 2 | ]
    | ^
  3 |],
  "input": "//
]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0156/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ']' (3:1)
  1 | //
  2 |
> 3 | ]
    | ^
  4 |],
  "input": "//

]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0158/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Unexpected token: ']' (3:1)
  1 | //
  2 |  
> 3 | ]
    | ^
  4 |],
  "input": "//
 
]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0159/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: Unexpected token: ']' (2:3)
  1 | /*
> 2 | */]
    |   ^
  3 |],
  "input": "/*
*/]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0160/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Unexpected token: ']' (3:3)
  1 | /*
  2 |
> 3 | */]
    |   ^
  4 |],
  "input": "/*

*/]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0161/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Unexpected token: ']' (3:3)
  1 | /*
  2 |  
> 3 | */]
    |   ^
  4 |],
  "input": "/*
 
*/]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0162/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\
  2 |],
  "input": "\\\\
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0163/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\u005c
  2 |],
  "input": "\\\\u005c
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0164/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\x
  2 |],
  "input": "\\\\x
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0165/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\u0000
  2 |],
  "input": "\\\\u0000
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0168/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unterminated string literal (2:0)
  1 | "\\
> 2 |],
  "input": "\\"\\\\
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0169/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | "\\u
    |   ^
  2 |],
  "input": "\\"\\\\u
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0170/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: ')' (1:15)
> 1 | try { } catch() {}
    |               ^
  2 |],
  "input": "try { } catch() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0172/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Illegal break statement (2:0)
  1 | break
> 2 |],
  "input": "break
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0173/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Illegal continue statement (1:8)
> 1 | continue
    |        ^
  2 |],
  "input": "continue
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0174/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Illegal continue statement (1:30)
> 1 | switch (x) { default: continue; }
    |                              ^
  2 |],
  "input": "switch (x) { default: continue; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0175/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Expected 'while' (1:10)
> 1 | do { x } *
    |          ^
  2 |],
  "input": "do { x } *
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0176/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Undefined label 'x' (1:23)
> 1 | while (true) { break x; }
    |                       ^
  2 |],
  "input": "while (true) { break x; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0177/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Undefined label 'x' (1:26)
> 1 | while (true) { continue x; }
    |                          ^
  2 |],
  "input": "while (true) { continue x; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0178/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Undefined label 'x' (1:41)
> 1 | x: while (true) { (function () { break x; }); }
    |                                         ^
  2 |],
  "input": "x: while (true) { (function () { break x; }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0179/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Illegal continue statement (1:41)
> 1 | x: while (true) { (function () { continue x; }); }
    |                                         ^
  2 |],
  "input": "x: while (true) { (function () { continue x; }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0180/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Illegal break statement (1:39)
> 1 | x: while (true) { (function () { break; }); }
    |                                       ^
  2 |],
  "input": "x: while (true) { (function () { break; }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0181/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:41]: Illegal continue statement (1:41)
> 1 | x: while (true) { (function () { continue; }); }
    |                                         ^
  2 |],
  "input": "x: while (true) { (function () { continue; }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0182/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Label 'x' has already been declared (1:20)
> 1 | x: while (true) { x: while (true) { } }
    |                    ^
  2 |],
  "input": "x: while (true) { x: while (true) { } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0183/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Calling delete on expression not allowed in strict mode (1:38)
> 1 | (function () { 'use strict'; delete i; }())
    |                                      ^
  2 |],
  "input": "(function () { 'use strict'; delete i; }())
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0184/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:35]: Strict mode code may not include a with statement (1:35)
> 1 | (function () { 'use strict'; with (i); }())
    |                                   ^
  2 |],
  "input": "(function () { 'use strict'; with (i); }())
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0185/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:40]: Unexpected eval or arguments in strict mode (1:40)
> 1 | function hello() {'use strict'; var eval = 10; }
    |                                        ^
  2 |],
  "input": "function hello() {'use strict'; var eval = 10; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0186/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; var arguments = 10; }
    |                                             ^
  2 |],
  "input": "function hello() {'use strict'; var arguments = 10; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0187/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; try { } catch (eval) { } }
    |                                                   ^
  2 |],
  "input": "function hello() {'use strict'; try { } catch (eval) { } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0188/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:56]: Unexpected eval or arguments in strict mode (1:56)
> 1 | function hello() {'use strict'; try { } catch (arguments) { } }
    |                                                        ^
  2 |],
  "input": "function hello() {'use strict'; try { } catch (arguments) { } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0189/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid left-hand side in assignment (1:38)
> 1 | function hello() {'use strict'; eval = 10; }
    |                                      ^
  2 |],
  "input": "function hello() {'use strict'; eval = 10; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0190/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid left-hand side in assignment (1:43)
> 1 | function hello() {'use strict'; arguments = 10; }
    |                                           ^
  2 |],
  "input": "function hello() {'use strict'; arguments = 10; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0191/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Invalid increment/decrement operand (1:39)
> 1 | function hello() {'use strict'; ++eval; }
    |                                       ^
  2 |],
  "input": "function hello() {'use strict'; ++eval; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0192/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Invalid increment/decrement operand (1:39)
> 1 | function hello() {'use strict'; --eval; }
    |                                       ^
  2 |],
  "input": "function hello() {'use strict'; --eval; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0193/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Invalid increment/decrement operand (1:44)
> 1 | function hello() {'use strict'; ++arguments; }
    |                                            ^
  2 |],
  "input": "function hello() {'use strict'; ++arguments; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0194/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Invalid increment/decrement operand (1:44)
> 1 | function hello() {'use strict'; --arguments; }
    |                                            ^
  2 |],
  "input": "function hello() {'use strict'; --arguments; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0195/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid increment/decrement operand (1:38)
> 1 | function hello() {'use strict'; eval++; }
    |                                      ^
  2 |],
  "input": "function hello() {'use strict'; eval++; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0196/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Invalid increment/decrement operand (1:38)
> 1 | function hello() {'use strict'; eval--; }
    |                                      ^
  2 |],
  "input": "function hello() {'use strict'; eval--; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0197/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid increment/decrement operand (1:43)
> 1 | function hello() {'use strict'; arguments++; }
    |                                           ^
  2 |],
  "input": "function hello() {'use strict'; arguments++; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0198/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Invalid increment/decrement operand (1:43)
> 1 | function hello() {'use strict'; arguments--; }
    |                                           ^
  2 |],
  "input": "function hello() {'use strict'; arguments--; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0199/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; function eval() { } }
    |                                             ^
  2 |],
  "input": "function hello() {'use strict'; function eval() { } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0200/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:50]: Unexpected eval or arguments in strict mode (1:50)
> 1 | function hello() {'use strict'; function arguments() { } }
    |                                                  ^
  2 |],
  "input": "function hello() {'use strict'; function arguments() { } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0201/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected eval or arguments in strict mode (1:13)
> 1 | function eval() {'use strict'; }
    |             ^
  2 |],
  "input": "function eval() {'use strict'; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0202/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected eval or arguments in strict mode (1:18)
> 1 | function arguments() {'use strict'; }
    |                  ^
  2 |],
  "input": "function arguments() {'use strict'; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0203/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected eval or arguments in strict mode (1:46)
> 1 | function hello() {'use strict'; (function eval() { }()) }
    |                                              ^
  2 |],
  "input": "function hello() {'use strict'; (function eval() { }()) }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0204/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; (function arguments() { }()) }
    |                                                   ^
  2 |],
  "input": "function hello() {'use strict'; (function arguments() { }()) }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0205/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected eval or arguments in strict mode (1:14)
> 1 | (function eval() {'use strict'; })()
    |              ^
  2 |],
  "input": "(function eval() {'use strict'; })()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0206/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected eval or arguments in strict mode (1:19)
> 1 | (function arguments() {'use strict'; })()
    |                   ^
  2 |],
  "input": "(function arguments() {'use strict'; })()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0207/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:51]: Unexpected eval or arguments in strict mode (1:51)
> 1 | function hello() {'use strict'; ({ s: function eval() { } }); }
    |                                                   ^
  2 |],
  "input": "function hello() {'use strict'; ({ s: function eval() { } }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0208/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected strict mode reserved word (1:17)
> 1 | (function package() {'use strict'; })()
    |                 ^
  2 |],
  "input": "(function package() {'use strict'; })()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0209/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: Unexpected eval or arguments in strict mode (1:52)
> 1 | function hello() {'use strict'; ({ i: 10, set s(eval) { } }); }
    |                                                    ^
  2 |],
  "input": "function hello() {'use strict'; ({ i: 10, set s(eval) { } }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0210/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:45]: Unexpected eval or arguments in strict mode (1:45)
> 1 | function hello() {'use strict'; ({ set s(eval) { } }); }
    |                                             ^
  2 |],
  "input": "function hello() {'use strict'; ({ set s(eval) { } }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0211/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:53]: Unexpected eval or arguments in strict mode (1:53)
> 1 | function hello() {'use strict'; ({ s: function s(eval) { } }); }
    |                                                     ^
  2 |],
  "input": "function hello() {'use strict'; ({ s: function s(eval) { } }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0212/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected eval or arguments in strict mode (1:19)
> 1 | function hello(eval) {'use strict';}
    |                   ^
  2 |],
  "input": "function hello(eval) {'use strict';}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0213/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected eval or arguments in strict mode (1:24)
> 1 | function hello(arguments) {'use strict';}
    |                        ^
  2 |],
  "input": "function hello(arguments) {'use strict';}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0214/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:52]: Unexpected eval or arguments in strict mode (1:52)
> 1 | function hello() { 'use strict'; function inner(eval) {} }
    |                                                    ^
  2 |],
  "input": "function hello() { 'use strict'; function inner(eval) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0215/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:57]: Unexpected eval or arguments in strict mode (1:57)
> 1 | function hello() { 'use strict'; function inner(arguments) {} }
    |                                                         ^
  2 |],
  "input": "function hello() { 'use strict'; function inner(arguments) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0217/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:35]: Octal escape sequences are not allowed in strict mode (1:35)
> 1 | function hello() { 'use strict'; "\\1"; }
    |                                   ^
  2 |],
  "input": "function hello() { 'use strict'; \\"\\\\1\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0218/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:34]: Octal escape sequences are not allowed in strict mode (1:34)
> 1 | function hello() { 'use strict'; 021; }
    |                                  ^
  2 |],
  "input": "function hello() { 'use strict'; 021; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0219/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Octal escape sequences are not allowed in strict mode (1:38)
> 1 | function hello() { 'use strict'; ({ "\\1": 42 }); }
    |                                      ^
  2 |],
  "input": "function hello() { 'use strict'; ({ \\"\\\\1\\": 42 }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0220/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Octal escape sequences are not allowed in strict mode (1:37)
> 1 | function hello() { 'use strict'; ({ 021: 42 }); }
    |                                     ^
  2 |],
  "input": "function hello() { 'use strict'; ({ 021: 42 }); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0223/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:69]: Octal escape sequences are not allowed in strict mode (1:69)
> 1 | function hello() { "use strict"; function inner() { "octal directive\\1"; } }
    |                                                                     ^
  2 |],
  "input": "function hello() { \\"use strict\\"; function inner() { \\"octal directive\\\\1\\"; } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0224/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:47]: Unexpected strict mode reserved word (1:47)
> 1 | function hello() { "use strict"; var implements; }
    |                                               ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var implements; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0225/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected strict mode reserved word (1:46)
> 1 | function hello() { "use strict"; var interface; }
    |                                              ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var interface; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0226/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Unexpected strict mode reserved word (1:44)
> 1 | function hello() { "use strict"; var package; }
    |                                            ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var package; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0227/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:44]: Unexpected strict mode reserved word (1:44)
> 1 | function hello() { "use strict"; var private; }
    |                                            ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var private; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0228/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:46]: Unexpected strict mode reserved word (1:46)
> 1 | function hello() { "use strict"; var protected; }
    |                                              ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var protected; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0229/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Unexpected strict mode reserved word (1:43)
> 1 | function hello() { "use strict"; var public; }
    |                                           ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var public; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0230/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:43]: Unexpected strict mode reserved word (1:43)
> 1 | function hello() { "use strict"; var static; }
    |                                           ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var static; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0231/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:42]: Unexpected strict mode reserved word (1:42)
> 1 | function hello() { "use strict"; var yield; }
    |                                          ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var yield; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0232/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:40]: Unexpected strict mode reserved word (1:40)
> 1 | function hello() { "use strict"; var let; }
    |                                        ^
  2 |],
  "input": "function hello() { \\"use strict\\"; var let; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0233/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Unexpected strict mode reserved word (1:21)
> 1 | function hello(static) { "use strict"; }
    |                     ^
  2 |],
  "input": "function hello(static) { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0234/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected strict mode reserved word (1:15)
> 1 | function static() { "use strict"; }
    |               ^
  2 |],
  "input": "function static() { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0235/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected eval or arguments in strict mode (1:13)
> 1 | function eval(a) { "use strict"; }
    |             ^
  2 |],
  "input": "function eval(a) { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0236/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected eval or arguments in strict mode (1:18)
> 1 | function arguments(a) { "use strict"; }
    |                  ^
  2 |],
  "input": "function arguments(a) { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0239/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Unexpected strict mode reserved word (1:29)
> 1 | "use strict"; function static() { }
    |                             ^
  2 |],
  "input": "\\"use strict\\"; function static() { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0241/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected eval or arguments in strict mode (1:15)
> 1 | function a(eval) { "use strict"; }
    |               ^
  2 |],
  "input": "function a(eval) { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0242/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected strict mode reserved word (1:18)
> 1 | function a(package) { "use strict"; }
    |                  ^
  2 |],
  "input": "function a(package) { \\"use strict\\"; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0246/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected eval or arguments in strict mode (1:16)
> 1 | (function a(eval) { "use strict"; })
    |                ^
  2 |],
  "input": "(function a(eval) { \\"use strict\\"; })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0247/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected strict mode reserved word (1:19)
> 1 | (function a(package) { "use strict"; })
    |                   ^
  2 |],
  "input": "(function a(package) { \\"use strict\\"; })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0248/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Label '__proto__' has already been declared (1:21)
> 1 | __proto__: __proto__: 42;
    |                     ^
  2 |],
  "input": "__proto__: __proto__: 42;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0250/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Property name __proto__ appears more than once in object literal (2:0)
  1 | x = { __proto__: 42, __proto__: 43 }
> 2 |],
  "input": "x = { __proto__: 42, __proto__: 43 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0252/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | var
> 2 |],
  "input": "var
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0254/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | const
> 2 |],
  "input": "const
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0255/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | { ;  ;
> 2 |],
  "input": "{ ;  ;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0256/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | function t() { ;  ;
> 2 |],
  "input": "function t() { ;  ;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0257/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unexpected token: 'package' (1:23)
> 1 | 'use strict'; a package
    |                       ^
  2 |],
  "input": "'use strict'; a package
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0258/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: The binding declaration is not destructible (1:19)
> 1 | function f(a, ...b, c){}
    |                   ^
  2 |],
  "input": "function f(a, ...b, c){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0260/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: The binding declaration is not destructible (1:20)
> 1 | function x(...a = 1){}
    |                    ^
  2 |],
  "input": "function x(...a = 1){}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0261/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Class declaration must have a name in this context (2:0)
  1 | class
> 2 |],
  "input": "class
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0262/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Class declaration must have a name in this context (2:0)
  1 | class
> 2 |],
  "input": "class
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0263/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Class declaration must have a name in this context (1:6)
> 1 | class;
    |      ^
  2 |],
  "input": "class;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0264/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Expected '{' (1:19)
> 1 | class A extends a + b {}
    |                   ^
  2 |],
  "input": "class A extends a + b {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0265/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected '{' (2:0)
  1 | class A
> 2 |],
  "input": "class A
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0266/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token: 'end of source' (2:0)
  1 | class A {
> 2 |],
  "input": "class A {
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0267/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected '{' (1:8)
> 1 | class A;
    |        ^
  2 |],
  "input": "class A;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0268/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: ':' (1:11)
> 1 | class A {a:0}
    |           ^
  2 |],
  "input": "class A {a:0}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0269/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: ',' (1:15)
> 1 | class A {a(){},b(){}}
    |               ^
  2 |],
  "input": "class A {a(){},b(){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0270/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:26]: Classes may not have a static property named 'prototype' (1:26)
> 1 | class A {static prototype(){}}
    |                          ^
  2 |],
  "input": "class A {static prototype(){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0271/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: Classes may not have a static property named 'prototype' (1:28)
> 1 | class A {static "prototype"(){}}
    |                            ^
  2 |],
  "input": "class A {static \\"prototype\\"(){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0272/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Class constructor may not be a accessor (1:25)
> 1 | class A {get constructor(){}}
    |                         ^
  2 |],
  "input": "class A {get constructor(){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0273/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Class constructor may not be a accessor (1:25)
> 1 | class A {set constructor(m){}}
    |                         ^
  2 |],
  "input": "class A {set constructor(m){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0274/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:39]: Duplicate constructor method in class (1:39)
> 1 | class A {constructor(){} "constructor"(){}}
    |                                       ^
  2 |],
  "input": "class A {constructor(){} \\"constructor\\"(){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0277/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Invalid keyword (1:15)
> 1 | class A {a(enum){}}
    |               ^
  2 |],
  "input": "class A {a(enum){}}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/invalid-syntax/migrated_0278/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unexpected token: 'static' (1:23)
> 1 | class A {static [static](){};}
    |                       ^
  2 |],
  "input": "class A {static [static](){};}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/rest-parameter/invalid-setter-rest/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Setter function argument must not be a rest parameter (1:15)
> 1 | x = { set f(...y) {} }
    |               ^
  2 |],
  "input": "x = { set f(...y) {} }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/statement-expression/migrated_0002/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\\\u0061
  2 |],
  "input": "\\\\\\\\u0061
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/statement-expression/migrated_0003/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Illegal Unicode escape sequence (1:1)
> 1 | a\\\\u0061
    | ^
  2 |],
  "input": "a\\\\\\\\u0061
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/statement-expression/migrated_0004/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\\\u0061a
  2 |],
  "input": "\\\\\\\\u0061a
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/statement-expression/migrated_0005/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:0]: Illegal Unicode escape sequence (1:0)
> 1 | \\\\u0061a 
  2 |],
  "input": "\\\\\\\\u0061a 
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/esprima/statement-variable/complex-pattern-requires-init/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Missing initializer in destructuring declaration (2:0)
  1 | var []
> 2 |],
  "input": "var []
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/class-method/flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Unexpected token: '<' (2:15)
  1 | class NodeUtils extends UtilParser {
> 2 |   finishNodeAt<T : NodeType>(node: T): T {
    |               ^
  3 |     return node;
  4 |   }
  5 | }],
  "input": "class NodeUtils extends UtilParser {
  finishNodeAt<T : NodeType>(node: T): T {
    return node;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/class-method/typescript/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: 'class' (1:14)
> 1 | abstract class TSAbstractClass {
    |              ^
  2 |   abstract foo(name: string): boolean;
  3 | }
  4 |],
  "input": "abstract class TSAbstractClass {
  abstract foo(name: string): boolean;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/class-private-property/flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:15]: Unexpected token: ':' (4:15)
  2 |   #foo = "bar";
  3 |   static #bar = foo;
> 4 |   declare #qux: Array<string>;
    |               ^
  5 | }
  6 |],
  "input": "class A {
  #foo = \\"bar\\";
  static #bar = foo;
  declare #qux: Array<string>;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/class-private-property/typescript/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:15]: Unexpected token: ':' (4:15)
  2 |   #foo = "bar";
  3 |   static #bar = foo;
> 4 |   declare #qux: Array<string>;
    |               ^
  5 | }
  6 |],
  "input": "class A {
  #foo = \\"bar\\";
  static #bar = foo;
  declare #qux: Array<string>;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/flow/string-literal-annotation/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: ':' (1:6)
> 1 | var x: "string";
    |      ^
  2 |],
  "input": "var x: \\"string\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/object-method/invalid-setter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Setter functions must have exactly one argument (1:10)
> 1 | ({ set x(){} })
    |          ^
  2 |],
  "input": "({ set x(){} })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/typescript/enum/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: 'enum' (1:4)
> 1 | enum A {
    |    ^
  2 |   a,
  3 |   "r"
  4 | }],
  "input": "enum A {
  a,
  \\"r\\"
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/typescript/import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: ':' (1:6)
> 1 | let x: typeof import('./x');
    |      ^
  2 | let Y: import('./y').Y;
  3 | let z: import("/z").foo.bar<string>;
  4 |],
  "input": "let x: typeof import('./x');
let Y: import('./y').Y;
let z: import(\\"/z\\").foo.bar<string>;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/typescript/import-require/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Import source must be string (1:10)
> 1 | import x = require ("asdfasdf");
    |          ^
  2 |],
  "input": "import x = require (\\"asdfasdf\\");
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/typescript/literals/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: 'identifier' (1:8)
> 1 | type Foo = false;
    |        ^
  2 | type Foo2 = true;
  3 | type Foo3 = "string";
  4 | type Foo4 = 123;],
  "input": "type Foo = false;
type Foo2 = true;
type Foo3 = \\"string\\";
type Foo4 = 123;
type Foo5 = 123.4;
type Foo6 = -123;
type Foo7 = -123.5;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/estree/typescript/optional-chaining/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: \`=>\` is an invalid assignment target (1:14)
> 1 | foo?.foo<T>();
    |              ^
  2 |],
  "input": "foo?.foo<T>();
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/class-properties-with-initializer-and-type/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:6]: Unexpected token: ':' (2:6)
  1 | class Foo {
> 2 |   bar: string = 'bizz';
    |      ^
  3 | }
  4 |],
  "input": "class Foo {
  bar: string = 'bizz';
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/class-static-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     this.bar = this.foo;
  5 |   }
  6 | }],
  "input": "class C {
  static foo() {}
  static {
    this.bar = this.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/decimal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: No identifiers allowed directly after numeric literal (1:2)
> 1 | .1m;
    |  ^
  2 |],
  "input": ".1m;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:9]: Function declaration must have a name in this context (2:9)
  1 | @memoize
> 2 | function() {}
    |         ^
  3 |],
  "input": "@memoize
function() {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/do-expressions/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: 'do' (1:3)
> 1 | (do {x})
    |   ^
  2 |],
  "input": "(do {x})
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/export-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: 'identifier' (1:8)
> 1 | export A from 'test';
    |        ^
  2 |],
  "input": "export A from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/import-assertions/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/import-assertions-dynamic/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Expected ')' (1:15)
> 1 | import('hello', 'world');
    |               ^
  2 |],
  "input": "import('hello', 'world');
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/module-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/module-string-names-export/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Only a identifier can be used to indicate alias (1:30)
> 1 | export { foo as "some exports" };
    |                              ^
  2 | var foo;
  3 |],
  "input": "export { foo as \\"some exports\\" };
var foo;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/_no-plugin/module-string-names-import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '}' (1:14)
> 1 | import { "foo" as bar, "default" as qux } from "module-a";
    |              ^
  2 |],
  "input": "import { \\"foo\\" as bar, \\"default\\" as qux } from \\"module-a\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/bind-operator/invalid-non-member-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: ':' (1:1)
> 1 | ::a?.b;
    | ^
  2 |],
  "input": "::a?.b;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-methods/asi-failure-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class Foo {
  2 |   p = x
> 3 |   *#m () {}
    |          ^
  4 | }
  5 |],
  "input": "class Foo {
  p = x
  *#m () {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-methods/failure-name-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Classes may not have a private element named constructor (2:14)
  1 | class Foo {
> 2 |   #constructor() {};
    |              ^
  3 | }
  4 |],
  "input": "class Foo {
  #constructor() {};
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-methods/failure-spaces/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Spaces {
> 2 |   #  wrongSpaces() {
    |   ^
  3 |     return fail();
  4 |   }
  5 | }],
  "input": "class Spaces {
  #  wrongSpaces() {
    return fail();
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/asi-failure-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:9]: Unexpected token: '{' (3:9)
  1 | class Foo {
  2 |   #p = x
> 3 |   *m () {}
    |         ^
  4 | }
  5 |],
  "input": "class Foo {
  #p = x
  *m () {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-computed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: '#' not followed by identifier (3:3)
  1 | class Foo {
  2 |   #p = x
> 3 |   #[m] = 1
    |   ^
  4 | }
  5 |],
  "input": "class Foo {
  #p = x
  #[m] = 1
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-delete-optional-private-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:18]: Dot property must be an identifier (4:18)
  2 |   #x;
  3 |   constructor() {
> 4 |     delete this?.#x;
    |                  ^
  5 |   }
  6 | }
  7 |],
  "input": "class Foo {
  #x;
  constructor() {
    delete this?.#x;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-delete-private-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:19]: Private fields can not be deleted (4:19)
  2 |   #x;
  3 |   constructor() {
> 4 |     delete this.#x;
    |                   ^
  5 |   }
  6 | }
  7 |],
  "input": "class Foo {
  #x;
  constructor() {
    delete this.#x;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-name-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:14]: Classes may not have a private element named constructor (2:14)
  1 | class Foo {
> 2 |   #constructor;
    |              ^
  3 | }
  4 |],
  "input": "class Foo {
  #constructor;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-numeric-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Foo {
> 2 |   #2 = y
    |   ^
  3 | }
  4 |],
  "input": "class Foo {
  #2 = y
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-numeric-start-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Foo {
> 2 |   #2x = y
    |   ^
  3 | }
  4 |],
  "input": "class Foo {
  #2x = y
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-spaces/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Spaces {
> 2 |   #  wrongSpaces;
    |   ^
  3 | }
  4 |],
  "input": "class Spaces {
  #  wrongSpaces;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/failure-string-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Foo {
> 2 |   #"p" = x
    |   ^
  3 | }
  4 |],
  "input": "class Foo {
  #\\"p\\" = x
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/invalid-destructuring/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:12]: Unexpected token: 'PrivateField' (4:12)
  2 |   #x = 1;
  3 |   m() {
> 4 |     const {#x: x} = this;
    |            ^
  5 |   }
  6 | }
  7 |],
  "input": "class C {
  #x = 1;
  m() {
    const {#x: x} = this;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/invalid-destructuring-arguments/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:11]: Unexpected token: 'PrivateField' (3:11)
  1 | class C {
  2 |   #x = 1;
> 3 |   #p = ({ #x: x }) => {}
    |           ^
  4 | }
  5 |],
  "input": "class C {
  #x = 1;
  #p = ({ #x: x }) => {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/invalid-object-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:11]: Unexpected token: 'PrivateField' (2:11)
  1 | class C {
> 2 |   #p = ({ #x: 42 });
    |           ^
  3 | }
  4 |],
  "input": "class C {
  #p = ({ #x: 42 });
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/invalid-ts-type-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: 'interface' (1:9)
> 1 | interface I {
    |         ^
  2 |   #p: string
  3 | }
  4 |],
  "input": "interface I {
  #p: string
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/optional-chain-start-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:17]: Dot property must be an identifier (5:17)
  3 |
  4 |   static test() {
> 5 |     return Foo?.#m();
    |                 ^
  6 |   }
  7 | }
  8 |],
  "input": "class Foo {
  static #m = function() {};

  static test() {
    return Foo?.#m();
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/optional-chain-start-member/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:17]: Dot property must be an identifier (5:17)
  3 |
  4 |   static test() {
> 5 |     return Foo?.#x.toFixed;
    |                 ^
  6 |   }
  7 | }
  8 |],
  "input": "class Foo {
  static #x = 1;

  static test() {
    return Foo?.#x.toFixed;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/optional-chain-start-member-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:17]: Dot property must be an identifier (5:17)
  3 |
  4 |   static test() {
> 5 |     return Foo?.#x.toFixed(2);
    |                 ^
  6 |   }
  7 | }
  8 |],
  "input": "class Foo {
  static #x = 1;

  static test() {
    return Foo?.#x.toFixed(2);
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/optional-chain-start-simple/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:17]: Dot property must be an identifier (5:17)
  3 |
  4 |   static test() {
> 5 |     return Foo?.#x;
    |                 ^
  6 |   }
  7 | }
  8 |],
  "input": "class Foo {
  static #x = 1;

  static test() {
    return Foo?.#x;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-private-properties/super-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:19]: Unexpected private field (4:19)
  2 |   constructor() {
  3 |     class C extends D {
> 4 |       #foo = super();
    |                   ^
  5 |     }
  6 |   }
  7 | }],
  "input": "class A extends B {
  constructor() {
    class C extends D {
      #foo = super();
    }
  }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/arguments/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:19]: Unexpected eval or arguments in strict mode (3:19)
  1 | function fn() {
  2 |   class A {
> 3 |     foo = arguments;
    |                   ^
  4 |   }
  5 | }],
  "input": "function fn() {
  class A {
    foo = arguments;
  }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/arguments-in-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:26]: A class field initializer may not contain arguments (3:26)
  1 | function fn() {
  2 |   class A {
> 3 |     foo = () => arguments;
    |                          ^
  4 |   }
  5 | }],
  "input": "function fn() {
  class A {
    foo = () => arguments;
  }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/arguments-in-nested-class/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:39]: A class field initializer may not contain arguments (3:39)
  1 | function fn() {
  2 |   class A {
> 3 |     foo = class B { bar() { arguments } };
    |                                       ^
  4 |   }
  5 | }
  6 |],
  "input": "function fn() {
  class A {
    foo = class B { bar() { arguments } };
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/arguments-in-nested-class-decorator-call-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:35]: A class field initializer may not contain arguments (3:35)
  1 | function fn() {
  2 |   class A {
> 3 |     foo = class B { @bar(arguments) foo };
    |                                   ^
  4 |   }
  5 | }
  6 |],
  "input": "function fn() {
  class A {
    foo = class B { @bar(arguments) foo };
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/asi-failure-computed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class Foo {
  2 |   p = x
> 3 |   [m] () {}
    |          ^
  4 | }
  5 |],
  "input": "class Foo {
  p = x
  [m] () {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/asi-failure-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:9]: Unexpected token: '{' (3:9)
  1 | class Foo {
  2 |   p = x
> 3 |   *m () {}
    |         ^
  4 | }
  5 |],
  "input": "class Foo {
  p = x
  *m () {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/await-identifier-in-computed-property-inside-params-of-function-inside-params-of-async-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:40]: 'Await' may not be used as an identifier in this context (1:40)
> 1 | async (x = function f(x = class { [await] }){}) => {}
    |                                        ^
  2 |],
  "input": "async (x = function f(x = class { [await] }){}) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/await-in-computed-property-in-params-of-async-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: 'Await' may not be used as an identifier in this context (1:25)
> 1 | async( x = class { [await] = x }) => {}
    |                         ^
  2 |],
  "input": "async( x = class { [await] = x }) => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/edge-cases/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [15:3]: Invalid key token (15:3)
  13 | class A7 {
  14 |   get
> 15 |   *a(){}
     |   ^
  16 | }
  17 |
  18 | class A8 {],
  "input": "class A1 {
  static
  a
  static
}

class A2 { a }
class A3 { get }
class A4 { set }
class A5 { static }
class A6 { async }

class A7 {
  get
  *a(){}
}

class A8 {
  static
  *a(){}
}

class A9 {
  async
  a(){}
}

class A10 {
  static
  async
  a
}

class A11 { static; }

class A12 {
  static = 0;
}

class A13 {
  get
  ['a'](){}
}

class A14 {
  static
  get
  static
  (){}
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/new-target/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:23]: new.target only allowed within functions (2:23)
  1 | class X {
> 2 |   static a = new.target;
    |                       ^
  3 |   static b = (foo = 1 + bar(new.target));
  4 |   static c = () => new.target;
  5 |   static d = (foo = new.target) => {};],
  "input": "class X {
  static a = new.target;
  static b = (foo = 1 + bar(new.target));
  static c = () => new.target;
  static d = (foo = new.target) => {};
  e = new.target;
  f = (foo = 1 + bar(new.target));
  g = () => new.target;
  h = (foo = new.target) => {};
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/new-target-invalid/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: new.target only allowed within functions (1:18)
> 1 | var x = new.target;
    |                  ^
  2 |],
  "input": "var x = new.target;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/new-target-with-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:23]: new.target only allowed within functions (2:23)
  1 | class X {
> 2 |   static a = new.target;
    |                       ^
  3 |   static b = (foo = 1 + bar(new.target));
  4 |   static c = () => new.target;
  5 |   static d = (foo = new.target) => {};],
  "input": "class X {
  static a = new.target;
  static b = (foo = 1 + bar(new.target));
  static c = () => new.target;
  static d = (foo = new.target) => {};
  e = new.target;
  f = (foo = 1 + bar(new.target));
  g = () => new.target;
  h = (foo = new.target) => {};
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/no-ctor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Classes may not have a field called constructor (3:1)
  1 | class Foo {
  2 |   constructor
> 3 | }
    | ^
  4 |],
  "input": "class Foo {
  constructor
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/no-static-prototype/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:1]: Classes may not have a static property named 'prototype' (3:1)
  1 | class Foo {
  2 |   static prototype
> 3 | }
    | ^
  4 |],
  "input": "class Foo {
  static prototype
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/no-static-prototype-2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Classes may not have a static property named 'prototype' (3:3)
  1 | class Foo {
  2 |   static prototype
> 3 |   *x(){}
    |   ^
  4 | }
  5 |],
  "input": "class Foo {
  static prototype
  *x(){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/static-field-named-constructor/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:23]: Classes may not have a field called constructor (2:23)
  1 | class Foo {
> 2 |     static constructor;
    |                       ^
  3 | }
  4 |],
  "input": "class Foo {
    static constructor;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/super/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: Member access on super must be in a method (2:12)
  1 | class Fails extends class { c(){} } {
> 2 |   c = super.c();
    |            ^
  3 | }
  4 |],
  "input": "class Fails extends class { c(){} } {
  c = super.c();
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/super-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:18]: Unexpected private field (4:18)
  2 |   constructor() {
  3 |     class C extends D {
> 4 |       foo = super();
    |                  ^
  5 |     }
  6 |   }
  7 | }],
  "input": "class A extends B {
  constructor() {
    class C extends D {
      foo = super();
    }
  }
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/super-inside-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: Member access on super must be in a method (2:20)
  1 | class A extends B {
> 2 |   foo = () => super.x();
    |                    ^
  3 | }
  4 |],
  "input": "class A extends B {
  foo = () => super.x();
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-properties/super-inside-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Member access on super must be in a method (3:10)
  1 | class A {
  2 |   foo = function fn() {
> 3 |     super.x();
    |          ^
  4 |   }
  5 | }
  6 |],
  "input": "class A {
  foo = function fn() {
    super.x();
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/await-binding-in-function-in-static-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:20]: Unexpected token: '{' (3:20)
  1 | var C;
  2 |
> 3 | C = class { static { function f() { await } } };
    |                    ^
  4 |
  5 | C = class { static { function f(await) {} } };
  6 |],
  "input": "var C;

C = class { static { function f() { await } } };

C = class { static { function f(await) {} } };

C = class { static { function f(x = await) {} } };

C = class { static { function f({ [await]: x }) {} } };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/await-binding-in-static-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:20]: Unexpected token: '{' (3:20)
  1 | var C;
  2 |
> 3 | C = class { static { await } };
    |                    ^
  4 |
  5 | C = class { static { () => await } };
  6 |],
  "input": "var C;

C = class { static { await } };

C = class { static { () => await } };

C = class { static { (await) => {} } };

C = class { static { (await) } };

C = class { static { async (await) => {} } };

C = class { static { async (await) } };

C = class { static { ({ [await]: x}) => {} } };

C = class { static { ({ [await]: x}) } };

C = class { static { async ({ [await]: x}) => {} } };

C = class { static { async ({ [await]: x}) } };

async (x = class { static { await } }) => {};

C = class { static { function await() {} } };

C = class { static { await: 0 } };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/basic/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     this.bar = this.foo;
  5 |   }
  6 | }],
  "input": "class C {
  static foo() {}
  static {
    this.bar = this.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/directive-like-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     "use strict"; // will not be parsed as directives
  5 |     this.bar = this.foo;
  6 |   }],
  "input": "class C {
  static foo() {}
  static {
    \\"use strict\\"; // will not be parsed as directives
    this.bar = this.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/empty-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {}
    |          ^
  4 | }
  5 |],
  "input": "class C {
  static foo() {}
  static {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-arguments/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Unexpected token: '{' (2:10)
  1 | class C {
> 2 |   static {
    |          ^
  3 |     this.foo = arguments;
  4 |   }
  5 | }],
  "input": "class C {
  static {
    this.foo = arguments;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:12]: Unexpected token: '{' (4:12)
  2 |   class C {
  3 |     static foo() {}
> 4 |     static {
    |            ^
  5 |       await 42;
  6 |     }
  7 |   }],
  "input": "async function foo() {
  class C {
    static foo() {}
    static {
      await 42;
    }
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-break/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:14]: Unexpected token: '{' (5:14)
  3 |     class C {
  4 |       static foo() {}
> 5 |       static {
    |              ^
  6 |         break;
  7 |       }
  8 |     }],
  "input": "switch (0) {
  default: {
    class C {
      static foo() {}
      static {
        break;
      }
    }
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-continue/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:12]: Unexpected token: '{' (4:12)
  2 |   class C {
  3 |     static foo() {}
> 4 |     static {
    |            ^
  5 |       continue;
  6 |     }
  7 |   }],
  "input": "while (0) {
  class C {
    static foo() {}
    static {
      continue;
    }
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:10]: Unexpected token: '{' (4:10)
  2 |   static foo() {}
  3 |   @dec
> 4 |   static {
    |          ^
  5 |     this.bar = this.foo;
  6 |   }
  7 | }],
  "input": "class C {
  static foo() {}
  @dec
  static {
    this.bar = this.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-duplicated-static-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {}
    |          ^
  4 |   static {}
  5 | }
  6 |],
  "input": "class C {
  static foo() {}
  static {}
  static {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-legacy-decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:10]: Unexpected token: '{' (4:10)
  2 |   static foo() {}
  3 |   @dec
> 4 |   static {
    |          ^
  5 |     this.bar = this.foo;
  6 |   }
  7 | }],
  "input": "class C {
  static foo() {}
  @dec
  static {
    this.bar = this.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-legacy-octal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     042;
  5 |   }
  6 | }],
  "input": "class C {
  static foo() {}
  static {
    042;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-return/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     return this;
  5 |   }
  6 | }],
  "input": "class C {
  static foo() {}
  static {
    return this;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-super-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:10]: Unexpected token: '{' (4:10)
  2 | class C extends B {
  3 |   static foo() {}
> 4 |   static {
    |          ^
  5 |     super();
  6 |   }
  7 | }],
  "input": "class B {}
class C extends B {
  static foo() {}
  static {
    super();
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/invalid-yield/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [4:12]: Unexpected token: '{' (4:12)
  2 |   class C {
  3 |     static foo() {}
> 4 |     static {
    |            ^
  5 |       yield 42;
  6 |     }
  7 |   }],
  "input": "function* foo() {
  class C {
    static foo() {}
    static {
      yield 42;
    }
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/lexical-scope/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     const C = {};
  5 |   }
  6 | }],
  "input": "class C {
  static foo() {}
  static {
    const C = {};
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/nested-control-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:10]: Unexpected token: '{' (3:10)
  1 | class C {
  2 |   static foo() {}
> 3 |   static {
    |          ^
  4 |     while (this.foo) {
  5 |       if (this.foo) {
  6 |         break;],
  "input": "class C {
  static foo() {}
  static {
    while (this.foo) {
      if (this.foo) {
        break;
      } else {
        continue;
      }
    }
    class C2 {
      bar() {
        return;
      }
    }
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/class-static-block/super-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [5:10]: Unexpected token: '{' (5:10)
  3 | }
  4 | class C extends B {
> 5 |   static {
    |          ^
  6 |     this.bar = super.foo;
  7 |   }
  8 | }],
  "input": "class B {
  static foo() {}
}
class C extends B {
  static {
    this.bar = super.foo;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/decimal-as-property-name/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: No identifiers allowed directly after numeric literal (1:4)
> 1 | ({ 0m: 0, .1m() {}, get 0.2m(){}, set 3m(_){}, async 4m() {}, *.5m() {} });
    |    ^
  2 |],
  "input": "({ 0m: 0, .1m() {}, get 0.2m(){}, set 3m(_){}, async 4m() {}, *.5m() {} });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-binary/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: No identifiers allowed directly after numeric literal (1:11)
> 1 | 0b101011101m
    |           ^
  2 |],
  "input": "0b101011101m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-e/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 2e9m
    |   ^
  2 |],
  "input": "2e9m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-hexadecimal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: No identifiers allowed directly after numeric literal (1:7)
> 1 | 0x16432m
    |       ^
  2 |],
  "input": "0x16432m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-non-octal-decimal-int/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 089m
    | ^
  2 |],
  "input": "089m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-octal-legacy/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Octal escape sequences are not allowed in strict mode (1:1)
> 1 | 016432m
    | ^
  2 |],
  "input": "016432m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/invalid-octal-new/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: No identifiers allowed directly after numeric literal (1:7)
> 1 | 0o16432m
    |       ^
  2 |],
  "input": "0o16432m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/valid-decimal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: No identifiers allowed directly after numeric literal (1:2)
> 1 | 1.m
    |  ^
  2 |],
  "input": "1.m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/valid-float/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: No identifiers allowed directly after numeric literal (1:3)
> 1 | 100m
    |   ^
  2 |],
  "input": "100m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/valid-float-decimal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: No identifiers allowed directly after numeric literal (1:5)
> 1 | 100.0m
    |     ^
  2 |],
  "input": "100.0m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/valid-large/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: No identifiers allowed directly after numeric literal (1:19)
> 1 | 9223372036854775807m
    |                   ^
  2 |],
  "input": "9223372036854775807m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decimal/valid-small/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: No identifiers allowed directly after numeric literal (1:4)
> 1 | 100.m
    |    ^
  2 |],
  "input": "100.m
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/class-method-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected ')' (2:15)
  1 | class Foo {
> 2 |   constructor(@foo() x, @bar({ a: 123 }) @baz() y) {}
    |               ^
  3 | }
  4 |],
  "input": "class Foo {
  constructor(@foo() x, @bar({ a: 123 }) @baz() y) {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/export-default-declaration-function-declaration-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected token: '@' (1:30)
> 1 | export default function func(@foo() x, @bar({ a: 123 }) @baz() y) {}
    |                              ^
  2 |],
  "input": "export default function func(@foo() x, @bar({ a: 123 }) @baz() y) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/function-declaration-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: '@' (1:15)
> 1 | function func(@foo() x, @bar({ a: 123 }) @baz() y) {}
    |               ^
  2 |],
  "input": "function func(@foo() x, @bar({ a: 123 }) @baz() y) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/function-expression-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected token: '@' (1:24)
> 1 | const func = function (@foo() x, @bar({ a: 123 }) @baz() y) {};
    |                        ^
  2 |],
  "input": "const func = function (@foo() x, @bar({ a: 123 }) @baz() y) {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/invalid-decorator-spread-element/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '@' (1:4)
> 1 | ({ @foo ...foo });
    |    ^
  2 |],
  "input": "({ @foo ...foo });
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/no-constructor-decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:13]: Decorators can't be used with a constructor (3:13)
  1 | class Foo {
  2 |   @abc
> 3 |   constructor(){}
    |             ^
  4 | }
  5 |],
  "input": "class Foo {
  @abc
  constructor(){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/no-export-decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:17]: Leading decorators must be attached to a class declaration (2:17)
  1 | @foo
> 2 | export default 0;
    |                 ^],
  "input": "@foo
export default 0;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/no-export-decorators-without-class/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:30]: Leading decorators must be attached to a class declaration (2:30)
  1 | @foo
> 2 | export default function f(){};
    |                              ^],
  "input": "@foo
export default function f(){};",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/no-semi/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Decorators must not be followed by a semicolon (3:3)
  1 | class A {
  2 |   @a;
> 3 |   m(){}
    |   ^
  4 | }
  5 |],
  "input": "class A {
  @a;
  m(){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/object-decorator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '@' (1:8)
> 1 | @foo({ @bar foo: "bar" }) @bar class Foo {}
    |        ^],
  "input": "@foo({ @bar foo: \\"bar\\" }) @bar class Foo {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators/object-method-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Expected ')' (2:10)
  1 | var obj = {
> 2 |   method(@foo() x, @bar({ a: 123 }) @baz() y) {}
    |          ^
  3 | };
  4 |],
  "input": "var obj = {
  method(@foo() x, @bar({ a: 123 }) @baz() y) {}
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/export-after-expression-decorator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected strict mode reserved word (1:31)
> 1 | let MyClass = @foo export class {}
    |                               ^
  2 |],
  "input": "let MyClass = @foo export class {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/export-decorated-class/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '@' (1:8)
> 1 | export @bar class Foo { }
    |        ^
  2 |],
  "input": "export @bar class Foo { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/export-decorated-class-without-plugin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '@' (1:8)
> 1 | export @bar class Foo { }
    |        ^
  2 |],
  "input": "export @bar class Foo { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-class-method-parameter/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected ')' (2:15)
  1 | class Foo {
> 2 |   constructor(@foo x) {}
    |               ^
  3 | }
  4 |],
  "input": "class Foo {
  constructor(@foo x) {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-constructor-decorators/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:13]: Decorators can't be used with a constructor (3:13)
  1 | class Foo {
  2 |   @abc
> 3 |   constructor(){}
    |             ^
  4 | }
  5 |],
  "input": "class Foo {
  @abc
  constructor(){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-function-parameters/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: '@' (1:15)
> 1 | function func(@foo x) {}
    |               ^
  2 |],
  "input": "function func(@foo x) {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-object-method-parameters/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Expected ')' (2:10)
  1 | var obj = {
> 2 |   method(@foo x) {}
    |          ^
  3 | };
  4 |],
  "input": "var obj = {
  method(@foo x) {}
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-object-methods/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: Unexpected token: '@' (2:3)
  1 | var o = {
> 2 |   @baz
    |   ^
  3 |   foo() {
  4 |   }
  5 | }],
  "input": "var o = {
  @baz
  foo() {
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/no-semi/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:3]: Decorators must not be followed by a semicolon (3:3)
  1 | class A {
  2 |   @a;
> 3 |   m(){}
    |   ^
  4 | }
  5 |],
  "input": "class A {
  @a;
  m(){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/decorators-2/on-computed-name-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:13]: Unexpected token: '{' (3:13)
  1 | class A {
  2 |   @dec
> 3 |   ['name'](){}
    |             ^
  4 | }
  5 |],
  "input": "class A {
  @dec
  ['name'](){}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/do-expressions/conditional-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'do' (1:10)
> 1 | let x = do {
    |          ^
  2 |   if (foo()) { f() }
  3 |   else if (bar()) { g() }
  4 |   else { h() }],
  "input": "let x = do {
  if (foo()) { f() }
  else if (bar()) { g() }
  else { h() }
};",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/do-expressions/scoping-variable/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'do' (1:10)
> 1 | let x = do {
    |          ^
  2 |   let tmp = f();
  3 |   tmp * tmp + 1
  4 | };],
  "input": "let x = do {
  let tmp = f();
  tmp * tmp + 1
};",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/do-expressions/with-jsx/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [6:10]: Unexpected token: 'do' (6:10)
  4 |       <Home />
  5 |       {
> 6 |         do {
    |          ^
  7 |           if (loggedIn) {
  8 |             <LogoutButton />
  9 |           } else {],
  "input": "function foo() {
  return (
    <nav>
      <Home />
      {
        do {
          if (loggedIn) {
            <LogoutButton />
          } else {
            <LoginButton />
          }
        }
      }
    </nav>
  );
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/dynamic-import/invalid-lone-import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Expected '(' (1:8)
> 1 | (import)
    |        ^
  2 |],
  "input": "(import)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: 'identifier' (1:8)
> 1 | export A from 'test';
    |        ^
  2 |],
  "input": "export A from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-and-named/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Unexpected token: 'identifier' (1:10)
> 1 | export foo, { bar } from "bar";
    |          ^],
  "input": "export foo, { bar } from \\"bar\\";",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-and-ns/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: 'identifier' (1:8)
> 1 | export B, * as A from 'test';
    |        ^
  2 |],
  "input": "export B, * as A from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-dangling-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: ',' (1:15)
> 1 | export default,
    |               ^
  2 |],
  "input": "export default,
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:25]: Unexpected token: 'string' (1:25)
> 1 | export default from "bar";
    |                         ^],
  "input": "export default from \\"bar\\";",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-escaped/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: 'escaped keyword' (1:15)
> 1 | export asyn\\u{63} from "async";
    |               ^
  2 |],
  "input": "export asyn\\\\u{63} from \\"async\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-from-identifier-escaped/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Unexpected token: 'escaped keyword' (1:22)
> 1 | export default \\u{66}rom;
    |                      ^
  2 |],
  "input": "export default \\\\u{66}rom;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-type-with-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: 'identifier' (1:11)
> 1 | export type from 'test';
    |           ^
  2 |],
  "input": "export type from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-type-with-typescript/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: 'identifier' (1:11)
> 1 | export type from 'test';
    |           ^
  2 |],
  "input": "export type from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/default-type-without-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: 'identifier' (1:11)
> 1 | export type from 'test';
    |           ^
  2 |],
  "input": "export type from 'test';
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/export-extensions/export-with-ts/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: 'identifier' (1:15)
> 1 | export abstract class A {}
    |               ^
  2 | export declare interface B {}
  3 | export enum C {}
  4 | export interface D {}],
  "input": "export abstract class A {}
export declare interface B {}
export enum C {}
export interface D {}
export module E {}
export namespace F {}
export type G = typeof foo;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/disabled-function-keyword-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected '(' (2:15)
  1 | function* foo() {
> 2 |   function.sent() {}
    |               ^
  3 | }
  4 |],
  "input": "function* foo() {
  function.sent() {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/disabled-function-keyword-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: Expected '(' (2:12)
  1 | function* foo() {
> 2 |   (function.sent() {});
    |            ^
  3 | }
  4 |],
  "input": "function* foo() {
  (function.sent() {});
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/disabled-inside-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Expected '(' (2:18)
  1 | function foo() {
> 2 |   return function.sent;
    |                  ^
  3 | }
  4 |],
  "input": "function foo() {
  return function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/disabled-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Expected '(' (2:18)
  1 | function* foo() {
> 2 |   return function.sent;
    |                  ^
  3 | }
  4 |],
  "input": "function* foo() {
  return function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-asi-funciton-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected '(' (2:15)
  1 | function* foo() {
> 2 |   function.sent()
    |               ^
  3 |   {}
  4 | }
  5 |],
  "input": "function* foo() {
  function.sent()
  {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: Expected '(' (2:12)
  1 | function* foo() {
> 2 |   (function.sent());
    |            ^
  3 | }
  4 |],
  "input": "function* foo() {
  (function.sent());
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-call-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected '(' (2:15)
  1 | function* foo() {
> 2 |   function.sent();
    |               ^
  3 | }
  4 |],
  "input": "function* foo() {
  function.sent();
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-function-keyword-declaration/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected '(' (2:15)
  1 | function* foo() {
> 2 |   function.sent() {}
    |               ^
  3 | }
  4 |],
  "input": "function* foo() {
  function.sent() {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-function-keyword-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:12]: Expected '(' (2:12)
  1 | function* foo() {
> 2 |   (function.sent() {});
    |            ^
  3 | }
  4 |],
  "input": "function* foo() {
  (function.sent() {});
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-if-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: In strict mode code, functions can only be declared at top level or inside a block (2:20)
  1 | function* foo() {
> 2 |   if (true) function.sent;
    |                    ^
  3 | }
  4 |],
  "input": "function* foo() {
  if (true) function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-inside-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Expected '(' (2:18)
  1 | function foo() {
> 2 |   return function.sent;
    |                  ^
  3 | }
  4 |],
  "input": "function foo() {
  return function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-inside-generator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Expected '(' (2:18)
  1 | function* foo() {
> 2 |   return function.sent;
    |                  ^
  3 | }
  4 |],
  "input": "function* foo() {
  return function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/enabled-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Expected '(' (2:15)
  1 | function* foo() {
> 2 |   function.sent;
    |               ^
  3 | }
  4 |],
  "input": "function* foo() {
  function.sent;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/function-sent/invalid-syntax/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:20]: In strict mode code, functions can only be declared at top level or inside a block (2:20)
  1 | function* foo() {
> 2 |   if (true) function.;
    |                    ^
  3 | }
  4 |],
  "input": "function* foo() {
  if (true) function.;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/dynamic-import-with-valid-syntax/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Expected ')' (1:18)
> 1 | import("foo.json", { assert: { type: "json" } })
    |                  ^
  2 |],
  "input": "import(\\"foo.json\\", { assert: { type: \\"json\\" } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/incorrect-arity/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: ')' (1:8)
> 1 | import();
    |        ^
  2 | import("./foo.json", { assert: { type: "json"} }, "unsupported");
  3 |],
  "input": "import();
import(\\"./foo.json\\", { assert: { type: \\"json\\"} }, \\"unsupported\\");
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-assert-entry-no-colon/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected token: 'identifier' (1:19)
> 1 | import "foo" assert { type, "json" };
    |                   ^
  2 |],
  "input": "import \\"foo\\" assert { type, \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-escaped-assert/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Unexpected token: 'identifier' (1:22)
> 1 | import "foo" \\u{61}ssert { type: "json" };
    |                      ^
  2 |],
  "input": "import \\"foo\\" \\\\u{61}ssert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-export-without-from/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:21]: Unexpected token: 'identifier' (2:21)
  1 | const foo = 1;
> 2 | export { foo } assert { type: "json" };
    |                     ^
  3 |],
  "input": "const foo = 1;
export { foo } assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-spread-element-import-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Expected ')' (1:20)
> 1 | import("./foo.json", ...[]);
    |                    ^
  2 |],
  "input": "import(\\"./foo.json\\", ...[]);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-export-with-and-attributes-multiple-lines/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected token: 'identifier' (1:30)
> 1 | export { x } from "foo" assert
    |                              ^
  2 | { type: "json" }
  3 |],
  "input": "export { x } from \\"foo\\" assert
{ type: \\"json\\" }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-export-without-attributes-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected token: 'identifier' (1:30)
> 1 | export { x } from "foo" assert;
    |                              ^
  2 |],
  "input": "export { x } from \\"foo\\" assert;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-with-attributes-multiple-lines/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected token: 'identifier' (1:17)
> 1 | import "x" assert
    |                 ^
  2 | { type: "json" }
  3 |],
  "input": "import \\"x\\" assert
{ type: \\"json\\" }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-with-repeated-type/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json", type: "html" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\", type: \\"html\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-with-repeated-type-string/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { "type": "json", type: "html", "type": "js" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { \\"type\\": \\"json\\", type: \\"html\\", \\"type\\": \\"js\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/invalid-syntax-without-attributes-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected token: 'identifier' (1:17)
> 1 | import "x" assert;
    |                 ^
  2 |],
  "input": "import \\"x\\" assert;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/string-literal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { for: "for" }
    |                                 ^
  2 | export { foo } from "foo.json" assert { for: "for" }
  3 |],
  "input": "import foo from \\"foo.json\\" assert { for: \\"for\\" }
export { foo } from \\"foo.json\\" assert { for: \\"for\\" }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/trailing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:28]: Unexpected token: 'identifier' (1:28)
> 1 | import foo from "foo" assert { type: "json", }
    |                            ^
  2 | export { foo } from "foo" assert { type: "json", }
  3 |],
  "input": "import foo from \\"foo\\" assert { type: \\"json\\", }
export { foo } from \\"foo\\" assert { type: \\"json\\", }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/trailing-comma-dynamic/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Expected ')' (1:16)
> 1 | import("foo.js",);
    |                ^
  2 | import("foo.json", { assert: { type: "json" } },);
  3 |],
  "input": "import(\\"foo.js\\",);
import(\\"foo.json\\", { assert: { type: \\"json\\" } },);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-string-assertion-key/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:19]: Unexpected token: 'identifier' (1:19)
> 1 | import "foo" assert { "type": "json" };
    |                   ^
  2 |],
  "input": "import \\"foo\\" assert { \\"type\\": \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-star-as-with-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:38]: Unexpected token: 'identifier' (1:38)
> 1 | export * as foo from "foo.json" assert { type: "json" };
    |                                      ^
  2 |],
  "input": "export * as foo from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-star-with-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'identifier' (1:31)
> 1 | export * from "foo.json" assert { type: "json" };
    |                               ^
  2 |],
  "input": "export * from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Unexpected token: 'identifier' (1:37)
> 1 | export { foo } from "foo.json" assert { type: "json" };
    |                                     ^
  2 |],
  "input": "export { foo } from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-attributes-and-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:30]: Unexpected token: 'identifier' (1:30)
> 1 | export { x } from "foo" assert { type: "json" }
    |                              ^
  2 | [0]
  3 |],
  "input": "export { x } from \\"foo\\" assert { type: \\"json\\" }
[0]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-invalid-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Unexpected token: 'identifier' (1:37)
> 1 | export { foo } from "foo.json" assert { type: "json", lazy: true, startAtLine: 1 };
    |                                     ^
  2 |],
  "input": "export { foo } from \\"foo.json\\" assert { type: \\"json\\", lazy: true, startAtLine: 1 };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-no-type-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Unexpected token: 'identifier' (1:37)
> 1 | export { foo } from "foo.json" assert { lazy: "true" };
    |                                     ^
  2 |],
  "input": "export { foo } from \\"foo.json\\" assert { lazy: \\"true\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-object-method-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Unexpected token: 'identifier' (1:37)
> 1 | export { foo } from "foo.json" assert { type: "json", hasOwnProperty: "true" };
    |                                     ^
  2 |],
  "input": "export { foo } from \\"foo.json\\" assert { type: \\"json\\", hasOwnProperty: \\"true\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-export-with-repeated-type/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:37]: Unexpected token: 'identifier' (1:37)
> 1 | export { foo } from "foo.json" assert { type: "json", type: "html" };
    |                                     ^
  2 |],
  "input": "export { foo } from \\"foo.json\\" assert { type: \\"json\\", type: \\"html\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-with-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-with-attributes-and-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unexpected token: 'identifier' (1:17)
> 1 | import "x" assert { type: "json" }
    |                 ^
  2 | [0]
  3 |],
  "input": "import \\"x\\" assert { type: \\"json\\" }
[0]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-with-invalid-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json", lazy: true, startAtLine: 1 };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\", lazy: true, startAtLine: 1 };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-with-no-type-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { lazy: "true" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { lazy: \\"true\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/valid-syntax-with-object-method-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json", hasOwnProperty: "true" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\", hasOwnProperty: \\"true\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/import-assertions/without-plugin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:33]: Unexpected token: 'identifier' (1:33)
> 1 | import foo from "foo.json" assert { type: "json" };
    |                                 ^
  2 |],
  "input": "import foo from \\"foo.json\\" assert { type: \\"json\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/dynamic-import-with-valid-syntax/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Expected ')' (1:18)
> 1 | import("foo.json", { with: { type: "json" } })
    |                  ^
  2 |],
  "input": "import(\\"foo.json\\", { with: { type: \\"json\\" } })
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/import-with-statement/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:6]: Strict mode code may not include a with statement (2:6)
  1 | import "x"
> 2 | with ({});
    |      ^
  3 |],
  "input": "import \\"x\\"
with ({});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/incorrect-arity/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: ')' (1:8)
> 1 | import();
    |        ^
  2 | import("./foo.json", { with: { type: "json"} }, "unsupported");
  3 |],
  "input": "import();
import(\\"./foo.json\\", { with: { type: \\"json\\"} }, \\"unsupported\\");
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/invalid-spread-element-import-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: Expected ')' (1:20)
> 1 | import("./foo.json", ...[]);
    |                    ^
  2 |],
  "input": "import(\\"./foo.json\\", ...[]);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/invalid-syntax-with-attributes-multiple-lines/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: 'with' (1:15)
> 1 | import "x" with
    |               ^
  2 | type: "json"
  3 |],
  "input": "import \\"x\\" with
type: \\"json\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/invalid-syntax-without-attributes-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: 'with' (1:15)
> 1 | import "x" with;
    |               ^
  2 |],
  "input": "import \\"x\\" with;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/trailing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Expected ')' (1:16)
> 1 | import("foo.js",);
    |                ^
  2 | import("foo.json", { with: { type: "json" } },);
  3 |],
  "input": "import(\\"foo.js\\",);
import(\\"foo.json\\", { with: { type: \\"json\\" } },);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-attributes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-attributes-and-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unexpected token: 'with' (1:15)
> 1 | import "x" with type: "json"
    |               ^
  2 | [0]
  3 |],
  "input": "import \\"x\\" with type: \\"json\\"
[0]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-invalid-plugin-option/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-invalid-value/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json", lazy: true, startAtLine: 1;
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\", lazy: true, startAtLine: 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-no-type-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with lazy: "true";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with lazy: \\"true\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-object-method-attribute/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json", hasOwnProperty: "true";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\", hasOwnProperty: \\"true\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/valid-syntax-with-repeated-type/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json", type: "html";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\", type: \\"html\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-attributes/without-plugin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:31]: Unexpected token: 'with' (1:31)
> 1 | import foo from "foo.json" with type: "json";
    |                               ^
  2 |],
  "input": "import foo from \\"foo.json\\" with type: \\"json\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/invalid-await-label-in-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '{' (1:8)
> 1 | module { await: 3 };
    |        ^
  2 |],
  "input": "module { await: 3 };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/invalid-class-in-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:12]: Unexpected token: '{' (3:12)
  1 | class B {
  2 |   #p() {
> 3 |     module {
    |            ^
  4 |       class C { [this.#p]; }
  5 |     };
  6 |   }],
  "input": "class B {
  #p() {
    module {
      class C { [this.#p]; }
    };
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/invalid-duplicated-exports-in-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: '{' (1:18)
> 1 | const m = module {
    |                  ^
  2 |   export const foo = "foo";
  3 |   export { foo };
  4 | };],
  "input": "const m = module {
  export const foo = \\"foo\\";
  export { foo };
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/invalid-undefined-export-in-module-blocks01/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '{' (1:8)
> 1 | module {
    |        ^
  2 |   export { foo }
  3 | }
  4 |],
  "input": "module {
  export { foo }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/invalid-undefined-export-in-module-blocks02/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Unexpected token: '{' (2:8)
  1 | let foo;
> 2 | module {
    |        ^
  3 |   export { foo };
  4 | }
  5 |],
  "input": "let foo;
module {
  export { foo };
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-assign-module-blocks-to-variables/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: '{' (1:18)
> 1 | const m = module {
    |                  ^
  2 |   export const foo = "foo";
  3 | };
  4 |],
  "input": "const m = module {
  export const foo = \\"foo\\";
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-class-in-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:12]: Unexpected token: '{' (3:12)
  1 | class B {
  2 |   #p() {
> 3 |     module {
    |            ^
  4 |       class C {
  5 |         [this.#p];
  6 |         #p = 3;],
  "input": "class B {
  #p() {
    module {
      class C {
        [this.#p];
        #p = 3;
      }
    };
  }
}
  ",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-duplicated-exports-between-other-modules/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:19]: Unexpected token: '{' (2:19)
  1 | export const foo = "foo";
> 2 | const m1 = module { export const foo = "foo" };
    |                   ^
  3 | const m2 = module { export const foo = "foo" };
  4 |],
  "input": "export const foo = \\"foo\\";
const m1 = module { export const foo = \\"foo\\" };
const m2 = module { export const foo = \\"foo\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-duplicated-variables-in-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:18]: Unexpected token: '{' (2:18)
  1 | const foo = "foo";
> 2 | const m = module {
    |                  ^
  3 |   const foo = "foo";
  4 | };
  5 |],
  "input": "const foo = \\"foo\\";
const m = module {
  const foo = \\"foo\\";
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-empty-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '{' (1:8)
> 1 | module {};
    |        ^
  2 |],
  "input": "module {};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-import-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: '{' (1:18)
> 1 | const m = module {
    |                  ^
  2 |   export const foo = "foo";
  3 | };
  4 | import(module);],
  "input": "const m = module {
  export const foo = \\"foo\\";
};
import(module);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-module-blocks-as-arguments/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:34]: Expected ')' (1:34)
> 1 | const worker = new Worker(module {
    |                                  ^
  2 |     export const foo = "foo";
  3 | });
  4 |],
  "input": "const worker = new Worker(module {
    export const foo = \\"foo\\";
});
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-nested-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: '{' (1:16)
> 1 | let m = module {
    |                ^
  2 |   module {
  3 |     export let foo = "foo";
  4 |   };],
  "input": "let m = module {
  module {
    export let foo = \\"foo\\";
  };
};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-singleline-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Unexpected token: '{' (1:18)
> 1 | const m = module { export const foo = "foo" };
    |                  ^
  2 |],
  "input": "const m = module { export const foo = \\"foo\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-blocks/valid-top-level-await-in-module-blocks/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '{' (1:8)
> 1 | module { await 3 };
    |        ^
  2 |],
  "input": "module { await 3 };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/default-import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Expected '}' (1:17)
> 1 | import {"default" as quotation} from "Confucius";
    |                 ^
  2 |],
  "input": "import {\\"default\\" as quotation} from \\"Confucius\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/duplicate-exported-binding-check/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:26]: Only a identifier can be used to indicate alias (2:26)
  1 | const foo = 42, bar = 42;
> 2 | export { foo, bar as "foo" }
    |                          ^
  3 |],
  "input": "const foo = 42, bar = 42;
export { foo, bar as \\"foo\\" }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/export-from/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Expected '}' (1:22)
> 1 | export { "學而時習之，不亦說乎？", "吾道一以貫之。" as "忠恕。" } from "Confucius";
    |                      ^
  2 |],
  "input": "export { \\"學而時習之，不亦說乎？\\", \\"吾道一以貫之。\\" as \\"忠恕。\\" } from \\"Confucius\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/export-name-has-lone-surrogate/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:30]: Only a identifier can be used to indicate alias (2:30)
  1 | const foo = 42, bar = 42;
> 2 | export { foo as "\\ud800\\udbff" } // should throw
    |                              ^
  3 | export { bar as "\\udbff\\udfff" } // should not throw
  4 |],
  "input": "const foo = 42, bar = 42;
export { foo as \\"\\\\ud800\\\\udbff\\" } // should throw
export { bar as \\"\\\\udbff\\\\udfff\\" } // should not throw
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/import-local-is-string/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '}' (1:14)
> 1 | import { "foo" } from "foo";
    |              ^
  2 |],
  "input": "import { \\"foo\\" } from \\"foo\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/mixed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Expected '}' (1:14)
> 1 | import { "foo" as bar, "default" as qux } from "module-a";
    |              ^
  2 | export * as "foo", { default as "quux" } from "module-b";
  3 |],
  "input": "import { \\"foo\\" as bar, \\"default\\" as qux } from \\"module-a\\";
export * as \\"foo\\", { default as \\"quux\\" } from \\"module-b\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/named-export/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:35]: Only a identifier can be used to indicate alias (2:35)
  1 | const quotation = "";
> 2 | export { quotation as "學而時習之，不亦說乎？" };
    |                                   ^
  3 |],
  "input": "const quotation = \\"\\";
export { quotation as \\"學而時習之，不亦說乎？\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/named-import/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:21]: Expected '}' (1:21)
> 1 | import {"學而時習之，不亦說乎？" as quotation} from "Confucius";
    |                     ^
  2 |],
  "input": "import {\\"學而時習之，不亦說乎？\\" as quotation} from \\"Confucius\\";
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/module-string-names/string-exported-binding-without-from/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Expected '}' (1:22)
> 1 | export { "學而時習之，不亦說乎？", "吾道一以貫之。" as "忠恕。" };
    |                      ^
  2 |],
  "input": "export { \\"學而時習之，不亦說乎？\\", \\"吾道一以貫之。\\" as \\"忠恕。\\" };
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/call-expr/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '?' (1:5)
> 1 | foo(?)
    |     ^
  2 |],
  "input": "foo(?)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/call-on-SuperProperty/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:35]: Unexpected token: '?' (3:35)
  1 | class foo {
  2 |     constructor() {
> 3 |         baz(this, () => super.bar(?));
    |                                   ^
  4 |     }
  5 | }
  6 |],
  "input": "class foo {
    constructor() {
        baz(this, () => super.bar(?));
    }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/for-any-arg/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '?' (1:5)
> 1 | foo(?,x,?)
    |     ^
  2 |
  3 | bar.foo(?, x, ?)
  4 |],
  "input": "foo(?,x,?)

bar.foo(?, x, ?)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/from-left/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:7]: Unexpected token: '?' (1:7)
> 1 | foo(x,?)
    |       ^
  2 |
  3 | bar.foo(x,?)
  4 |],
  "input": "foo(x,?)

bar.foo(x,?)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/from-right/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '?' (1:5)
> 1 | foo(?,x)
    |     ^
  2 |
  3 | bar.foo(?,x)
  4 |],
  "input": "foo(?,x)

bar.foo(?,x)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/in-SuperCall/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [3:17]: Unexpected token: '?' (3:17)
  1 | class Foo extends Bar {
  2 |   constructor(x){
> 3 |     super(x, 1, ?, ?);
    |                 ^
  4 |     this.x = x;
  5 |   }
  6 | }],
  "input": "class Foo extends Bar {
  constructor(x){
    super(x, 1, ?, ?);
    this.x = x;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/in-new/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Unexpected token: '?' (1:12)
> 1 | new bar(x, ?, 2, ?)
    |            ^
  2 |],
  "input": "new bar(x, ?, 2, ?)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/top-level-argument-binary-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '?' (1:1)
> 1 | ? + x
    | ^
  2 |],
  "input": "? + x
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/partial-application/top-level-argument-method-call/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token: '?.' (1:2)
> 1 | ?.f()
    |  ^
  2 |],
  "input": "?.f()
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/invalid-proposal/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | a |> b
    |    ^
  2 |],
  "input": "a |> b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/no-plugin/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | a |> b
    |    ^
  2 |],
  "input": "a |> b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-and-array-in-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> [y => y + 1] |> z => z * 2
    |         ^
  2 |],
  "input": "x => x |> [y => y + 1] |> z => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-and-array-in-body-with-operator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> [y => y + 1 |> z => z * 2]
    |         ^
  2 |],
  "input": "x => x |> [y => y + 1 |> z => z * 2]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-and-assignment-in-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> foo(x = 1 |> foo);
    |         ^
  2 |],
  "input": "x => x |> foo(x = 1 |> foo);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-and-object-in-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> { method: y => y + 1 } |> z => z * 2
    |         ^
  2 |],
  "input": "x => x |> { method: y => y + 1 } |> z => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-and-object-in-body-with-operator/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> { method: y => y + 1 |> z => z * 2 }
    |         ^
  2 |],
  "input": "x => x |> { method: y => y + 1 |> z => z * 2 }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-at-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> inc |> double
    |         ^
  2 |],
  "input": "x => x |> inc |> double
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-at-head-indented/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> inc |> double
    |         ^
  2 |],
  "input": "x => x |> inc |> double
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-in-body-alt-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> (y => y + 3 |> (b => y + b))
    |         ^
  2 |],
  "input": "x => x |> (y => y + 3 |> (b => y + b))
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-in-body-no-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> y => y + 1 |> z => z * 2
    |         ^
  2 |],
  "input": "x => x |> y => y + 1 |> z => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-in-body-no-parens-indented/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:4]: Unexpected token: '>' (2:4)
  1 | x => x
> 2 |   |> y => y + 1
    |    ^
  3 |   |> z => z * 2
  4 |],
  "input": "x => x
  |> y => y + 1
  |> z => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-in-body-no-parens-indented-with-arg-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:4]: Unexpected token: '>' (2:4)
  1 | (x) => x
> 2 |   |> (y) => y + 1
    |    ^
  3 |   |> (z) => z * 2
  4 |],
  "input": "(x) => x
  |> (y) => y + 1
  |> (z) => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-arrow-in-body-no-parens-with-arg-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unexpected token: '>' (1:11)
> 1 | (x) => x |> (y) => y + 1 |> (z) => z * 2
    |           ^
  2 |],
  "input": "(x) => x |> (y) => y + 1 |> (z) => z * 2
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function test () {
> 2 |   return x |> await |> f;
    |             ^
  3 | }
  4 |],
  "input": "async function test () {
  return x |> await |> f;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-await-end/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function test () {
> 2 |   return x |> await;
    |             ^
  3 | }
  4 |],
  "input": "async function test () {
  return x |> await;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-ban-await-f/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function test () {
> 2 |   return x |> await f;
    |             ^
  3 | }
  4 |],
  "input": "async function test () {
  return x |> await f;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-base/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | a |> b
    |    ^
  2 |],
  "input": "a |> b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-chain/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> inc |> double
    |    ^
  2 |],
  "input": "x |> inc |> double
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-fsharp-invalid-primary-topic/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> # + 1
    |    ^
  2 |],
  "input": "x |> # + 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-arrow-requires-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> x => x + 1;
    |     ^
  2 |],
  "input": "10 |> x => x + 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-arrow-requires-parens-with-parend-args/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> (x) => x + 1;
    |     ^
  2 |],
  "input": "10 |> (x) => x + 1;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-await-requires-parens/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function foo() {
> 2 |   return a |> (await f) |> g;
    |             ^
  3 | }
  4 |],
  "input": "async function foo() {
  return a |> (await f) |> g;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-ban-await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function foo() {
> 2 |   return a |> await |> f;
    |             ^
  3 | }
  4 |],
  "input": "async function foo() {
  return a |> await |> f;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-ban-await-f/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function foo() {
> 2 |   return a |> await f |> g;
    |             ^
  3 | }
  4 |],
  "input": "async function foo() {
  return a |> await f |> g;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-base/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | a |> b
    |    ^
  2 |],
  "input": "a |> b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-chain/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> inc |> double
    |         ^
  2 |],
  "input": "x => x |> inc |> double
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-multiline/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:4]: Unexpected token: '>' (2:4)
  1 | let result = "hello"
> 2 |   |> doubleSay
    |    ^
  3 |   |> capitalize
  4 |   |> exclaim;
  5 |],
  "input": "let result = \\"hello\\"
  |> doubleSay
  |> capitalize
  |> exclaim;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-precedence/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | 4 || 9 |> inc;
    |         ^
  2 | 10 |> f || h |> inc
  3 |],
  "input": "4 || 9 |> inc;
10 |> f || h |> inc
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-with-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> (x => x + 1);
    |     ^
  2 |],
  "input": "10 |> (x => x + 1);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-minimal-with-arrow-parend-params/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> ((x) => x + 1);
    |     ^
  2 |],
  "input": "10 |> ((x) => x + 1);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-bare-style,-function-calls,-chained,-multiline/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:2]: Unexpected token: '>' (2:2)
  1 | let result = "hello"
> 2 | |> doubleSay
    |  ^
  3 | |> text.capitalize
  4 | |> a.b.exclaim;
  5 |],
  "input": "let result = \\"hello\\"
|> doubleSay
|> text.capitalize
|> a.b.exclaim;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-bare-style,-function-calls,-chained,-single-line-arrow-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | x => x |> number.inc |> double
    |         ^
  2 |],
  "input": "x => x |> number.inc |> double
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-bare-style,-function-calls,-single,-identifier/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> f
    |        ^
  2 |],
  "input": "value |> f
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-bare-style,-function-calls,-single,-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> a.b.c.f
    |        ^
  2 |],
  "input": "value |> a.b.c.f
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-bare-style,-head-with-topic-reference-pair/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unexpected token: '>' (1:9)
> 1 | (1, 2) |> f;
    |         ^
  2 |],
  "input": "(1, 2) |> f;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-invalid-hash-token,-followed-by-digit/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> #42;
    |    ^
  2 |],
  "input": "x |> #42;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-nested-pipelines,-topic-style-with-arrow-function-with-bare-style,-no-outer-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> ($ => $ |> f)
    |    ^
  2 |],
  "input": "x |> ($ => $ |> f)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-nested-pipelines,-topic-style-with-arrow-function-with-topic-style,-no-inner-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> ($ => # |> $ + 1)
    |    ^
  2 |],
  "input": "x |> ($ => # |> $ + 1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-nested-pipelines,-topic-style-with-arrow-function-with-topic-style,-no-outer-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> ($ => $ |> #)
    |    ^
  2 |],
  "input": "x |> ($ => $ |> #)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-nested-pipelines,-topic-style-with-inner-topic-style,-no-inner-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> (# |> f())
    |    ^
  2 |],
  "input": "x |> (# |> f())
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-nested-pipelines,-topic-style-with-inner-topic-style,-no-outer-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> ($ |> f)
    |    ^
  2 |],
  "input": "x |> ($ |> f)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-sequence-style,-body-with-topic-reference-pair-followed-by-bare-style-pipeline-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> (#, #) |> h;
    |     ^
  2 |],
  "input": "10 |> (#, #) |> h;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-sequence-style,-body-with-topic-reference-pair-then-end/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> (#, #);
    |     ^
  2 |],
  "input": "10 |> (#, #);
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-computed,-no-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> a[b]
    |        ^
  2 |],
  "input": "value |> a[b]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-no-topic-reference,-addition/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> a + b
    |        ^
  2 |],
  "input": "value |> a + b
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-no-topic-reference,-class-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> class { }
    |        ^
  2 |],
  "input": "value |> class { }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-no-topic-reference,-function-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> function (x) { return; }
    |        ^
  2 |],
  "input": "value |> function (x) { return; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-do-while-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { do x += #; while (x < 50); }
    |        ^
  2 |],
  "input": "value |> do { do x += #; while (x < 50); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-for-await-of-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Unexpected token: '>' (2:10)
  1 | async function af () {
> 2 |   value |> do { for await (const e of sequence) #; }
    |          ^
  3 | }
  4 |],
  "input": "async function af () {
  value |> do { for await (const e of sequence) #; }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-for-classic-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (let i = 0; i < n; i += 1) #; }
    |        ^
  2 |],
  "input": "value |> do { for (let i = 0; i < n; i += 1) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-for-in-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (e in object) #; }
    |        ^
  2 |],
  "input": "value |> do { for (e in object) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-for-of-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (e of sequence) #; }
    |        ^
  2 |],
  "input": "value |> do { for (e of sequence) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-try-statement,-outer-topic-reference-in-catch-clause/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   try { JSON.parse(#); }
  3 |   catch (error) { console.error(#); }
  4 | }],
  "input": "value |> do {
  try { JSON.parse(#); }
  catch (error) { console.error(#); }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-while-loop,-outer-topic-reference-in-loop-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { while (x < 50) x += #; }
    |        ^
  2 |],
  "input": "value |> do { while (x < 50) x += #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unbound-topic,-do-expression,-with-statement,-outer-topic-reference-in-with-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { with ({}) #; }
    |        ^
  2 |],
  "input": "value |> do { with ({}) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-topic-style,-unparenthesized-arrow-function-with-bare-parameter-and-bare-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Unexpected token: '>' (1:5)
> 1 | 10 |> x => x + #;
    |     ^
  2 |],
  "input": "10 |> x => x + #;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-unbound-topic,-inner-class-in-pipeline-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> class { constructor () { this.x = #; } }
    |    ^
  2 |],
  "input": "x |> class { constructor () { this.x = #; } }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-unbound-topic,-inner-function-in-pipeline-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> function () { # }
    |    ^
  2 |],
  "input": "x |> function () { # }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-unbound-topic,-pipeline-head-in-inner-function-in-pipeline-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> function () { # |> # }
    |    ^
  2 |],
  "input": "x |> function () { # |> # }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-error,-unbound-topic,-simple/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: '#' not followed by identifier (1:5)
> 1 | 1 + #
    |     ^
  2 |],
  "input": "1 + #
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-nested-pipelines,-topic-style-with-arrow-function-with-bare-style/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> (() => # |> f)
    |    ^
  2 |],
  "input": "x |> (() => # |> f)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-nested-pipelines,-topic-style-with-arrow-function-with-topic-style/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> ($ => # |> f(#, $))
    |    ^
  2 |],
  "input": "x |> ($ => # |> f(#, $))
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-nested-pipelines,-topic-style-with-inner-bare-style/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> (# |> f)
    |    ^
  2 |],
  "input": "x |> (# |> f)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-nested-pipelines,-topic-style-with-inner-topic-style/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Unexpected token: '>' (1:4)
> 1 | x |> (# |> f(#, x))
    |    ^
  2 |],
  "input": "x |> (# |> f(#, x))
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-addition,-single-line-arrow-function,-topic-reference-first/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> # + 1
    |        ^
  2 |],
  "input": "value |> # + 1
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-addition,-single-line-arrow-function,-topic-reference-last/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> 1 + #
    |        ^
  2 |],
  "input": "value |> 1 + #
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-async-await/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | async function f () {
> 2 |   return x |> await #;
    |             ^
  3 | }
  4 |],
  "input": "async function f () {
  return x |> await #;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-do-while-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { do x += 1; while (x < #); }
    |        ^
  2 |],
  "input": "value |> do { do x += 1; while (x < #); }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-for-await-of-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:10]: Unexpected token: '>' (2:10)
  1 | async function af () {
> 2 |   value |> do { for await (const e of #) e; }
    |          ^
  3 | }
  4 |],
  "input": "async function af () {
  value |> do { for await (const e of #) e; }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-for-classic-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (let i = #; predicate(i, #); i += #) i; }
    |        ^
  2 |],
  "input": "value |> do { for (let i = #; predicate(i, #); i += #) i; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-for-in-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (e in #) e; }
    |        ^
  2 |],
  "input": "value |> do { for (e in #) e; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-for-of-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { for (e of #) e; }
    |        ^
  2 |],
  "input": "value |> do { for (e of #) e; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-identity/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { #; }
    |        ^
  2 |],
  "input": "value |> do { #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-if-statement,-outer-topic-reference-in-else-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { if (yes) null; else if (no) #; }
    |        ^
  2 |],
  "input": "value |> do { if (yes) null; else if (no) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-if-statement,-outer-topic-reference-in-else-if-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { if (yes) null; else #; }
    |        ^
  2 |],
  "input": "value |> do { if (yes) null; else #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-if-statement,-outer-topic-reference-in-if-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { if (yes) #; }
    |        ^
  2 |],
  "input": "value |> do { if (yes) #; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-if-statement,-outer-topic-reference-in-if-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { if (#) 1; else 0; }
    |        ^
  2 |],
  "input": "value |> do { if (#) 1; else 0; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-switch-statement,-outer-topic-reference-in-switch-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   switch (number) {
  3 |     case 0: #;
  4 |     case 1: # + 1;],
  "input": "value |> do {
  switch (number) {
    case 0: #;
    case 1: # + 1;
    default: # + 10;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-switch-statement,-outer-topic-reference-in-switch-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   switch (#) {
  3 |     case 0: 50;
  4 |     case 1: 60;],
  "input": "value |> do {
  switch (#) {
    case 0: 50;
    case 1: 60;
    default: 70;
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-try-statement,-outer-topic-reference-in-finally-clause-with-catch-and-finally/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   try { JSON.parse(whatever); }
  3 |   catch (error) { console.error(error); }
  4 |   finally { something(#); }],
  "input": "value |> do {
  try { JSON.parse(whatever); }
  catch (error) { console.error(error); }
  finally { something(#); }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-try-statement,-outer-topic-reference-in-try-clause-with-catch/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   try { JSON.parse(#); }
  3 |   catch (error) { console.error(error); }
  4 | }],
  "input": "value |> do {
  try { JSON.parse(#); }
  catch (error) { console.error(error); }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-try-statement,-outer-topic-reference-in-try-clause-with-catch-and-finally/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do {
    |        ^
  2 |   try { JSON.parse(#); }
  3 |   catch (error) { console.error(error); }
  4 |   finally { something(); }],
  "input": "value |> do {
  try { JSON.parse(#); }
  catch (error) { console.error(error); }
  finally { something(); }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-do-expression,-while-loop,-outer-topic-reference-in-loop-head/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> do { while (x < #) x += 1; }
    |        ^
  2 |],
  "input": "value |> do { while (x < #) x += 1; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-function-call,-identifier-with-topic-reference/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> f(#)
    |        ^
  2 |],
  "input": "value |> f(#)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-function-definition,-outer-topic-reference-in-default-parameter-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> function (x = #) { return x; }
    |        ^
  2 |],
  "input": "value |> function (x = #) { return x; }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-generator-yield/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:13]: Unexpected token: '>' (2:13)
  1 | function * f () {
> 2 |   return x |> (yield #);
    |             ^
  3 | }
  4 |],
  "input": "function * f () {
  return x |> (yield #);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-identity,-parenthesized/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> (#)
    |        ^
  2 |],
  "input": "value |> (#)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-identity,-unparenthesized/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> #
    |        ^
  2 |],
  "input": "value |> #
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-mixed-pipeline-plugins/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> #
    |        ^
  2 |],
  "input": "value |> #
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/pipeline-operator/proposal-smart-topic-style,-parenthesized-single-line-arrow-function,-with-empty-parameter-list-and-bare-addition-body/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:8]: Unexpected token: '>' (1:8)
> 1 | value |> (() => # + 1)
    |        ^
  2 |],
  "input": "value |> (() => # + 1)
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/private-in/private-in-escaped-sequence/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:3]: '#' not followed by identifier (2:3)
  1 | class Foo {
> 2 |   #\\u{61} = 1;
    |   ^
  3 |   test() {
  4 |     #\\u{61} in {};
  5 |   }],
  "input": "class Foo {
  #\\\\u{61} = 1;
  test() {
    #\\\\u{61} in {};
  }
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/as-jsx-attribute-value-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unexpected token: '|' (1:14)
> 1 | <Card card={{|title: "foo"|}}></Card>
    |              ^
  2 |],
  "input": "<Card card={{|title: \\"foo\\"|}}></Card>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/as-jsx-attribute-value-hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: '#' not followed by identifier (1:13)
> 1 | <Card card={#{title: "foo"}}></Card>
    |             ^
  2 |],
  "input": "<Card card={#{title: \\"foo\\"}}></Card>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '||' (1:3)
> 1 | {||};
    |   ^
  2 |
  3 | {| a: 1, b: 2, c: 3 |};
  4 |],
  "input": "{||};

{| a: 1, b: 2, c: 3 |};

{|
  a: 1,
  b: {|
    c: 3,
  |},
|};

[||];

[|1, 2, 3|];

[|1, [|2, 3|], 4|];
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/bar-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:6]: Unexpected token: ':' (1:6)
> 1 | var a: {| x: number |} = {| x: 2 |}
    |      ^
  2 |],
  "input": "var a: {| x: number |} = {| x: 2 |}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/disambiguate-regex-hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: '#' not followed by identifier (1:2)
> 1 | (#{})/foo
    |  ^
  2 |],
  "input": "(#{})/foo
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{};
    | ^
  2 |
  3 | #{ a: 1, b: 2, c: 3 };
  4 |],
  "input": "#{};

#{ a: 1, b: 2, c: 3 };

#{
  a: 1,
  b: #{
    c: 3,
  },
};

#[];

#[1, 2, 3];

#[1, #[2, 3], 4];
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-record-end-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '|' (1:1)
> 1 | |}
    | ^
  2 |],
  "input": "|}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-record-start-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token: '|' (1:2)
> 1 | {|
    |  ^
  2 |],
  "input": "{|
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-record-start-hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{
    | ^
  2 |],
  "input": "#{
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-tuple-end-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: Unexpected token: '|' (1:1)
> 1 | |]
    | ^
  2 |],
  "input": "|]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-tuple-start-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Unexpected token: '|' (1:2)
> 1 | [|
    |  ^
  2 |],
  "input": "[|
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/incorrect-type-tuple-start-hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #[
    | ^
  2 |],
  "input": "#[
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-record-method/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{
    | ^
  2 |   a() {},
  3 |   async b() {},
  4 |   get c() {},],
  "input": "#{
  a() {},
  async b() {},
  get c() {},
  set d(_) {},
  *e() {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-record-proto/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{ __proto__: null }
    | ^
  2 |],
  "input": "#{ __proto__: null }
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-tuple-holes/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #[,]
    | ^
  2 |],
  "input": "#[,]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-type-bar-record/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '||' (1:3)
> 1 | {||}
    |   ^
  2 |],
  "input": "{||}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-type-bar-tuple/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '||' (1:3)
> 1 | [||]
    |   ^
  2 |],
  "input": "[||]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-type-hash-record/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{}
    | ^
  2 |],
  "input": "#{}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/invalid-type-hash-tuple/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #[]
    | ^
  2 |],
  "input": "#[]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/not-enabled-bar/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Unexpected token: '||' (1:3)
> 1 | {||}
    |   ^
  2 |],
  "input": "{||}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/not-enabled-hash/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #{};
    | ^
  2 |],
  "input": "#{};
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/record-and-tuple/tuple-trailing-comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:1]: '#' not followed by identifier (1:1)
> 1 | #[1,]
    | ^
  2 |],
  "input": "#[1,]
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/45/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:14]: Unterminated template literal (1:14)
> 1 | sampleTag\`\\u{\`
    |              ^],
  "input": "sampleTag\`\\\\u{\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/47/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Unterminated template literal (1:22)
> 1 | sampleTag\`left\${0}\\u{\`
    |                      ^],
  "input": "sampleTag\`left\${0}\\\\u{\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/53/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unterminated template literal (1:16)
> 1 | sampleTag\`\\u{\\\`\`
    |                ^],
  "input": "sampleTag\`\\\\u{\\\\\`\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/54/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:16]: Unexpected token: 'identifier' (1:16)
> 1 | sampleTag\`\\u{\\\`\${0}right\`
    |                ^],
  "input": "sampleTag\`\\\\u{\\\\\`\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/55/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unterminated template literal (1:24)
> 1 | sampleTag\`left\${0}\\u{\\\`\`
    |                        ^],
  "input": "sampleTag\`left\${0}\\\\u{\\\\\`\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/56/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:24]: Unexpected token: 'identifier' (1:24)
> 1 | sampleTag\`left\${0}\\u{\\\`\${1}right\`
    |                        ^],
  "input": "sampleTag\`left\${0}\\\\u{\\\\\`\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/57/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:15]: Unterminated template literal (1:15)
> 1 | sampleTag\`\\u{0\`
    |               ^],
  "input": "sampleTag\`\\\\u{0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-tagged/59/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:23]: Unterminated template literal (1:23)
> 1 | sampleTag\`left\${0}\\u{0\`
    |                       ^],
  "input": "sampleTag\`left\${0}\\\\u{0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/1/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\01\`
    |  ^],
  "input": "\`\\\\01\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/2/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\01\${0}right\`
    |  ^],
  "input": "\`\\\\01\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/3/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Octal escape sequences are not allowed in template strings (1:10)
> 1 | \`left\${0}\\01\`
    |          ^],
  "input": "\`left\${0}\\\\01\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/4/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Octal escape sequences are not allowed in template strings (1:10)
> 1 | \`left\${0}\\01\${1}right\`
    |          ^],
  "input": "\`left\${0}\\\\01\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/5/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\1\`
    |  ^],
  "input": "\`\\\\1\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/6/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:2]: Octal escape sequences are not allowed in template strings (1:2)
> 1 | \`\\1\${0}right\`
    |  ^],
  "input": "\`\\\\1\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Octal escape sequences are not allowed in template strings (1:10)
> 1 | \`left\${0}\\1\`
    |          ^],
  "input": "\`left\${0}\\\\1\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/8/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:10]: Octal escape sequences are not allowed in template strings (1:10)
> 1 | \`left\${0}\\1\${1}right\`
    |          ^],
  "input": "\`left\${0}\\\\1\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/9/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\xg\`
    |   ^],
  "input": "\`\\\\xg\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/10/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\xg\${0}right\`
    |   ^],
  "input": "\`\\\\xg\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/11/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\xg\`
    |           ^],
  "input": "\`left\${0}\\\\xg\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/12/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\xg\${1}right\`
    |           ^],
  "input": "\`left\${0}\\\\xg\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/13/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\xAg\`
    |    ^],
  "input": "\`\\\\xAg\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/14/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\xAg\${0}right\`
    |    ^],
  "input": "\`\\\\xAg\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/15/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\xAg\`
    |            ^],
  "input": "\`left\${0}\\\\xAg\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/16/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\xAg\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\xAg\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/17/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u0\`
    |   ^],
  "input": "\`\\\\u0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/18/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u0\${0}right\`
    |   ^],
  "input": "\`\\\\u0\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/19/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u0\`
    |           ^],
  "input": "\`left\${0}\\\\u0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/20/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u0\${1}right\`
    |           ^],
  "input": "\`left\${0}\\\\u0\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/21/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u0g\`
    |   ^],
  "input": "\`\\\\u0g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/22/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u0g\${0}right\`
    |   ^],
  "input": "\`\\\\u0g\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/23/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u0g\`
    |           ^],
  "input": "\`left\${0}\\\\u0g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/24/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u0g\${1}right\`
    |           ^],
  "input": "\`left\${0}\\\\u0g\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/25/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u00g\`
    |   ^],
  "input": "\`\\\\u00g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/26/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u00g\${0}right\`
    |   ^],
  "input": "\`\\\\u00g\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/27/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u00g\`
    |           ^],
  "input": "\`left\${0}\\\\u00g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/28/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u00g\${1}right\`
    |           ^],
  "input": "\`left\${0}\\\\u00g\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/29/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u000g\`
    |   ^],
  "input": "\`\\\\u000g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/30/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:3]: Invalid hexadecimal escape sequence (1:3)
> 1 | \`\\u000g\${0}right\`
    |   ^],
  "input": "\`\\\\u000g\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/31/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u000g\`
    |           ^],
  "input": "\`left\${0}\\\\u000g\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/32/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Invalid hexadecimal escape sequence (1:11)
> 1 | \`left\${0}\\u000g\${1}right\`
    |           ^],
  "input": "\`left\${0}\\\\u000g\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/37/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{-0}\`
    |    ^],
  "input": "\`\\\\u{-0}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/38/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{-0}\${0}right\`
    |    ^],
  "input": "\`\\\\u{-0}\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/39/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{-0}\`
    |            ^],
  "input": "\`left\${0}\\\\u{-0}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/40/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{-0}\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{-0}\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/41/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{g}\`
    |    ^],
  "input": "\`\\\\u{g}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/42/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{g}\${0}right\`
    |    ^],
  "input": "\`\\\\u{g}\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/43/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{g}\`
    |            ^],
  "input": "\`left\${0}\\\\u{g}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/44/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{g}\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{g}\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/45/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\`
    |    ^],
  "input": "\`\\\\u{\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/46/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\${0}right\`
    |    ^],
  "input": "\`\\\\u{\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/47/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\`
    |            ^],
  "input": "\`left\${0}\\\\u{\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/48/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/49/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\\\\`
    |    ^],
  "input": "\`\\\\u{\\\\\\\\\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/50/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\\\\${0}right\`
    |    ^],
  "input": "\`\\\\u{\\\\\\\\\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/51/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\\\\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\\\\\\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/52/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\\\\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\\\\\\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/53/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\\`\`
    |    ^],
  "input": "\`\\\\u{\\\\\`\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/54/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\\`\${0}right\`
    |    ^],
  "input": "\`\\\\u{\\\\\`\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/55/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\\`\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\\`\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/56/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\\`\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\\`\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/57/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Invalid hexadecimal escape sequence (1:5)
> 1 | \`\\u{0\`
    |     ^],
  "input": "\`\\\\u{0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/58/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: Invalid hexadecimal escape sequence (1:5)
> 1 | \`\\u{0\${0}right\`
    |     ^],
  "input": "\`\\\\u{0\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/59/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid hexadecimal escape sequence (1:13)
> 1 | \`left\${0}\\u{0\`
    |             ^],
  "input": "\`left\${0}\\\\u{0\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/60/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Invalid hexadecimal escape sequence (1:13)
> 1 | \`left\${0}\\u{0\${1}right\`
    |             ^],
  "input": "\`left\${0}\\\\u{0\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/61/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\u{0}\`
    |    ^],
  "input": "\`\\\\u{\\\\u{0}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/62/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:4]: Invalid hexadecimal escape sequence (1:4)
> 1 | \`\\u{\\u{0}\${0}right\`
    |    ^],
  "input": "\`\\\\u{\\\\u{0}\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/63/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\u{0}\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\u{0}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/64/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: Invalid hexadecimal escape sequence (1:12)
> 1 | \`left\${0}\\u{\\u{0}\${1}right\`
    |            ^],
  "input": "\`left\${0}\\\\u{\\\\u{0}\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/65/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unicode codepoint must not be greater than 0x10FFFF (1:9)
> 1 | \`\\u{110000}\`
    |         ^],
  "input": "\`\\\\u{110000}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/66/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Unicode codepoint must not be greater than 0x10FFFF (1:9)
> 1 | \`\\u{110000}\${0}right\`
    |         ^],
  "input": "\`\\\\u{110000}\${0}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/67/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unicode codepoint must not be greater than 0x10FFFF (1:17)
> 1 | \`left\${0}\\u{110000}\`
    |                 ^],
  "input": "\`left\${0}\\\\u{110000}\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/template-literal-invalid-escapes-untagged/68/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:17]: Unicode codepoint must not be greater than 0x10FFFF (1:17)
> 1 | \`left\${0}\\u{110000}\${1}right\`
    |                 ^],
  "input": "\`left\${0}\\\\u{110000}\${1}right\`",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/throw-expression/comma/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Unexpected token: 'throw' (2:8)
  1 | function test() {
> 2 |   (throw 1, 2);
    |        ^
  3 | }
  4 |],
  "input": "function test() {
  (throw 1, 2);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/throw-expression/expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Unexpected token: 'throw' (2:8)
  1 | function test() {
> 2 |   (throw 1);
    |        ^
  3 | }
  4 |],
  "input": "function test() {
  (throw 1);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/throw-expression/logical/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:15]: Unexpected token: 'throw' (2:15)
  1 | function test() {
> 2 |   true && throw 1;
    |               ^
  3 | }
  4 |],
  "input": "function test() {
  true && throw 1;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/throw-expression/not-enabled/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: Unexpected token: 'throw' (2:8)
  1 | function test() {
> 2 |   (throw 1, 2);
    |        ^
  3 | }
  4 |],
  "input": "function test() {
  (throw 1, 2);
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/export-default/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:20]: 'Await' may not be used as an identifier in this context (1:20)
> 1 | export default await 0;
    |                    ^],
  "input": "export default await 0;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/for-await-module/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Expected '(' (1:9)
> 1 | for await (const a of b);
    |         ^],
  "input": "for await (const a of b);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/for-await-script/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:9]: Expected '(' (1:9)
> 1 | for await (const a of b);
    |         ^],
  "input": "for await (const a of b);",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/inside-arrow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: 'Await' may not be used as an identifier in this context (1:11)
> 1 | () => await 0;
    |           ^
  2 |],
  "input": "() => await 0;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/inside-block/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:7]: 'Await' may not be used as an identifier in this context (2:7)
  1 | if (true) {
> 2 |   await 0;
    |       ^
  3 | }],
  "input": "if (true) {
  await 0;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/inside-class-property/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:11]: 'Await' may not be used as an identifier in this context (2:11)
  1 | export class C {
> 2 |   p = await 0;
    |           ^
  3 | }
  4 |],
  "input": "export class C {
  p = await 0;
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/inside-function/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:7]: 'Await' may not be used as an identifier in this context (2:7)
  1 | function fn() {
> 2 |   await 0;
    |       ^
  3 | }],
  "input": "function fn() {
  await 0;
}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/inside-property-key/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:8]: 'Await' may not be used as an identifier in this context (2:8)
  1 | class C {
> 2 |   [await 0] = () => {}
    |        ^
  3 | }
  4 |],
  "input": "class C {
  [await 0] = () => {}
}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/top-level-module/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'Await' may not be used as an identifier in this context (1:5)
> 1 | await 0;
    |     ^],
  "input": "await 0;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/top-level-script/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'Await' may not be used as an identifier in this context (1:5)
> 1 | await 0;
    |     ^],
  "input": "await 0;",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/unambiguous-ambiguous-allowAwaitOutsideFunction/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'Await' may not be used as an identifier in this context (1:5)
> 1 | await 0
    |     ^
  2 |
  3 | await + 0
  4 | await - 0],
  "input": "await 0

await + 0
await - 0
await ( 0 )
await [ 0 ]
await / 0 /u
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/top-level-await/unambiguous-module/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:5]: 'Await' may not be used as an identifier in this context (1:5)
> 1 | await 0
    |     ^
  2 |
  3 | await + 0
  4 | await - 0],
  "input": "await 0

await + 0
await - 0
await ( 0 )
await [ 0 ]
await / 0 /u
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/uncategorised/41/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:22]: Leading decorators must be attached to a class declaration (1:22)
> 1 | @foo function bar() {}
    |                      ^],
  "input": "@foo function bar() {}",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/uncategorised/42/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:18]: Trailing decorator may be followed by method (1:18)
> 1 | class Foo { @foo }
    |                  ^],
  "input": "class Foo { @foo }",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/experimental/uncategorised/49/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Unexpected token: '@' (1:13)
> 1 | var obj = { @foo bar: 'wow' };
    |             ^],
  "input": "var obj = { @foo bar: 'wow' };",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/basic/jsx-text-closing-angle-bracket-babel-7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>></div>
> 2 |],
  "input": "<div>></div>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/_no-plugin-ts-type-param/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>() => {}
> 2 |],
  "input": "<div>() => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/_no-plugin-ts-type-param-no-flow/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>() => {}
> 2 |],
  "input": "<div>() => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/_no-plugin-type-param/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>() => {}
> 2 |],
  "input": "<div>() => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/adjacent-tags/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:32]: Unexpected token: '</' (1:32)
> 1 | var x = <div>one</div><div>two</div>;
    |                                ^
  2 |],
  "input": "var x = <div>one</div><div>two</div>;
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/attribute-arbitrary-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:12]: JSX value should be either an expression or a quoted JSX text (1:12)
> 1 | <Foo bar=bar() />
    |            ^
  2 |],
  "input": "<Foo bar=bar() />
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/attribute-empty-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: JSX attributes must only be assigned a non-empty 'expression' (1:11)
> 1 | <foo bar={} />
    |           ^
  2 |],
  "input": "<foo bar={} />
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/attribute-sequence-expression/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Expected '}' (1:29)
> 1 | <div key={console.log('foo'), JSON.stringify(props)} />
    |                             ^],
  "input": "<div key={console.log('foo'), JSON.stringify(props)} />",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/attribute-sequence-expression-babel-7/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:29]: Expected '}' (1:29)
> 1 | <div key={console.log('foo'), JSON.stringify(props)} />
    |                             ^],
  "input": "<div key={console.log('foo'), JSON.stringify(props)} />",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/attributes-in-fragment/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected '>' (2:0)
  1 | < key="nope"></>
> 2 |],
  "input": "< key=\\"nope\\"></>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/jsx-text-closing-angle-bracket/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>></div>
> 2 |],
  "input": "<div>></div>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/nested-fragment-unclosed/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <><></>
> 2 |],
  "input": "<><></>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/unclosed-jsx-element/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <div>() => {}
> 2 |],
  "input": "<div>() => {}
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/unclosed-tag/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Unexpected token (2:0)
  1 | <foo>yes
> 2 |],
  "input": "<foo>yes
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/unterminated-string/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:11]: Unterminated string literal (1:11)
> 1 | <foo bar="
    |           ^
  2 |],
  "input": "<foo bar=\\"
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/wrong-closing-tag/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected corresponding JSX closing tag for Bar (2:0)
  1 | <Foo></Bar>
> 2 |],
  "input": "<Foo></Bar>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/wrong-closing-tag-fragment/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [1:13]: Expected '>' (1:13)
> 1 | <></something>
    |             ^
  2 |],
  "input": "<></something>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;

exports[`tests-compare/fixtures/babel/packages/babel-parser/test/fixtures/jsx/errors/wrong-opening-tag-fragment/input.js
Options: {"parser":"meriyah"} 1`] = `
Object {
  "error": [SyntaxError: [2:0]: Expected '>' (2:0)
  1 | <something></>
> 2 |],
  "input": "<something></>
",
  "options": Object {
    "parser": "meriyah",
  },
}
`;
